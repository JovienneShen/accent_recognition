2025-03-15 11:06:26,017 - speechbrain.core - INFO - Beginning experiment!
2025-03-15 11:06:26,018 - speechbrain.core - INFO - Experiment folder: results/ECAPA-TDNN-241229-70k-filtered-0.7/1986
2025-03-15 11:06:27,134 - speechbrain.utils.superpowers - DEBUG - aiohappyeyeballs==2.4.3
aiohttp==3.11.0
aiosignal==1.3.1
asttokens==2.4.1
async-timeout==5.0.1
attrs==24.2.0
audioread==3.0.1
black==24.3.0
certifi==2024.8.30
cffi==1.17.1
cfgv==3.4.0
charset-normalizer==3.4.0
click==8.1.7
colorama==0.4.6
contourpy==1.3.1
cycler==0.12.1
datasets==3.1.0
decorator==5.1.1
dill==0.3.8
distlib==0.3.9
docstring_parser_fork==0.0.9
exceptiongroup==1.2.2
executing==2.1.0
filelock==3.16.1
flake8==7.0.0
fonttools==4.55.0
frozenlist==1.5.0
fsspec==2024.9.0
huggingface-hub==0.26.2
HyperPyYAML==1.2.2
identify==2.6.1
idna==3.10
iniconfig==2.0.0
ipdb==0.13.13
ipython==8.29.0
isort==5.13.2
jedi==0.19.1
Jinja2==3.1.4
joblib==1.4.2
kiwisolver==1.4.7
lazy_loader==0.4
librosa==0.9.2
llvmlite==0.43.0
MarkupSafe==3.0.2
matplotlib==3.9.2
matplotlib-inline==0.1.7
mccabe==0.7.0
mpmath==1.3.0
msgpack==1.1.0
multidict==6.1.0
multiprocess==0.70.16
mypy-extensions==1.0.0
networkx==3.4.2
nodeenv==1.9.1
numba==0.60.0
numpy==1.26.4
packaging==24.1
pandas==2.2.3
parso==0.8.4
pathspec==0.12.1
pillow==11.0.0
platformdirs==4.3.6
pluggy==1.5.0
pooch==1.8.2
pre_commit==4.0.1
prompt_toolkit==3.0.48
propcache==0.2.0
pure_eval==0.2.3
pyarrow==18.0.0
pycodestyle==2.11.0
pycparser==2.22
pydoclint==0.4.1
pyflakes==3.2.0
Pygments==2.18.0
pygtrie==2.5.0
pyparsing==3.2.0
pytest==7.4.0
python-dateutil==2.9.0.post0
pytz==2024.2
PyYAML==6.0.2
regex==2024.11.6
requests==2.32.3
resampy==0.4.3
ruamel.yaml==0.18.6
ruamel.yaml.clib==0.2.12
safetensors==0.4.5
scikit-learn==1.5.2
scipy==1.12.0
sentencepiece==0.2.0
six==1.16.0
soundfile==0.12.1
soxr==0.5.0.post1
speechbrain==0.5.13
stack-data==0.6.3
sympy==1.13.1
threadpoolctl==3.5.0
tokenizers==0.20.3
tomli==2.0.2
torch==1.13.0+cu117
torchaudio==0.13.0+cu117
torchvision==0.14.0+cu117
tqdm==4.67.0
traitlets==5.14.3
transformers==4.46.2
typing_extensions==4.12.2
tzdata==2024.2
urllib3==2.2.3
virtualenv==20.27.1
wcwidth==0.2.13
xxhash==3.5.0
yamllint==1.35.1
yarl==1.17.1


2025-03-15 11:06:27,307 - speechbrain.utils.superpowers - DEBUG - a2ff115


2025-03-15 11:06:28,269 - speechbrain.dataio.encoder - DEBUG - Would load categorical encoding from results/ECAPA-TDNN-241229-70k-filtered-0.7/1986/save\accent_encoder.txt, but file doesn't exist yet.
2025-03-15 11:06:28,535 - speechbrain.dataio.encoder - INFO - Load called, but CategoricalEncoder is not empty. Loaded data will overwrite everything. This is normal if there is e.g. an unk label defined at init.
2025-03-15 11:06:28,537 - speechbrain.dataio.encoder - DEBUG - Loaded categorical encoding from results/ECAPA-TDNN-241229-70k-filtered-0.7/1986/save\accent_encoder.txt
2025-03-15 11:06:28,538 - speechbrain.utils.parameter_transfer - DEBUG - Collecting files (or symlinks) for pretraining in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save.
2025-03-15 11:06:28,540 - speechbrain.pretrained.fetching - INFO - Fetch embedding_model.ckpt: Delegating to Huggingface hub, source speechbrain/spkrec-ecapa-voxceleb.
2025-03-15 11:06:28,652 - urllib3.connectionpool - DEBUG - Starting new HTTPS connection (1): huggingface.co:443
2025-03-15 11:06:29,065 - urllib3.connectionpool - DEBUG - https://huggingface.co:443 "HEAD /speechbrain/spkrec-ecapa-voxceleb/resolve/main/embedding_model.ckpt HTTP/11" 302 0
2025-03-15 11:06:29,080 - speechbrain.utils.parameter_transfer - INFO - Loading pretrained files for: embedding_model
2025-03-15 11:06:29,575 - speechbrain.core - INFO - Info: device arg overridden by command line input to: cuda:0
2025-03-15 11:06:29,623 - speechbrain.core - INFO - 20.8M trainable parameters in AID
2025-03-15 11:06:29,626 - speechbrain.utils.checkpoints - INFO - Would load a checkpoint here, but none found yet.
2025-03-15 11:06:29,626 - speechbrain.utils.epoch_loop - INFO - Going into epoch 1
2025-03-15 11:06:30,126 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=81)
           2	LOAD_GLOBAL(arg=0, lineno=86)
           4	LOAD_FAST(arg=0, lineno=86)
           6	LOAD_FAST(arg=1, lineno=86)
           8	LOAD_FAST(arg=2, lineno=86)
          10	LOAD_FAST(arg=3, lineno=86)
          12	LOAD_FAST(arg=4, lineno=86)
          14	LOAD_FAST(arg=5, lineno=86)
          16	LOAD_FAST(arg=6, lineno=86)
          18	CALL_FUNCTION(arg=7, lineno=86)
          20	POP_TOP(arg=None, lineno=86)
          22	LOAD_CONST(arg=0, lineno=86)
          24	RETURN_VALUE(arg=None, lineno=86)
2025-03-15 11:06:30,126 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-15 11:06:30,127 - numba.core.byteflow - DEBUG - stack: []
2025-03-15 11:06:30,127 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-15 11:06:30,127 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=81)
2025-03-15 11:06:30,127 - numba.core.byteflow - DEBUG - stack []
2025-03-15 11:06:30,127 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=86)
2025-03-15 11:06:30,127 - numba.core.byteflow - DEBUG - stack []
2025-03-15 11:06:30,127 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=86)
2025-03-15 11:06:30,127 - numba.core.byteflow - DEBUG - stack ['$2load_global.0']
2025-03-15 11:06:30,127 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=86)
2025-03-15 11:06:30,127 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1']
2025-03-15 11:06:30,127 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=86)
2025-03-15 11:06:30,127 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1', '$t_out6.2']
2025-03-15 11:06:30,127 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_FAST(arg=3, lineno=86)
2025-03-15 11:06:30,128 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1', '$t_out6.2', '$interp_win8.3']
2025-03-15 11:06:30,128 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=4, lineno=86)
2025-03-15 11:06:30,128 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1', '$t_out6.2', '$interp_win8.3', '$interp_delta10.4']
2025-03-15 11:06:30,128 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=5, lineno=86)
2025-03-15 11:06:30,128 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1', '$t_out6.2', '$interp_win8.3', '$interp_delta10.4', '$num_table12.5']
2025-03-15 11:06:30,128 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=6, lineno=86)
2025-03-15 11:06:30,128 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1', '$t_out6.2', '$interp_win8.3', '$interp_delta10.4', '$num_table12.5', '$scale14.6']
2025-03-15 11:06:30,128 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=CALL_FUNCTION(arg=7, lineno=86)
2025-03-15 11:06:30,128 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1', '$t_out6.2', '$interp_win8.3', '$interp_delta10.4', '$num_table12.5', '$scale14.6', '$y16.7']
2025-03-15 11:06:30,128 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=POP_TOP(arg=None, lineno=86)
2025-03-15 11:06:30,128 - numba.core.byteflow - DEBUG - stack ['$18call_function.8']
2025-03-15 11:06:30,128 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_CONST(arg=0, lineno=86)
2025-03-15 11:06:30,128 - numba.core.byteflow - DEBUG - stack []
2025-03-15 11:06:30,128 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=RETURN_VALUE(arg=None, lineno=86)
2025-03-15 11:06:30,128 - numba.core.byteflow - DEBUG - stack ['$const22.9']
2025-03-15 11:06:30,128 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-15 11:06:30,129 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-15 11:06:30,129 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-03-15 11:06:30,129 - numba.core.byteflow - DEBUG - defmap: {}
2025-03-15 11:06:30,129 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-03-15 11:06:30,129 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-03-15 11:06:30,129 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-03-15 11:06:30,129 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-03-15 11:06:30,129 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-15 11:06:30,129 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'res': '$t_out6.2'}), (8, {'res': '$interp_win8.3'}), (10, {'res': '$interp_delta10.4'}), (12, {'res': '$num_table12.5'}), (14, {'res': '$scale14.6'}), (16, {'res': '$y16.7'}), (18, {'func': '$2load_global.0', 'args': ['$x4.1', '$t_out6.2', '$interp_win8.3', '$interp_delta10.4', '$num_table12.5', '$scale14.6', '$y16.7'], 'res': '$18call_function.8'}), (22, {'res': '$const22.9'}), (24, {'retval': '$const22.9', 'castval': '$24return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-15 11:06:30,130 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $2load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x000001D06D260040>)) ['$2load_global.0']
    $18call_function.8 = call $2load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$2load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None) ['$18call_function.8', '$2load_global.0', 'interp_delta', 'interp_win', 'num_table', 'scale', 't_out', 'x', 'y']
    $const22.9 = const(NoneType, None)       ['$const22.9']
    $24return_value.10 = cast(value=$const22.9) ['$24return_value.10', '$const22.9']
    return $24return_value.10                ['$24return_value.10']

2025-03-15 11:06:30,137 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-15 11:06:30,137 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001D071DE1000>
2025-03-15 11:06:30,137 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-15 11:06:30,137 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-03-15 11:06:30,137 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-03-15 11:06:30,138 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-03-15 11:06:30,138 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-03-15 11:06:30,138 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-03-15 11:06:30,138 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-03-15 11:06:30,138 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x000001D06D260040>))
2025-03-15 11:06:30,138 - numba.core.ssa - DEBUG - on stmt: $18call_function.8 = call $2load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$2load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,138 - numba.core.ssa - DEBUG - on stmt: $const22.9 = const(NoneType, None)
2025-03-15 11:06:30,138 - numba.core.ssa - DEBUG - on stmt: $24return_value.10 = cast(value=$const22.9)
2025-03-15 11:06:30,138 - numba.core.ssa - DEBUG - on stmt: return $24return_value.10
2025-03-15 11:06:30,139 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$18call_function.8': [(<numba.core.ir.Assign object at 0x000001D071DE26B0>,
                                     0)],
             '$24return_value.10': [(<numba.core.ir.Assign object at 0x000001D071DE2950>,
                                     0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x000001D071DE22C0>,
                                  0)],
             '$const22.9': [(<numba.core.ir.Assign object at 0x000001D071DE27D0>,
                             0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x000001D071DE1DE0>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x000001D071DE1CC0>,
                             0)],
             'num_table': [(<numba.core.ir.Assign object at 0x000001D071DE1F00>,
                            0)],
             'scale': [(<numba.core.ir.Assign object at 0x000001D071DE2020>,
                        0)],
             't_out': [(<numba.core.ir.Assign object at 0x000001D071DE1BA0>,
                        0)],
             'x': [(<numba.core.ir.Assign object at 0x000001D071DE1A80>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x000001D071DE2140>, 0)]})
2025-03-15 11:06:30,139 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001D071DE1000>
2025-03-15 11:06:30,154 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=7)
           2	LOAD_GLOBAL(arg=0, lineno=9)
           4	LOAD_FAST(arg=5, lineno=9)
           6	LOAD_FAST(arg=4, lineno=9)
           8	BINARY_MULTIPLY(arg=None, lineno=9)
          10	CALL_FUNCTION(arg=1, lineno=9)
          12	STORE_FAST(arg=7, lineno=9)
          14	LOAD_CONST(arg=1, lineno=10)
          16	STORE_FAST(arg=8, lineno=10)
          18	LOAD_CONST(arg=2, lineno=12)
          20	STORE_FAST(arg=9, lineno=12)
          22	LOAD_CONST(arg=1, lineno=13)
          24	STORE_FAST(arg=10, lineno=13)
          26	LOAD_CONST(arg=1, lineno=14)
          28	STORE_FAST(arg=11, lineno=14)
          30	LOAD_CONST(arg=2, lineno=15)
          32	STORE_FAST(arg=12, lineno=15)
          34	LOAD_CONST(arg=1, lineno=16)
          36	STORE_FAST(arg=13, lineno=16)
          38	LOAD_CONST(arg=1, lineno=17)
          40	STORE_FAST(arg=14, lineno=17)
          42	LOAD_FAST(arg=2, lineno=19)
          44	LOAD_ATTR(arg=1, lineno=19)
          46	LOAD_CONST(arg=2, lineno=19)
          48	BINARY_SUBSCR(arg=None, lineno=19)
          50	STORE_FAST(arg=15, lineno=19)
          52	LOAD_FAST(arg=0, lineno=20)
          54	LOAD_ATTR(arg=1, lineno=20)
          56	LOAD_CONST(arg=2, lineno=20)
          58	BINARY_SUBSCR(arg=None, lineno=20)
          60	STORE_FAST(arg=16, lineno=20)
          62	LOAD_FAST(arg=1, lineno=21)
          64	LOAD_ATTR(arg=1, lineno=21)
          66	LOAD_CONST(arg=2, lineno=21)
          68	BINARY_SUBSCR(arg=None, lineno=21)
          70	STORE_FAST(arg=17, lineno=21)
          72	LOAD_GLOBAL(arg=2, lineno=23)
          74	LOAD_FAST(arg=17, lineno=23)
          76	CALL_FUNCTION(arg=1, lineno=23)
          78	GET_ITER(arg=None, lineno=23)
>         80	FOR_ITER(arg=148, lineno=23)
          82	STORE_FAST(arg=18, lineno=23)
          84	LOAD_FAST(arg=1, lineno=24)
          86	LOAD_FAST(arg=18, lineno=24)
          88	BINARY_SUBSCR(arg=None, lineno=24)
          90	STORE_FAST(arg=8, lineno=24)
          92	LOAD_GLOBAL(arg=0, lineno=27)
          94	LOAD_FAST(arg=8, lineno=27)
          96	CALL_FUNCTION(arg=1, lineno=27)
          98	STORE_FAST(arg=9, lineno=27)
         100	LOAD_FAST(arg=5, lineno=30)
         102	LOAD_FAST(arg=8, lineno=30)
         104	LOAD_FAST(arg=9, lineno=30)
         106	BINARY_SUBTRACT(arg=None, lineno=30)
         108	BINARY_MULTIPLY(arg=None, lineno=30)
         110	STORE_FAST(arg=10, lineno=30)
         112	LOAD_FAST(arg=10, lineno=33)
         114	LOAD_FAST(arg=4, lineno=33)
         116	BINARY_MULTIPLY(arg=None, lineno=33)
         118	STORE_FAST(arg=11, lineno=33)
         120	LOAD_GLOBAL(arg=0, lineno=34)
         122	LOAD_FAST(arg=11, lineno=34)
         124	CALL_FUNCTION(arg=1, lineno=34)
         126	STORE_FAST(arg=12, lineno=34)
         128	LOAD_FAST(arg=11, lineno=37)
         130	LOAD_FAST(arg=12, lineno=37)
         132	BINARY_SUBTRACT(arg=None, lineno=37)
         134	STORE_FAST(arg=13, lineno=37)
         136	LOAD_GLOBAL(arg=3, lineno=40)
         138	LOAD_FAST(arg=9, lineno=40)
         140	LOAD_CONST(arg=3, lineno=40)
         142	BINARY_ADD(arg=None, lineno=40)
         144	LOAD_FAST(arg=15, lineno=40)
         146	LOAD_FAST(arg=12, lineno=40)
         148	BINARY_SUBTRACT(arg=None, lineno=40)
         150	LOAD_FAST(arg=7, lineno=40)
         152	BINARY_FLOOR_DIVIDE(arg=None, lineno=40)
         154	CALL_FUNCTION(arg=2, lineno=40)
         156	STORE_FAST(arg=19, lineno=40)
         158	LOAD_GLOBAL(arg=4, lineno=41)
         160	LOAD_FAST(arg=19, lineno=41)
         162	CALL_FUNCTION(arg=1, lineno=41)
         164	GET_ITER(arg=None, lineno=41)
>        166	FOR_ITER(arg=34, lineno=41)
         168	STORE_FAST(arg=20, lineno=41)
         170	LOAD_FAST(arg=2, lineno=44)
         172	LOAD_FAST(arg=12, lineno=44)
         174	LOAD_FAST(arg=20, lineno=44)
         176	LOAD_FAST(arg=7, lineno=44)
         178	BINARY_MULTIPLY(arg=None, lineno=44)
         180	BINARY_ADD(arg=None, lineno=44)
         182	BINARY_SUBSCR(arg=None, lineno=44)
         184	LOAD_FAST(arg=13, lineno=45)
         186	LOAD_FAST(arg=3, lineno=45)
         188	LOAD_FAST(arg=12, lineno=45)
         190	LOAD_FAST(arg=20, lineno=45)
         192	LOAD_FAST(arg=7, lineno=45)
         194	BINARY_MULTIPLY(arg=None, lineno=45)
         196	BINARY_ADD(arg=None, lineno=45)
         198	BINARY_SUBSCR(arg=None, lineno=45)
         200	BINARY_MULTIPLY(arg=None, lineno=45)
         202	BINARY_ADD(arg=None, lineno=44)
         204	STORE_FAST(arg=14, lineno=43)
         206	LOAD_FAST(arg=6, lineno=47)
         208	LOAD_FAST(arg=18, lineno=47)
         210	DUP_TOP_TWO(arg=None, lineno=47)
         212	BINARY_SUBSCR(arg=None, lineno=47)
         214	LOAD_FAST(arg=14, lineno=47)
         216	LOAD_FAST(arg=0, lineno=47)
         218	LOAD_FAST(arg=9, lineno=47)
         220	LOAD_FAST(arg=20, lineno=47)
         222	BINARY_SUBTRACT(arg=None, lineno=47)
         224	BINARY_SUBSCR(arg=None, lineno=47)
         226	BINARY_MULTIPLY(arg=None, lineno=47)
         228	INPLACE_ADD(arg=None, lineno=47)
         230	ROT_THREE(arg=None, lineno=47)
         232	STORE_SUBSCR(arg=None, lineno=47)
         234	JUMP_ABSOLUTE(arg=84, lineno=47)
>        236	LOAD_FAST(arg=5, lineno=50)
         238	LOAD_FAST(arg=10, lineno=50)
         240	BINARY_SUBTRACT(arg=None, lineno=50)
         242	STORE_FAST(arg=10, lineno=50)
         244	LOAD_FAST(arg=10, lineno=53)
         246	LOAD_FAST(arg=4, lineno=53)
         248	BINARY_MULTIPLY(arg=None, lineno=53)
         250	STORE_FAST(arg=11, lineno=53)
         252	LOAD_GLOBAL(arg=0, lineno=54)
         254	LOAD_FAST(arg=11, lineno=54)
         256	CALL_FUNCTION(arg=1, lineno=54)
         258	STORE_FAST(arg=12, lineno=54)
         260	LOAD_FAST(arg=11, lineno=57)
         262	LOAD_FAST(arg=12, lineno=57)
         264	BINARY_SUBTRACT(arg=None, lineno=57)
         266	STORE_FAST(arg=13, lineno=57)
         268	LOAD_GLOBAL(arg=3, lineno=60)
         270	LOAD_FAST(arg=16, lineno=60)
         272	LOAD_FAST(arg=9, lineno=60)
         274	BINARY_SUBTRACT(arg=None, lineno=60)
         276	LOAD_CONST(arg=3, lineno=60)
         278	BINARY_SUBTRACT(arg=None, lineno=60)
         280	LOAD_FAST(arg=15, lineno=60)
         282	LOAD_FAST(arg=12, lineno=60)
         284	BINARY_SUBTRACT(arg=None, lineno=60)
         286	LOAD_FAST(arg=7, lineno=60)
         288	BINARY_FLOOR_DIVIDE(arg=None, lineno=60)
         290	CALL_FUNCTION(arg=2, lineno=60)
         292	STORE_FAST(arg=21, lineno=60)
         294	LOAD_GLOBAL(arg=4, lineno=61)
         296	LOAD_FAST(arg=21, lineno=61)
         298	CALL_FUNCTION(arg=1, lineno=61)
         300	GET_ITER(arg=None, lineno=61)
>        302	FOR_ITER(arg=36, lineno=61)
         304	STORE_FAST(arg=22, lineno=61)
         306	LOAD_FAST(arg=2, lineno=63)
         308	LOAD_FAST(arg=12, lineno=63)
         310	LOAD_FAST(arg=22, lineno=63)
         312	LOAD_FAST(arg=7, lineno=63)
         314	BINARY_MULTIPLY(arg=None, lineno=63)
         316	BINARY_ADD(arg=None, lineno=63)
         318	BINARY_SUBSCR(arg=None, lineno=63)
         320	LOAD_FAST(arg=13, lineno=64)
         322	LOAD_FAST(arg=3, lineno=64)
         324	LOAD_FAST(arg=12, lineno=64)
         326	LOAD_FAST(arg=22, lineno=64)
         328	LOAD_FAST(arg=7, lineno=64)
         330	BINARY_MULTIPLY(arg=None, lineno=64)
         332	BINARY_ADD(arg=None, lineno=64)
         334	BINARY_SUBSCR(arg=None, lineno=64)
         336	BINARY_MULTIPLY(arg=None, lineno=64)
         338	BINARY_ADD(arg=None, lineno=63)
         340	STORE_FAST(arg=14, lineno=62)
         342	LOAD_FAST(arg=6, lineno=66)
         344	LOAD_FAST(arg=18, lineno=66)
         346	DUP_TOP_TWO(arg=None, lineno=66)
         348	BINARY_SUBSCR(arg=None, lineno=66)
         350	LOAD_FAST(arg=14, lineno=66)
         352	LOAD_FAST(arg=0, lineno=66)
         354	LOAD_FAST(arg=9, lineno=66)
         356	LOAD_FAST(arg=22, lineno=66)
         358	BINARY_ADD(arg=None, lineno=66)
         360	LOAD_CONST(arg=3, lineno=66)
         362	BINARY_ADD(arg=None, lineno=66)
         364	BINARY_SUBSCR(arg=None, lineno=66)
         366	BINARY_MULTIPLY(arg=None, lineno=66)
         368	INPLACE_ADD(arg=None, lineno=66)
         370	ROT_THREE(arg=None, lineno=66)
         372	STORE_SUBSCR(arg=None, lineno=66)
         374	JUMP_ABSOLUTE(arg=152, lineno=66)
>        376	JUMP_ABSOLUTE(arg=41, lineno=61)
>        378	LOAD_CONST(arg=0, lineno=23)
         380	RETURN_VALUE(arg=None, lineno=23)
2025-03-15 11:06:30,155 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-03-15 11:06:30,155 - numba.core.byteflow - DEBUG - stack: []
2025-03-15 11:06:30,155 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-03-15 11:06:30,156 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=7)
2025-03-15 11:06:30,156 - numba.core.byteflow - DEBUG - stack []
2025-03-15 11:06:30,156 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=9)
2025-03-15 11:06:30,156 - numba.core.byteflow - DEBUG - stack []
2025-03-15 11:06:30,157 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=5, lineno=9)
2025-03-15 11:06:30,157 - numba.core.byteflow - DEBUG - stack ['$2load_global.0']
2025-03-15 11:06:30,157 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=4, lineno=9)
2025-03-15 11:06:30,157 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$scale4.1']
2025-03-15 11:06:30,158 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=BINARY_MULTIPLY(arg=None, lineno=9)
2025-03-15 11:06:30,158 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$scale4.1', '$num_table6.2']
2025-03-15 11:06:30,158 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=CALL_FUNCTION(arg=1, lineno=9)
2025-03-15 11:06:30,158 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$8binary_multiply.3']
2025-03-15 11:06:30,158 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=STORE_FAST(arg=7, lineno=9)
2025-03-15 11:06:30,159 - numba.core.byteflow - DEBUG - stack ['$10call_function.4']
2025-03-15 11:06:30,159 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_CONST(arg=1, lineno=10)
2025-03-15 11:06:30,159 - numba.core.byteflow - DEBUG - stack []
2025-03-15 11:06:30,159 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=8, lineno=10)
2025-03-15 11:06:30,159 - numba.core.byteflow - DEBUG - stack ['$const14.5']
2025-03-15 11:06:30,160 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=2, lineno=12)
2025-03-15 11:06:30,160 - numba.core.byteflow - DEBUG - stack []
2025-03-15 11:06:30,160 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=STORE_FAST(arg=9, lineno=12)
2025-03-15 11:06:30,160 - numba.core.byteflow - DEBUG - stack ['$const18.6']
2025-03-15 11:06:30,160 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_CONST(arg=1, lineno=13)
2025-03-15 11:06:30,161 - numba.core.byteflow - DEBUG - stack []
2025-03-15 11:06:30,161 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=STORE_FAST(arg=10, lineno=13)
2025-03-15 11:06:30,161 - numba.core.byteflow - DEBUG - stack ['$const22.7']
2025-03-15 11:06:30,161 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=14)
2025-03-15 11:06:30,161 - numba.core.byteflow - DEBUG - stack []
2025-03-15 11:06:30,162 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=11, lineno=14)
2025-03-15 11:06:30,162 - numba.core.byteflow - DEBUG - stack ['$const26.8']
2025-03-15 11:06:30,162 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=2, lineno=15)
2025-03-15 11:06:30,162 - numba.core.byteflow - DEBUG - stack []
2025-03-15 11:06:30,162 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=STORE_FAST(arg=12, lineno=15)
2025-03-15 11:06:30,163 - numba.core.byteflow - DEBUG - stack ['$const30.9']
2025-03-15 11:06:30,163 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=16)
2025-03-15 11:06:30,163 - numba.core.byteflow - DEBUG - stack []
2025-03-15 11:06:30,163 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=STORE_FAST(arg=13, lineno=16)
2025-03-15 11:06:30,163 - numba.core.byteflow - DEBUG - stack ['$const34.10']
2025-03-15 11:06:30,164 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=1, lineno=17)
2025-03-15 11:06:30,164 - numba.core.byteflow - DEBUG - stack []
2025-03-15 11:06:30,164 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=STORE_FAST(arg=14, lineno=17)
2025-03-15 11:06:30,164 - numba.core.byteflow - DEBUG - stack ['$const38.11']
2025-03-15 11:06:30,164 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_FAST(arg=2, lineno=19)
2025-03-15 11:06:30,165 - numba.core.byteflow - DEBUG - stack []
2025-03-15 11:06:30,165 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_ATTR(arg=1, lineno=19)
2025-03-15 11:06:30,165 - numba.core.byteflow - DEBUG - stack ['$interp_win42.12']
2025-03-15 11:06:30,165 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=LOAD_CONST(arg=2, lineno=19)
2025-03-15 11:06:30,165 - numba.core.byteflow - DEBUG - stack ['$44load_attr.13']
2025-03-15 11:06:30,166 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=BINARY_SUBSCR(arg=None, lineno=19)
2025-03-15 11:06:30,166 - numba.core.byteflow - DEBUG - stack ['$44load_attr.13', '$const46.14']
2025-03-15 11:06:30,166 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=STORE_FAST(arg=15, lineno=19)
2025-03-15 11:06:30,166 - numba.core.byteflow - DEBUG - stack ['$48binary_subscr.15']
2025-03-15 11:06:30,166 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=20)
2025-03-15 11:06:30,167 - numba.core.byteflow - DEBUG - stack []
2025-03-15 11:06:30,167 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_ATTR(arg=1, lineno=20)
2025-03-15 11:06:30,167 - numba.core.byteflow - DEBUG - stack ['$x52.16']
2025-03-15 11:06:30,167 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=LOAD_CONST(arg=2, lineno=20)
2025-03-15 11:06:30,167 - numba.core.byteflow - DEBUG - stack ['$54load_attr.17']
2025-03-15 11:06:30,167 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=BINARY_SUBSCR(arg=None, lineno=20)
2025-03-15 11:06:30,167 - numba.core.byteflow - DEBUG - stack ['$54load_attr.17', '$const56.18']
2025-03-15 11:06:30,167 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=STORE_FAST(arg=16, lineno=20)
2025-03-15 11:06:30,168 - numba.core.byteflow - DEBUG - stack ['$58binary_subscr.19']
2025-03-15 11:06:30,168 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=21)
2025-03-15 11:06:30,168 - numba.core.byteflow - DEBUG - stack []
2025-03-15 11:06:30,168 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=LOAD_ATTR(arg=1, lineno=21)
2025-03-15 11:06:30,168 - numba.core.byteflow - DEBUG - stack ['$t_out62.20']
2025-03-15 11:06:30,168 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_CONST(arg=2, lineno=21)
2025-03-15 11:06:30,168 - numba.core.byteflow - DEBUG - stack ['$64load_attr.21']
2025-03-15 11:06:30,169 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=BINARY_SUBSCR(arg=None, lineno=21)
2025-03-15 11:06:30,169 - numba.core.byteflow - DEBUG - stack ['$64load_attr.21', '$const66.22']
2025-03-15 11:06:30,169 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=STORE_FAST(arg=17, lineno=21)
2025-03-15 11:06:30,169 - numba.core.byteflow - DEBUG - stack ['$68binary_subscr.23']
2025-03-15 11:06:30,169 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=LOAD_GLOBAL(arg=2, lineno=23)
2025-03-15 11:06:30,169 - numba.core.byteflow - DEBUG - stack []
2025-03-15 11:06:30,169 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=17, lineno=23)
2025-03-15 11:06:30,169 - numba.core.byteflow - DEBUG - stack ['$72load_global.24']
2025-03-15 11:06:30,170 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=CALL_FUNCTION(arg=1, lineno=23)
2025-03-15 11:06:30,170 - numba.core.byteflow - DEBUG - stack ['$72load_global.24', '$n_out74.25']
2025-03-15 11:06:30,170 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=GET_ITER(arg=None, lineno=23)
2025-03-15 11:06:30,170 - numba.core.byteflow - DEBUG - stack ['$76call_function.26']
2025-03-15 11:06:30,170 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$78get_iter.27',), blockstack=(), npush=0)]
2025-03-15 11:06:30,170 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-03-15 11:06:30,170 - numba.core.byteflow - DEBUG - stack: ['$phi80.0']
2025-03-15 11:06:30,171 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-03-15 11:06:30,171 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=FOR_ITER(arg=148, lineno=23)
2025-03-15 11:06:30,171 - numba.core.byteflow - DEBUG - stack ['$phi80.0']
2025-03-15 11:06:30,171 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=378, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
2025-03-15 11:06:30,171 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=378 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
2025-03-15 11:06:30,171 - numba.core.byteflow - DEBUG - stack: []
2025-03-15 11:06:30,171 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=378 nstack_initial=0)
2025-03-15 11:06:30,171 - numba.core.byteflow - DEBUG - dispatch pc=378, inst=LOAD_CONST(arg=0, lineno=23)
2025-03-15 11:06:30,172 - numba.core.byteflow - DEBUG - stack []
2025-03-15 11:06:30,172 - numba.core.byteflow - DEBUG - dispatch pc=380, inst=RETURN_VALUE(arg=None, lineno=23)
2025-03-15 11:06:30,172 - numba.core.byteflow - DEBUG - stack ['$const378.0']
2025-03-15 11:06:30,172 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-03-15 11:06:30,172 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=2)])
2025-03-15 11:06:30,172 - numba.core.byteflow - DEBUG - stack: ['$phi82.0', '$phi82.1']
2025-03-15 11:06:30,172 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=2)
2025-03-15 11:06:30,172 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=STORE_FAST(arg=18, lineno=23)
2025-03-15 11:06:30,173 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$phi82.1']
2025-03-15 11:06:30,173 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_FAST(arg=1, lineno=24)
2025-03-15 11:06:30,173 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-03-15 11:06:30,173 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=18, lineno=24)
2025-03-15 11:06:30,173 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$t_out84.2']
2025-03-15 11:06:30,173 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=BINARY_SUBSCR(arg=None, lineno=24)
2025-03-15 11:06:30,173 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$t_out84.2', '$t86.3']
2025-03-15 11:06:30,174 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=STORE_FAST(arg=8, lineno=24)
2025-03-15 11:06:30,174 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$88binary_subscr.4']
2025-03-15 11:06:30,174 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=LOAD_GLOBAL(arg=0, lineno=27)
2025-03-15 11:06:30,174 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-03-15 11:06:30,174 - numba.core.byteflow - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=8, lineno=27)
2025-03-15 11:06:30,174 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$92load_global.5']
2025-03-15 11:06:30,174 - numba.core.byteflow - DEBUG - dispatch pc=96, inst=CALL_FUNCTION(arg=1, lineno=27)
2025-03-15 11:06:30,174 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$92load_global.5', '$time_register94.6']
2025-03-15 11:06:30,175 - numba.core.byteflow - DEBUG - dispatch pc=98, inst=STORE_FAST(arg=9, lineno=27)
2025-03-15 11:06:30,175 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$96call_function.7']
2025-03-15 11:06:30,175 - numba.core.byteflow - DEBUG - dispatch pc=100, inst=LOAD_FAST(arg=5, lineno=30)
2025-03-15 11:06:30,175 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-03-15 11:06:30,175 - numba.core.byteflow - DEBUG - dispatch pc=102, inst=LOAD_FAST(arg=8, lineno=30)
2025-03-15 11:06:30,175 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$scale100.8']
2025-03-15 11:06:30,175 - numba.core.byteflow - DEBUG - dispatch pc=104, inst=LOAD_FAST(arg=9, lineno=30)
2025-03-15 11:06:30,175 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$scale100.8', '$time_register102.9']
2025-03-15 11:06:30,176 - numba.core.byteflow - DEBUG - dispatch pc=106, inst=BINARY_SUBTRACT(arg=None, lineno=30)
2025-03-15 11:06:30,176 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$scale100.8', '$time_register102.9', '$n104.10']
2025-03-15 11:06:30,176 - numba.core.byteflow - DEBUG - dispatch pc=108, inst=BINARY_MULTIPLY(arg=None, lineno=30)
2025-03-15 11:06:30,176 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$scale100.8', '$106binary_subtract.11']
2025-03-15 11:06:30,176 - numba.core.byteflow - DEBUG - dispatch pc=110, inst=STORE_FAST(arg=10, lineno=30)
2025-03-15 11:06:30,176 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$108binary_multiply.12']
2025-03-15 11:06:30,176 - numba.core.byteflow - DEBUG - dispatch pc=112, inst=LOAD_FAST(arg=10, lineno=33)
2025-03-15 11:06:30,176 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-03-15 11:06:30,177 - numba.core.byteflow - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=4, lineno=33)
2025-03-15 11:06:30,177 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$frac112.13']
2025-03-15 11:06:30,177 - numba.core.byteflow - DEBUG - dispatch pc=116, inst=BINARY_MULTIPLY(arg=None, lineno=33)
2025-03-15 11:06:30,177 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$frac112.13', '$num_table114.14']
2025-03-15 11:06:30,177 - numba.core.byteflow - DEBUG - dispatch pc=118, inst=STORE_FAST(arg=11, lineno=33)
2025-03-15 11:06:30,177 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$116binary_multiply.15']
2025-03-15 11:06:30,177 - numba.core.byteflow - DEBUG - dispatch pc=120, inst=LOAD_GLOBAL(arg=0, lineno=34)
2025-03-15 11:06:30,177 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-03-15 11:06:30,177 - numba.core.byteflow - DEBUG - dispatch pc=122, inst=LOAD_FAST(arg=11, lineno=34)
2025-03-15 11:06:30,177 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$120load_global.16']
2025-03-15 11:06:30,177 - numba.core.byteflow - DEBUG - dispatch pc=124, inst=CALL_FUNCTION(arg=1, lineno=34)
2025-03-15 11:06:30,177 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$120load_global.16', '$index_frac122.17']
2025-03-15 11:06:30,178 - numba.core.byteflow - DEBUG - dispatch pc=126, inst=STORE_FAST(arg=12, lineno=34)
2025-03-15 11:06:30,178 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$124call_function.18']
2025-03-15 11:06:30,178 - numba.core.byteflow - DEBUG - dispatch pc=128, inst=LOAD_FAST(arg=11, lineno=37)
2025-03-15 11:06:30,178 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-03-15 11:06:30,178 - numba.core.byteflow - DEBUG - dispatch pc=130, inst=LOAD_FAST(arg=12, lineno=37)
2025-03-15 11:06:30,178 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$index_frac128.19']
2025-03-15 11:06:30,178 - numba.core.byteflow - DEBUG - dispatch pc=132, inst=BINARY_SUBTRACT(arg=None, lineno=37)
2025-03-15 11:06:30,178 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$index_frac128.19', '$offset130.20']
2025-03-15 11:06:30,178 - numba.core.byteflow - DEBUG - dispatch pc=134, inst=STORE_FAST(arg=13, lineno=37)
2025-03-15 11:06:30,178 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$132binary_subtract.21']
2025-03-15 11:06:30,178 - numba.core.byteflow - DEBUG - dispatch pc=136, inst=LOAD_GLOBAL(arg=3, lineno=40)
2025-03-15 11:06:30,178 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-03-15 11:06:30,178 - numba.core.byteflow - DEBUG - dispatch pc=138, inst=LOAD_FAST(arg=9, lineno=40)
2025-03-15 11:06:30,178 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$136load_global.22']
2025-03-15 11:06:30,178 - numba.core.byteflow - DEBUG - dispatch pc=140, inst=LOAD_CONST(arg=3, lineno=40)
2025-03-15 11:06:30,179 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$136load_global.22', '$n138.23']
2025-03-15 11:06:30,179 - numba.core.byteflow - DEBUG - dispatch pc=142, inst=BINARY_ADD(arg=None, lineno=40)
2025-03-15 11:06:30,179 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$136load_global.22', '$n138.23', '$const140.24']
2025-03-15 11:06:30,179 - numba.core.byteflow - DEBUG - dispatch pc=144, inst=LOAD_FAST(arg=15, lineno=40)
2025-03-15 11:06:30,179 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$136load_global.22', '$142binary_add.25']
2025-03-15 11:06:30,179 - numba.core.byteflow - DEBUG - dispatch pc=146, inst=LOAD_FAST(arg=12, lineno=40)
2025-03-15 11:06:30,179 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$136load_global.22', '$142binary_add.25', '$nwin144.26']
2025-03-15 11:06:30,179 - numba.core.byteflow - DEBUG - dispatch pc=148, inst=BINARY_SUBTRACT(arg=None, lineno=40)
2025-03-15 11:06:30,179 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$136load_global.22', '$142binary_add.25', '$nwin144.26', '$offset146.27']
2025-03-15 11:06:30,179 - numba.core.byteflow - DEBUG - dispatch pc=150, inst=LOAD_FAST(arg=7, lineno=40)
2025-03-15 11:06:30,179 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$136load_global.22', '$142binary_add.25', '$148binary_subtract.28']
2025-03-15 11:06:30,179 - numba.core.byteflow - DEBUG - dispatch pc=152, inst=BINARY_FLOOR_DIVIDE(arg=None, lineno=40)
2025-03-15 11:06:30,179 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$136load_global.22', '$142binary_add.25', '$148binary_subtract.28', '$index_step150.29']
2025-03-15 11:06:30,180 - numba.core.byteflow - DEBUG - dispatch pc=154, inst=CALL_FUNCTION(arg=2, lineno=40)
2025-03-15 11:06:30,180 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$136load_global.22', '$142binary_add.25', '$152binary_floor_divide.30']
2025-03-15 11:06:30,180 - numba.core.byteflow - DEBUG - dispatch pc=156, inst=STORE_FAST(arg=19, lineno=40)
2025-03-15 11:06:30,180 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$154call_function.31']
2025-03-15 11:06:30,180 - numba.core.byteflow - DEBUG - dispatch pc=158, inst=LOAD_GLOBAL(arg=4, lineno=41)
2025-03-15 11:06:30,180 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-03-15 11:06:30,180 - numba.core.byteflow - DEBUG - dispatch pc=160, inst=LOAD_FAST(arg=19, lineno=41)
2025-03-15 11:06:30,180 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$158load_global.32']
2025-03-15 11:06:30,180 - numba.core.byteflow - DEBUG - dispatch pc=162, inst=CALL_FUNCTION(arg=1, lineno=41)
2025-03-15 11:06:30,180 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$158load_global.32', '$i_max160.33']
2025-03-15 11:06:30,180 - numba.core.byteflow - DEBUG - dispatch pc=164, inst=GET_ITER(arg=None, lineno=41)
2025-03-15 11:06:30,180 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$162call_function.34']
2025-03-15 11:06:30,180 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=166, stack=('$phi82.0', '$164get_iter.35'), blockstack=(), npush=0)]
2025-03-15 11:06:30,181 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=166 nstack_initial=2)])
2025-03-15 11:06:30,181 - numba.core.byteflow - DEBUG - stack: ['$phi166.0', '$phi166.1']
2025-03-15 11:06:30,181 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=166 nstack_initial=2)
2025-03-15 11:06:30,181 - numba.core.byteflow - DEBUG - dispatch pc=166, inst=FOR_ITER(arg=34, lineno=41)
2025-03-15 11:06:30,181 - numba.core.byteflow - DEBUG - stack ['$phi166.0', '$phi166.1']
2025-03-15 11:06:30,181 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=236, stack=('$phi166.0',), blockstack=(), npush=0), Edge(pc=168, stack=('$phi166.0', '$phi166.1', '$166for_iter.3'), blockstack=(), npush=0)]
2025-03-15 11:06:30,181 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=236 nstack_initial=1), State(pc_initial=168 nstack_initial=3)])
2025-03-15 11:06:30,181 - numba.core.byteflow - DEBUG - stack: ['$phi236.0']
2025-03-15 11:06:30,181 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=236 nstack_initial=1)
2025-03-15 11:06:30,181 - numba.core.byteflow - DEBUG - dispatch pc=236, inst=LOAD_FAST(arg=5, lineno=50)
2025-03-15 11:06:30,181 - numba.core.byteflow - DEBUG - stack ['$phi236.0']
2025-03-15 11:06:30,181 - numba.core.byteflow - DEBUG - dispatch pc=238, inst=LOAD_FAST(arg=10, lineno=50)
2025-03-15 11:06:30,181 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$scale236.1']
2025-03-15 11:06:30,181 - numba.core.byteflow - DEBUG - dispatch pc=240, inst=BINARY_SUBTRACT(arg=None, lineno=50)
2025-03-15 11:06:30,182 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$scale236.1', '$frac238.2']
2025-03-15 11:06:30,182 - numba.core.byteflow - DEBUG - dispatch pc=242, inst=STORE_FAST(arg=10, lineno=50)
2025-03-15 11:06:30,182 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$240binary_subtract.3']
2025-03-15 11:06:30,182 - numba.core.byteflow - DEBUG - dispatch pc=244, inst=LOAD_FAST(arg=10, lineno=53)
2025-03-15 11:06:30,182 - numba.core.byteflow - DEBUG - stack ['$phi236.0']
2025-03-15 11:06:30,182 - numba.core.byteflow - DEBUG - dispatch pc=246, inst=LOAD_FAST(arg=4, lineno=53)
2025-03-15 11:06:30,182 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$frac244.4']
2025-03-15 11:06:30,182 - numba.core.byteflow - DEBUG - dispatch pc=248, inst=BINARY_MULTIPLY(arg=None, lineno=53)
2025-03-15 11:06:30,182 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$frac244.4', '$num_table246.5']
2025-03-15 11:06:30,182 - numba.core.byteflow - DEBUG - dispatch pc=250, inst=STORE_FAST(arg=11, lineno=53)
2025-03-15 11:06:30,182 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$248binary_multiply.6']
2025-03-15 11:06:30,182 - numba.core.byteflow - DEBUG - dispatch pc=252, inst=LOAD_GLOBAL(arg=0, lineno=54)
2025-03-15 11:06:30,182 - numba.core.byteflow - DEBUG - stack ['$phi236.0']
2025-03-15 11:06:30,183 - numba.core.byteflow - DEBUG - dispatch pc=254, inst=LOAD_FAST(arg=11, lineno=54)
2025-03-15 11:06:30,183 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$252load_global.7']
2025-03-15 11:06:30,183 - numba.core.byteflow - DEBUG - dispatch pc=256, inst=CALL_FUNCTION(arg=1, lineno=54)
2025-03-15 11:06:30,183 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$252load_global.7', '$index_frac254.8']
2025-03-15 11:06:30,183 - numba.core.byteflow - DEBUG - dispatch pc=258, inst=STORE_FAST(arg=12, lineno=54)
2025-03-15 11:06:30,183 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$256call_function.9']
2025-03-15 11:06:30,183 - numba.core.byteflow - DEBUG - dispatch pc=260, inst=LOAD_FAST(arg=11, lineno=57)
2025-03-15 11:06:30,183 - numba.core.byteflow - DEBUG - stack ['$phi236.0']
2025-03-15 11:06:30,183 - numba.core.byteflow - DEBUG - dispatch pc=262, inst=LOAD_FAST(arg=12, lineno=57)
2025-03-15 11:06:30,183 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$index_frac260.10']
2025-03-15 11:06:30,183 - numba.core.byteflow - DEBUG - dispatch pc=264, inst=BINARY_SUBTRACT(arg=None, lineno=57)
2025-03-15 11:06:30,183 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$index_frac260.10', '$offset262.11']
2025-03-15 11:06:30,183 - numba.core.byteflow - DEBUG - dispatch pc=266, inst=STORE_FAST(arg=13, lineno=57)
2025-03-15 11:06:30,183 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$264binary_subtract.12']
2025-03-15 11:06:30,184 - numba.core.byteflow - DEBUG - dispatch pc=268, inst=LOAD_GLOBAL(arg=3, lineno=60)
2025-03-15 11:06:30,184 - numba.core.byteflow - DEBUG - stack ['$phi236.0']
2025-03-15 11:06:30,184 - numba.core.byteflow - DEBUG - dispatch pc=270, inst=LOAD_FAST(arg=16, lineno=60)
2025-03-15 11:06:30,184 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$268load_global.13']
2025-03-15 11:06:30,184 - numba.core.byteflow - DEBUG - dispatch pc=272, inst=LOAD_FAST(arg=9, lineno=60)
2025-03-15 11:06:30,184 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$268load_global.13', '$n_orig270.14']
2025-03-15 11:06:30,184 - numba.core.byteflow - DEBUG - dispatch pc=274, inst=BINARY_SUBTRACT(arg=None, lineno=60)
2025-03-15 11:06:30,184 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$268load_global.13', '$n_orig270.14', '$n272.15']
2025-03-15 11:06:30,184 - numba.core.byteflow - DEBUG - dispatch pc=276, inst=LOAD_CONST(arg=3, lineno=60)
2025-03-15 11:06:30,184 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$268load_global.13', '$274binary_subtract.16']
2025-03-15 11:06:30,184 - numba.core.byteflow - DEBUG - dispatch pc=278, inst=BINARY_SUBTRACT(arg=None, lineno=60)
2025-03-15 11:06:30,184 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$268load_global.13', '$274binary_subtract.16', '$const276.17']
2025-03-15 11:06:30,184 - numba.core.byteflow - DEBUG - dispatch pc=280, inst=LOAD_FAST(arg=15, lineno=60)
2025-03-15 11:06:30,184 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$268load_global.13', '$278binary_subtract.18']
2025-03-15 11:06:30,185 - numba.core.byteflow - DEBUG - dispatch pc=282, inst=LOAD_FAST(arg=12, lineno=60)
2025-03-15 11:06:30,185 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$268load_global.13', '$278binary_subtract.18', '$nwin280.19']
2025-03-15 11:06:30,185 - numba.core.byteflow - DEBUG - dispatch pc=284, inst=BINARY_SUBTRACT(arg=None, lineno=60)
2025-03-15 11:06:30,185 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$268load_global.13', '$278binary_subtract.18', '$nwin280.19', '$offset282.20']
2025-03-15 11:06:30,185 - numba.core.byteflow - DEBUG - dispatch pc=286, inst=LOAD_FAST(arg=7, lineno=60)
2025-03-15 11:06:30,185 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$268load_global.13', '$278binary_subtract.18', '$284binary_subtract.21']
2025-03-15 11:06:30,185 - numba.core.byteflow - DEBUG - dispatch pc=288, inst=BINARY_FLOOR_DIVIDE(arg=None, lineno=60)
2025-03-15 11:06:30,185 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$268load_global.13', '$278binary_subtract.18', '$284binary_subtract.21', '$index_step286.22']
2025-03-15 11:06:30,185 - numba.core.byteflow - DEBUG - dispatch pc=290, inst=CALL_FUNCTION(arg=2, lineno=60)
2025-03-15 11:06:30,185 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$268load_global.13', '$278binary_subtract.18', '$288binary_floor_divide.23']
2025-03-15 11:06:30,185 - numba.core.byteflow - DEBUG - dispatch pc=292, inst=STORE_FAST(arg=21, lineno=60)
2025-03-15 11:06:30,185 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$290call_function.24']
2025-03-15 11:06:30,185 - numba.core.byteflow - DEBUG - dispatch pc=294, inst=LOAD_GLOBAL(arg=4, lineno=61)
2025-03-15 11:06:30,185 - numba.core.byteflow - DEBUG - stack ['$phi236.0']
2025-03-15 11:06:30,186 - numba.core.byteflow - DEBUG - dispatch pc=296, inst=LOAD_FAST(arg=21, lineno=61)
2025-03-15 11:06:30,186 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$294load_global.25']
2025-03-15 11:06:30,186 - numba.core.byteflow - DEBUG - dispatch pc=298, inst=CALL_FUNCTION(arg=1, lineno=61)
2025-03-15 11:06:30,186 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$294load_global.25', '$k_max296.26']
2025-03-15 11:06:30,186 - numba.core.byteflow - DEBUG - dispatch pc=300, inst=GET_ITER(arg=None, lineno=61)
2025-03-15 11:06:30,186 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$298call_function.27']
2025-03-15 11:06:30,186 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=302, stack=('$phi236.0', '$300get_iter.28'), blockstack=(), npush=0)]
2025-03-15 11:06:30,186 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=168 nstack_initial=3), State(pc_initial=302 nstack_initial=2)])
2025-03-15 11:06:30,186 - numba.core.byteflow - DEBUG - stack: ['$phi168.0', '$phi168.1', '$phi168.2']
2025-03-15 11:06:30,186 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=168 nstack_initial=3)
2025-03-15 11:06:30,186 - numba.core.byteflow - DEBUG - dispatch pc=168, inst=STORE_FAST(arg=20, lineno=41)
2025-03-15 11:06:30,186 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$phi168.2']
2025-03-15 11:06:30,187 - numba.core.byteflow - DEBUG - dispatch pc=170, inst=LOAD_FAST(arg=2, lineno=44)
2025-03-15 11:06:30,187 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1']
2025-03-15 11:06:30,187 - numba.core.byteflow - DEBUG - dispatch pc=172, inst=LOAD_FAST(arg=12, lineno=44)
2025-03-15 11:06:30,187 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$interp_win170.3']
2025-03-15 11:06:30,187 - numba.core.byteflow - DEBUG - dispatch pc=174, inst=LOAD_FAST(arg=20, lineno=44)
2025-03-15 11:06:30,187 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$interp_win170.3', '$offset172.4']
2025-03-15 11:06:30,187 - numba.core.byteflow - DEBUG - dispatch pc=176, inst=LOAD_FAST(arg=7, lineno=44)
2025-03-15 11:06:30,187 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$interp_win170.3', '$offset172.4', '$i174.5']
2025-03-15 11:06:30,187 - numba.core.byteflow - DEBUG - dispatch pc=178, inst=BINARY_MULTIPLY(arg=None, lineno=44)
2025-03-15 11:06:30,187 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$interp_win170.3', '$offset172.4', '$i174.5', '$index_step176.6']
2025-03-15 11:06:30,187 - numba.core.byteflow - DEBUG - dispatch pc=180, inst=BINARY_ADD(arg=None, lineno=44)
2025-03-15 11:06:30,187 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$interp_win170.3', '$offset172.4', '$178binary_multiply.7']
2025-03-15 11:06:30,187 - numba.core.byteflow - DEBUG - dispatch pc=182, inst=BINARY_SUBSCR(arg=None, lineno=44)
2025-03-15 11:06:30,187 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$interp_win170.3', '$180binary_add.8']
2025-03-15 11:06:30,187 - numba.core.byteflow - DEBUG - dispatch pc=184, inst=LOAD_FAST(arg=13, lineno=45)
2025-03-15 11:06:30,188 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$182binary_subscr.9']
2025-03-15 11:06:30,188 - numba.core.byteflow - DEBUG - dispatch pc=186, inst=LOAD_FAST(arg=3, lineno=45)
2025-03-15 11:06:30,188 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$182binary_subscr.9', '$eta184.10']
2025-03-15 11:06:30,188 - numba.core.byteflow - DEBUG - dispatch pc=188, inst=LOAD_FAST(arg=12, lineno=45)
2025-03-15 11:06:30,188 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$182binary_subscr.9', '$eta184.10', '$interp_delta186.11']
2025-03-15 11:06:30,188 - numba.core.byteflow - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=20, lineno=45)
2025-03-15 11:06:30,188 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$182binary_subscr.9', '$eta184.10', '$interp_delta186.11', '$offset188.12']
2025-03-15 11:06:30,188 - numba.core.byteflow - DEBUG - dispatch pc=192, inst=LOAD_FAST(arg=7, lineno=45)
2025-03-15 11:06:30,188 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$182binary_subscr.9', '$eta184.10', '$interp_delta186.11', '$offset188.12', '$i190.13']
2025-03-15 11:06:30,188 - numba.core.byteflow - DEBUG - dispatch pc=194, inst=BINARY_MULTIPLY(arg=None, lineno=45)
2025-03-15 11:06:30,188 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$182binary_subscr.9', '$eta184.10', '$interp_delta186.11', '$offset188.12', '$i190.13', '$index_step192.14']
2025-03-15 11:06:30,188 - numba.core.byteflow - DEBUG - dispatch pc=196, inst=BINARY_ADD(arg=None, lineno=45)
2025-03-15 11:06:30,188 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$182binary_subscr.9', '$eta184.10', '$interp_delta186.11', '$offset188.12', '$194binary_multiply.15']
2025-03-15 11:06:30,188 - numba.core.byteflow - DEBUG - dispatch pc=198, inst=BINARY_SUBSCR(arg=None, lineno=45)
2025-03-15 11:06:30,188 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$182binary_subscr.9', '$eta184.10', '$interp_delta186.11', '$196binary_add.16']
2025-03-15 11:06:30,188 - numba.core.byteflow - DEBUG - dispatch pc=200, inst=BINARY_MULTIPLY(arg=None, lineno=45)
2025-03-15 11:06:30,188 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$182binary_subscr.9', '$eta184.10', '$198binary_subscr.17']
2025-03-15 11:06:30,189 - numba.core.byteflow - DEBUG - dispatch pc=202, inst=BINARY_ADD(arg=None, lineno=44)
2025-03-15 11:06:30,189 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$182binary_subscr.9', '$200binary_multiply.18']
2025-03-15 11:06:30,189 - numba.core.byteflow - DEBUG - dispatch pc=204, inst=STORE_FAST(arg=14, lineno=43)
2025-03-15 11:06:30,189 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$202binary_add.19']
2025-03-15 11:06:30,189 - numba.core.byteflow - DEBUG - dispatch pc=206, inst=LOAD_FAST(arg=6, lineno=47)
2025-03-15 11:06:30,189 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1']
2025-03-15 11:06:30,189 - numba.core.byteflow - DEBUG - dispatch pc=208, inst=LOAD_FAST(arg=18, lineno=47)
2025-03-15 11:06:30,189 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$y206.20']
2025-03-15 11:06:30,189 - numba.core.byteflow - DEBUG - dispatch pc=210, inst=DUP_TOP_TWO(arg=None, lineno=47)
2025-03-15 11:06:30,189 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$y206.20', '$t208.21']
2025-03-15 11:06:30,189 - numba.core.byteflow - DEBUG - dispatch pc=212, inst=BINARY_SUBSCR(arg=None, lineno=47)
2025-03-15 11:06:30,189 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$y206.20', '$t208.21', '$210dup_top_two.22', '$210dup_top_two.23']
2025-03-15 11:06:30,189 - numba.core.byteflow - DEBUG - dispatch pc=214, inst=LOAD_FAST(arg=14, lineno=47)
2025-03-15 11:06:30,189 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$y206.20', '$t208.21', '$212binary_subscr.24']
2025-03-15 11:06:30,189 - numba.core.byteflow - DEBUG - dispatch pc=216, inst=LOAD_FAST(arg=0, lineno=47)
2025-03-15 11:06:30,189 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$y206.20', '$t208.21', '$212binary_subscr.24', '$weight214.25']
2025-03-15 11:06:30,190 - numba.core.byteflow - DEBUG - dispatch pc=218, inst=LOAD_FAST(arg=9, lineno=47)
2025-03-15 11:06:30,190 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$y206.20', '$t208.21', '$212binary_subscr.24', '$weight214.25', '$x216.26']
2025-03-15 11:06:30,190 - numba.core.byteflow - DEBUG - dispatch pc=220, inst=LOAD_FAST(arg=20, lineno=47)
2025-03-15 11:06:30,190 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$y206.20', '$t208.21', '$212binary_subscr.24', '$weight214.25', '$x216.26', '$n218.27']
2025-03-15 11:06:30,190 - numba.core.byteflow - DEBUG - dispatch pc=222, inst=BINARY_SUBTRACT(arg=None, lineno=47)
2025-03-15 11:06:30,190 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$y206.20', '$t208.21', '$212binary_subscr.24', '$weight214.25', '$x216.26', '$n218.27', '$i220.28']
2025-03-15 11:06:30,190 - numba.core.byteflow - DEBUG - dispatch pc=224, inst=BINARY_SUBSCR(arg=None, lineno=47)
2025-03-15 11:06:30,190 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$y206.20', '$t208.21', '$212binary_subscr.24', '$weight214.25', '$x216.26', '$222binary_subtract.29']
2025-03-15 11:06:30,190 - numba.core.byteflow - DEBUG - dispatch pc=226, inst=BINARY_MULTIPLY(arg=None, lineno=47)
2025-03-15 11:06:30,190 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$y206.20', '$t208.21', '$212binary_subscr.24', '$weight214.25', '$224binary_subscr.30']
2025-03-15 11:06:30,190 - numba.core.byteflow - DEBUG - dispatch pc=228, inst=INPLACE_ADD(arg=None, lineno=47)
2025-03-15 11:06:30,190 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$y206.20', '$t208.21', '$212binary_subscr.24', '$226binary_multiply.31']
2025-03-15 11:06:30,190 - numba.core.byteflow - DEBUG - dispatch pc=230, inst=ROT_THREE(arg=None, lineno=47)
2025-03-15 11:06:30,190 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$y206.20', '$t208.21', '$228inplace_add.32']
2025-03-15 11:06:30,190 - numba.core.byteflow - DEBUG - dispatch pc=232, inst=STORE_SUBSCR(arg=None, lineno=47)
2025-03-15 11:06:30,190 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$228inplace_add.32', '$y206.20', '$t208.21']
2025-03-15 11:06:30,191 - numba.core.byteflow - DEBUG - dispatch pc=234, inst=JUMP_ABSOLUTE(arg=84, lineno=47)
2025-03-15 11:06:30,191 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1']
2025-03-15 11:06:30,191 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=166, stack=('$phi168.0', '$phi168.1'), blockstack=(), npush=0)]
2025-03-15 11:06:30,191 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=302 nstack_initial=2), State(pc_initial=166 nstack_initial=2)])
2025-03-15 11:06:30,191 - numba.core.byteflow - DEBUG - stack: ['$phi302.0', '$phi302.1']
2025-03-15 11:06:30,191 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=302 nstack_initial=2)
2025-03-15 11:06:30,191 - numba.core.byteflow - DEBUG - dispatch pc=302, inst=FOR_ITER(arg=36, lineno=61)
2025-03-15 11:06:30,191 - numba.core.byteflow - DEBUG - stack ['$phi302.0', '$phi302.1']
2025-03-15 11:06:30,191 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=376, stack=('$phi302.0',), blockstack=(), npush=0), Edge(pc=304, stack=('$phi302.0', '$phi302.1', '$302for_iter.3'), blockstack=(), npush=0)]
2025-03-15 11:06:30,191 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=166 nstack_initial=2), State(pc_initial=376 nstack_initial=1), State(pc_initial=304 nstack_initial=3)])
2025-03-15 11:06:30,191 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=376 nstack_initial=1), State(pc_initial=304 nstack_initial=3)])
2025-03-15 11:06:30,191 - numba.core.byteflow - DEBUG - stack: ['$phi376.0']
2025-03-15 11:06:30,191 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=376 nstack_initial=1)
2025-03-15 11:06:30,191 - numba.core.byteflow - DEBUG - dispatch pc=376, inst=JUMP_ABSOLUTE(arg=41, lineno=61)
2025-03-15 11:06:30,191 - numba.core.byteflow - DEBUG - stack ['$phi376.0']
2025-03-15 11:06:30,192 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$phi376.0',), blockstack=(), npush=0)]
2025-03-15 11:06:30,192 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=304 nstack_initial=3), State(pc_initial=80 nstack_initial=1)])
2025-03-15 11:06:30,192 - numba.core.byteflow - DEBUG - stack: ['$phi304.0', '$phi304.1', '$phi304.2']
2025-03-15 11:06:30,192 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=304 nstack_initial=3)
2025-03-15 11:06:30,192 - numba.core.byteflow - DEBUG - dispatch pc=304, inst=STORE_FAST(arg=22, lineno=61)
2025-03-15 11:06:30,192 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$phi304.2']
2025-03-15 11:06:30,192 - numba.core.byteflow - DEBUG - dispatch pc=306, inst=LOAD_FAST(arg=2, lineno=63)
2025-03-15 11:06:30,192 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1']
2025-03-15 11:06:30,192 - numba.core.byteflow - DEBUG - dispatch pc=308, inst=LOAD_FAST(arg=12, lineno=63)
2025-03-15 11:06:30,192 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$interp_win306.3']
2025-03-15 11:06:30,192 - numba.core.byteflow - DEBUG - dispatch pc=310, inst=LOAD_FAST(arg=22, lineno=63)
2025-03-15 11:06:30,192 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$interp_win306.3', '$offset308.4']
2025-03-15 11:06:30,192 - numba.core.byteflow - DEBUG - dispatch pc=312, inst=LOAD_FAST(arg=7, lineno=63)
2025-03-15 11:06:30,192 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$interp_win306.3', '$offset308.4', '$k310.5']
2025-03-15 11:06:30,192 - numba.core.byteflow - DEBUG - dispatch pc=314, inst=BINARY_MULTIPLY(arg=None, lineno=63)
2025-03-15 11:06:30,192 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$interp_win306.3', '$offset308.4', '$k310.5', '$index_step312.6']
2025-03-15 11:06:30,193 - numba.core.byteflow - DEBUG - dispatch pc=316, inst=BINARY_ADD(arg=None, lineno=63)
2025-03-15 11:06:30,193 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$interp_win306.3', '$offset308.4', '$314binary_multiply.7']
2025-03-15 11:06:30,193 - numba.core.byteflow - DEBUG - dispatch pc=318, inst=BINARY_SUBSCR(arg=None, lineno=63)
2025-03-15 11:06:30,193 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$interp_win306.3', '$316binary_add.8']
2025-03-15 11:06:30,193 - numba.core.byteflow - DEBUG - dispatch pc=320, inst=LOAD_FAST(arg=13, lineno=64)
2025-03-15 11:06:30,193 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$318binary_subscr.9']
2025-03-15 11:06:30,193 - numba.core.byteflow - DEBUG - dispatch pc=322, inst=LOAD_FAST(arg=3, lineno=64)
2025-03-15 11:06:30,193 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$318binary_subscr.9', '$eta320.10']
2025-03-15 11:06:30,193 - numba.core.byteflow - DEBUG - dispatch pc=324, inst=LOAD_FAST(arg=12, lineno=64)
2025-03-15 11:06:30,193 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$318binary_subscr.9', '$eta320.10', '$interp_delta322.11']
2025-03-15 11:06:30,193 - numba.core.byteflow - DEBUG - dispatch pc=326, inst=LOAD_FAST(arg=22, lineno=64)
2025-03-15 11:06:30,193 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$318binary_subscr.9', '$eta320.10', '$interp_delta322.11', '$offset324.12']
2025-03-15 11:06:30,193 - numba.core.byteflow - DEBUG - dispatch pc=328, inst=LOAD_FAST(arg=7, lineno=64)
2025-03-15 11:06:30,193 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$318binary_subscr.9', '$eta320.10', '$interp_delta322.11', '$offset324.12', '$k326.13']
2025-03-15 11:06:30,193 - numba.core.byteflow - DEBUG - dispatch pc=330, inst=BINARY_MULTIPLY(arg=None, lineno=64)
2025-03-15 11:06:30,193 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$318binary_subscr.9', '$eta320.10', '$interp_delta322.11', '$offset324.12', '$k326.13', '$index_step328.14']
2025-03-15 11:06:30,194 - numba.core.byteflow - DEBUG - dispatch pc=332, inst=BINARY_ADD(arg=None, lineno=64)
2025-03-15 11:06:30,194 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$318binary_subscr.9', '$eta320.10', '$interp_delta322.11', '$offset324.12', '$330binary_multiply.15']
2025-03-15 11:06:30,194 - numba.core.byteflow - DEBUG - dispatch pc=334, inst=BINARY_SUBSCR(arg=None, lineno=64)
2025-03-15 11:06:30,194 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$318binary_subscr.9', '$eta320.10', '$interp_delta322.11', '$332binary_add.16']
2025-03-15 11:06:30,194 - numba.core.byteflow - DEBUG - dispatch pc=336, inst=BINARY_MULTIPLY(arg=None, lineno=64)
2025-03-15 11:06:30,194 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$318binary_subscr.9', '$eta320.10', '$334binary_subscr.17']
2025-03-15 11:06:30,194 - numba.core.byteflow - DEBUG - dispatch pc=338, inst=BINARY_ADD(arg=None, lineno=63)
2025-03-15 11:06:30,194 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$318binary_subscr.9', '$336binary_multiply.18']
2025-03-15 11:06:30,194 - numba.core.byteflow - DEBUG - dispatch pc=340, inst=STORE_FAST(arg=14, lineno=62)
2025-03-15 11:06:30,194 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$338binary_add.19']
2025-03-15 11:06:30,194 - numba.core.byteflow - DEBUG - dispatch pc=342, inst=LOAD_FAST(arg=6, lineno=66)
2025-03-15 11:06:30,194 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1']
2025-03-15 11:06:30,194 - numba.core.byteflow - DEBUG - dispatch pc=344, inst=LOAD_FAST(arg=18, lineno=66)
2025-03-15 11:06:30,194 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20']
2025-03-15 11:06:30,194 - numba.core.byteflow - DEBUG - dispatch pc=346, inst=DUP_TOP_TWO(arg=None, lineno=66)
2025-03-15 11:06:30,194 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21']
2025-03-15 11:06:30,195 - numba.core.byteflow - DEBUG - dispatch pc=348, inst=BINARY_SUBSCR(arg=None, lineno=66)
2025-03-15 11:06:30,195 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21', '$346dup_top_two.22', '$346dup_top_two.23']
2025-03-15 11:06:30,195 - numba.core.byteflow - DEBUG - dispatch pc=350, inst=LOAD_FAST(arg=14, lineno=66)
2025-03-15 11:06:30,195 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21', '$348binary_subscr.24']
2025-03-15 11:06:30,195 - numba.core.byteflow - DEBUG - dispatch pc=352, inst=LOAD_FAST(arg=0, lineno=66)
2025-03-15 11:06:30,195 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21', '$348binary_subscr.24', '$weight350.25']
2025-03-15 11:06:30,195 - numba.core.byteflow - DEBUG - dispatch pc=354, inst=LOAD_FAST(arg=9, lineno=66)
2025-03-15 11:06:30,195 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21', '$348binary_subscr.24', '$weight350.25', '$x352.26']
2025-03-15 11:06:30,195 - numba.core.byteflow - DEBUG - dispatch pc=356, inst=LOAD_FAST(arg=22, lineno=66)
2025-03-15 11:06:30,195 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21', '$348binary_subscr.24', '$weight350.25', '$x352.26', '$n354.27']
2025-03-15 11:06:30,195 - numba.core.byteflow - DEBUG - dispatch pc=358, inst=BINARY_ADD(arg=None, lineno=66)
2025-03-15 11:06:30,195 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21', '$348binary_subscr.24', '$weight350.25', '$x352.26', '$n354.27', '$k356.28']
2025-03-15 11:06:30,195 - numba.core.byteflow - DEBUG - dispatch pc=360, inst=LOAD_CONST(arg=3, lineno=66)
2025-03-15 11:06:30,195 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21', '$348binary_subscr.24', '$weight350.25', '$x352.26', '$358binary_add.29']
2025-03-15 11:06:30,195 - numba.core.byteflow - DEBUG - dispatch pc=362, inst=BINARY_ADD(arg=None, lineno=66)
2025-03-15 11:06:30,195 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21', '$348binary_subscr.24', '$weight350.25', '$x352.26', '$358binary_add.29', '$const360.30']
2025-03-15 11:06:30,196 - numba.core.byteflow - DEBUG - dispatch pc=364, inst=BINARY_SUBSCR(arg=None, lineno=66)
2025-03-15 11:06:30,196 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21', '$348binary_subscr.24', '$weight350.25', '$x352.26', '$362binary_add.31']
2025-03-15 11:06:30,196 - numba.core.byteflow - DEBUG - dispatch pc=366, inst=BINARY_MULTIPLY(arg=None, lineno=66)
2025-03-15 11:06:30,196 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21', '$348binary_subscr.24', '$weight350.25', '$364binary_subscr.32']
2025-03-15 11:06:30,196 - numba.core.byteflow - DEBUG - dispatch pc=368, inst=INPLACE_ADD(arg=None, lineno=66)
2025-03-15 11:06:30,196 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21', '$348binary_subscr.24', '$366binary_multiply.33']
2025-03-15 11:06:30,196 - numba.core.byteflow - DEBUG - dispatch pc=370, inst=ROT_THREE(arg=None, lineno=66)
2025-03-15 11:06:30,196 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21', '$368inplace_add.34']
2025-03-15 11:06:30,196 - numba.core.byteflow - DEBUG - dispatch pc=372, inst=STORE_SUBSCR(arg=None, lineno=66)
2025-03-15 11:06:30,196 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$368inplace_add.34', '$y342.20', '$t344.21']
2025-03-15 11:06:30,196 - numba.core.byteflow - DEBUG - dispatch pc=374, inst=JUMP_ABSOLUTE(arg=152, lineno=66)
2025-03-15 11:06:30,196 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1']
2025-03-15 11:06:30,196 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=302, stack=('$phi304.0', '$phi304.1'), blockstack=(), npush=0)]
2025-03-15 11:06:30,196 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1), State(pc_initial=302 nstack_initial=2)])
2025-03-15 11:06:30,196 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=302 nstack_initial=2)])
2025-03-15 11:06:30,197 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-03-15 11:06:30,197 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=166 nstack_initial=2): {'$phi166.1'},
             State(pc_initial=168 nstack_initial=3): {'$phi168.2'},
             State(pc_initial=236 nstack_initial=1): set(),
             State(pc_initial=302 nstack_initial=2): {'$phi302.1'},
             State(pc_initial=304 nstack_initial=3): {'$phi304.2'},
             State(pc_initial=376 nstack_initial=1): set(),
             State(pc_initial=378 nstack_initial=0): set()})
2025-03-15 11:06:30,197 - numba.core.byteflow - DEBUG - defmap: {'$phi166.1': State(pc_initial=82 nstack_initial=2),
 '$phi168.2': State(pc_initial=166 nstack_initial=2),
 '$phi302.1': State(pc_initial=236 nstack_initial=1),
 '$phi304.2': State(pc_initial=302 nstack_initial=2),
 '$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
2025-03-15 11:06:30,197 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi166.0': {('$phi168.0',
                            State(pc_initial=168 nstack_initial=3)),
                           ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi166.1': {('$164get_iter.35',
                            State(pc_initial=82 nstack_initial=2)),
                           ('$phi168.1',
                            State(pc_initial=168 nstack_initial=3))},
             '$phi168.0': {('$phi166.0',
                            State(pc_initial=166 nstack_initial=2))},
             '$phi168.1': {('$phi166.1',
                            State(pc_initial=166 nstack_initial=2))},
             '$phi168.2': {('$166for_iter.3',
                            State(pc_initial=166 nstack_initial=2))},
             '$phi236.0': {('$phi166.0',
                            State(pc_initial=166 nstack_initial=2))},
             '$phi302.0': {('$phi236.0',
                            State(pc_initial=236 nstack_initial=1)),
                           ('$phi304.0',
                            State(pc_initial=304 nstack_initial=3))},
             '$phi302.1': {('$300get_iter.28',
                            State(pc_initial=236 nstack_initial=1)),
                           ('$phi304.1',
                            State(pc_initial=304 nstack_initial=3))},
             '$phi304.0': {('$phi302.0',
                            State(pc_initial=302 nstack_initial=2))},
             '$phi304.1': {('$phi302.1',
                            State(pc_initial=302 nstack_initial=2))},
             '$phi304.2': {('$302for_iter.3',
                            State(pc_initial=302 nstack_initial=2))},
             '$phi376.0': {('$phi302.0',
                            State(pc_initial=302 nstack_initial=2))},
             '$phi80.0': {('$78get_iter.27',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi376.0',
                           State(pc_initial=376 nstack_initial=1))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-15 11:06:30,198 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi166.0': {('$phi166.0',
                            State(pc_initial=166 nstack_initial=2)),
                           ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi166.1': {('$164get_iter.35',
                            State(pc_initial=82 nstack_initial=2)),
                           ('$phi166.1',
                            State(pc_initial=166 nstack_initial=2))},
             '$phi168.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi168.1': {('$164get_iter.35',
                            State(pc_initial=82 nstack_initial=2))},
             '$phi168.2': {('$166for_iter.3',
                            State(pc_initial=166 nstack_initial=2))},
             '$phi236.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi302.0': {('$phi302.0',
                            State(pc_initial=302 nstack_initial=2)),
                           ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi302.1': {('$300get_iter.28',
                            State(pc_initial=236 nstack_initial=1)),
                           ('$phi302.1',
                            State(pc_initial=302 nstack_initial=2))},
             '$phi304.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi304.1': {('$300get_iter.28',
                            State(pc_initial=236 nstack_initial=1))},
             '$phi304.2': {('$302for_iter.3',
                            State(pc_initial=302 nstack_initial=2))},
             '$phi376.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi80.0': {('$78get_iter.27',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.27',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-15 11:06:30,199 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi166.0': {('$78get_iter.27',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi166.1': {('$164get_iter.35',
                            State(pc_initial=82 nstack_initial=2))},
             '$phi168.0': {('$78get_iter.27',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi168.1': {('$164get_iter.35',
                            State(pc_initial=82 nstack_initial=2))},
             '$phi168.2': {('$166for_iter.3',
                            State(pc_initial=166 nstack_initial=2))},
             '$phi236.0': {('$78get_iter.27',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi302.0': {('$78get_iter.27',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi302.1': {('$300get_iter.28',
                            State(pc_initial=236 nstack_initial=1))},
             '$phi304.0': {('$78get_iter.27',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi304.1': {('$300get_iter.28',
                            State(pc_initial=236 nstack_initial=1))},
             '$phi304.2': {('$302for_iter.3',
                            State(pc_initial=302 nstack_initial=2))},
             '$phi376.0': {('$78get_iter.27',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$78get_iter.27',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.27',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-15 11:06:30,199 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi166.0': {('$78get_iter.27',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi166.1': {('$164get_iter.35',
                            State(pc_initial=82 nstack_initial=2))},
             '$phi168.0': {('$78get_iter.27',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi168.1': {('$164get_iter.35',
                            State(pc_initial=82 nstack_initial=2))},
             '$phi168.2': {('$166for_iter.3',
                            State(pc_initial=166 nstack_initial=2))},
             '$phi236.0': {('$78get_iter.27',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi302.0': {('$78get_iter.27',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi302.1': {('$300get_iter.28',
                            State(pc_initial=236 nstack_initial=1))},
             '$phi304.0': {('$78get_iter.27',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi304.1': {('$300get_iter.28',
                            State(pc_initial=236 nstack_initial=1))},
             '$phi304.2': {('$302for_iter.3',
                            State(pc_initial=302 nstack_initial=2))},
             '$phi376.0': {('$78get_iter.27',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$78get_iter.27',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.27',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-03-15 11:06:30,200 - numba.core.byteflow - DEBUG - keep phismap: {'$phi166.1': {('$164get_iter.35', State(pc_initial=82 nstack_initial=2))},
 '$phi168.2': {('$166for_iter.3', State(pc_initial=166 nstack_initial=2))},
 '$phi302.1': {('$300get_iter.28', State(pc_initial=236 nstack_initial=1))},
 '$phi304.2': {('$302for_iter.3', State(pc_initial=302 nstack_initial=2))},
 '$phi80.0': {('$78get_iter.27', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
2025-03-15 11:06:30,200 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.27'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'},
             State(pc_initial=82 nstack_initial=2): {'$phi166.1': '$164get_iter.35'},
             State(pc_initial=166 nstack_initial=2): {'$phi168.2': '$166for_iter.3'},
             State(pc_initial=236 nstack_initial=1): {'$phi302.1': '$300get_iter.28'},
             State(pc_initial=302 nstack_initial=2): {'$phi304.2': '$302for_iter.3'}})
2025-03-15 11:06:30,200 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-03-15 11:06:30,201 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$scale4.1'}), (6, {'res': '$num_table6.2'}), (8, {'lhs': '$scale4.1', 'rhs': '$num_table6.2', 'res': '$8binary_multiply.3'}), (10, {'func': '$2load_global.0', 'args': ['$8binary_multiply.3'], 'res': '$10call_function.4'}), (12, {'value': '$10call_function.4'}), (14, {'res': '$const14.5'}), (16, {'value': '$const14.5'}), (18, {'res': '$const18.6'}), (20, {'value': '$const18.6'}), (22, {'res': '$const22.7'}), (24, {'value': '$const22.7'}), (26, {'res': '$const26.8'}), (28, {'value': '$const26.8'}), (30, {'res': '$const30.9'}), (32, {'value': '$const30.9'}), (34, {'res': '$const34.10'}), (36, {'value': '$const34.10'}), (38, {'res': '$const38.11'}), (40, {'value': '$const38.11'}), (42, {'res': '$interp_win42.12'}), (44, {'item': '$interp_win42.12', 'res': '$44load_attr.13'}), (46, {'res': '$const46.14'}), (48, {'index': '$const46.14', 'target': '$44load_attr.13', 'res': '$48binary_subscr.15'}), (50, {'value': '$48binary_subscr.15'}), (52, {'res': '$x52.16'}), (54, {'item': '$x52.16', 'res': '$54load_attr.17'}), (56, {'res': '$const56.18'}), (58, {'index': '$const56.18', 'target': '$54load_attr.17', 'res': '$58binary_subscr.19'}), (60, {'value': '$58binary_subscr.19'}), (62, {'res': '$t_out62.20'}), (64, {'item': '$t_out62.20', 'res': '$64load_attr.21'}), (66, {'res': '$const66.22'}), (68, {'index': '$const66.22', 'target': '$64load_attr.21', 'res': '$68binary_subscr.23'}), (70, {'value': '$68binary_subscr.23'}), (72, {'res': '$72load_global.24'}), (74, {'res': '$n_out74.25'}), (76, {'func': '$72load_global.24', 'args': ['$n_out74.25'], 'res': '$76call_function.26'}), (78, {'value': '$76call_function.26', 'res': '$78get_iter.27'})), outgoing_phis={'$phi80.0': '$78get_iter.27'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.27',)})
2025-03-15 11:06:30,201 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={378: (), 82: ('$phi80.0', '$80for_iter.2')})
2025-03-15 11:06:30,201 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$t_out84.2'}), (86, {'res': '$t86.3'}), (88, {'index': '$t86.3', 'target': '$t_out84.2', 'res': '$88binary_subscr.4'}), (90, {'value': '$88binary_subscr.4'}), (92, {'res': '$92load_global.5'}), (94, {'res': '$time_register94.6'}), (96, {'func': '$92load_global.5', 'args': ['$time_register94.6'], 'res': '$96call_function.7'}), (98, {'value': '$96call_function.7'}), (100, {'res': '$scale100.8'}), (102, {'res': '$time_register102.9'}), (104, {'res': '$n104.10'}), (106, {'lhs': '$time_register102.9', 'rhs': '$n104.10', 'res': '$106binary_subtract.11'}), (108, {'lhs': '$scale100.8', 'rhs': '$106binary_subtract.11', 'res': '$108binary_multiply.12'}), (110, {'value': '$108binary_multiply.12'}), (112, {'res': '$frac112.13'}), (114, {'res': '$num_table114.14'}), (116, {'lhs': '$frac112.13', 'rhs': '$num_table114.14', 'res': '$116binary_multiply.15'}), (118, {'value': '$116binary_multiply.15'}), (120, {'res': '$120load_global.16'}), (122, {'res': '$index_frac122.17'}), (124, {'func': '$120load_global.16', 'args': ['$index_frac122.17'], 'res': '$124call_function.18'}), (126, {'value': '$124call_function.18'}), (128, {'res': '$index_frac128.19'}), (130, {'res': '$offset130.20'}), (132, {'lhs': '$index_frac128.19', 'rhs': '$offset130.20', 'res': '$132binary_subtract.21'}), (134, {'value': '$132binary_subtract.21'}), (136, {'res': '$136load_global.22'}), (138, {'res': '$n138.23'}), (140, {'res': '$const140.24'}), (142, {'lhs': '$n138.23', 'rhs': '$const140.24', 'res': '$142binary_add.25'}), (144, {'res': '$nwin144.26'}), (146, {'res': '$offset146.27'}), (148, {'lhs': '$nwin144.26', 'rhs': '$offset146.27', 'res': '$148binary_subtract.28'}), (150, {'res': '$index_step150.29'}), (152, {'lhs': '$148binary_subtract.28', 'rhs': '$index_step150.29', 'res': '$152binary_floor_divide.30'}), (154, {'func': '$136load_global.22', 'args': ['$142binary_add.25', '$152binary_floor_divide.30'], 'res': '$154call_function.31'}), (156, {'value': '$154call_function.31'}), (158, {'res': '$158load_global.32'}), (160, {'res': '$i_max160.33'}), (162, {'func': '$158load_global.32', 'args': ['$i_max160.33'], 'res': '$162call_function.34'}), (164, {'value': '$162call_function.34', 'res': '$164get_iter.35'})), outgoing_phis={'$phi166.1': '$164get_iter.35'}, blockstack=(), active_try_block=None, outgoing_edgepushed={166: ('$phi82.0', '$164get_iter.35')})
2025-03-15 11:06:30,201 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=166 nstack_initial=2):
AdaptBlockInfo(insts=((166, {'iterator': '$phi166.1', 'pair': '$166for_iter.2', 'indval': '$166for_iter.3', 'pred': '$166for_iter.4'}),), outgoing_phis={'$phi168.2': '$166for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={236: ('$phi166.0',), 168: ('$phi166.0', '$phi166.1', '$166for_iter.3')})
2025-03-15 11:06:30,201 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=168 nstack_initial=3):
AdaptBlockInfo(insts=((168, {'value': '$phi168.2'}), (170, {'res': '$interp_win170.3'}), (172, {'res': '$offset172.4'}), (174, {'res': '$i174.5'}), (176, {'res': '$index_step176.6'}), (178, {'lhs': '$i174.5', 'rhs': '$index_step176.6', 'res': '$178binary_multiply.7'}), (180, {'lhs': '$offset172.4', 'rhs': '$178binary_multiply.7', 'res': '$180binary_add.8'}), (182, {'index': '$180binary_add.8', 'target': '$interp_win170.3', 'res': '$182binary_subscr.9'}), (184, {'res': '$eta184.10'}), (186, {'res': '$interp_delta186.11'}), (188, {'res': '$offset188.12'}), (190, {'res': '$i190.13'}), (192, {'res': '$index_step192.14'}), (194, {'lhs': '$i190.13', 'rhs': '$index_step192.14', 'res': '$194binary_multiply.15'}), (196, {'lhs': '$offset188.12', 'rhs': '$194binary_multiply.15', 'res': '$196binary_add.16'}), (198, {'index': '$196binary_add.16', 'target': '$interp_delta186.11', 'res': '$198binary_subscr.17'}), (200, {'lhs': '$eta184.10', 'rhs': '$198binary_subscr.17', 'res': '$200binary_multiply.18'}), (202, {'lhs': '$182binary_subscr.9', 'rhs': '$200binary_multiply.18', 'res': '$202binary_add.19'}), (204, {'value': '$202binary_add.19'}), (206, {'res': '$y206.20'}), (208, {'res': '$t208.21'}), (210, {'orig': ['$y206.20', '$t208.21'], 'duped': ['$210dup_top_two.22', '$210dup_top_two.23']}), (212, {'index': '$210dup_top_two.23', 'target': '$210dup_top_two.22', 'res': '$212binary_subscr.24'}), (214, {'res': '$weight214.25'}), (216, {'res': '$x216.26'}), (218, {'res': '$n218.27'}), (220, {'res': '$i220.28'}), (222, {'lhs': '$n218.27', 'rhs': '$i220.28', 'res': '$222binary_subtract.29'}), (224, {'index': '$222binary_subtract.29', 'target': '$x216.26', 'res': '$224binary_subscr.30'}), (226, {'lhs': '$weight214.25', 'rhs': '$224binary_subscr.30', 'res': '$226binary_multiply.31'}), (228, {'lhs': '$212binary_subscr.24', 'rhs': '$226binary_multiply.31', 'res': '$228inplace_add.32'}), (232, {'target': '$y206.20', 'index': '$t208.21', 'value': '$228inplace_add.32'}), (234, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={166: ('$phi168.0', '$phi168.1')})
2025-03-15 11:06:30,201 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=236 nstack_initial=1):
AdaptBlockInfo(insts=((236, {'res': '$scale236.1'}), (238, {'res': '$frac238.2'}), (240, {'lhs': '$scale236.1', 'rhs': '$frac238.2', 'res': '$240binary_subtract.3'}), (242, {'value': '$240binary_subtract.3'}), (244, {'res': '$frac244.4'}), (246, {'res': '$num_table246.5'}), (248, {'lhs': '$frac244.4', 'rhs': '$num_table246.5', 'res': '$248binary_multiply.6'}), (250, {'value': '$248binary_multiply.6'}), (252, {'res': '$252load_global.7'}), (254, {'res': '$index_frac254.8'}), (256, {'func': '$252load_global.7', 'args': ['$index_frac254.8'], 'res': '$256call_function.9'}), (258, {'value': '$256call_function.9'}), (260, {'res': '$index_frac260.10'}), (262, {'res': '$offset262.11'}), (264, {'lhs': '$index_frac260.10', 'rhs': '$offset262.11', 'res': '$264binary_subtract.12'}), (266, {'value': '$264binary_subtract.12'}), (268, {'res': '$268load_global.13'}), (270, {'res': '$n_orig270.14'}), (272, {'res': '$n272.15'}), (274, {'lhs': '$n_orig270.14', 'rhs': '$n272.15', 'res': '$274binary_subtract.16'}), (276, {'res': '$const276.17'}), (278, {'lhs': '$274binary_subtract.16', 'rhs': '$const276.17', 'res': '$278binary_subtract.18'}), (280, {'res': '$nwin280.19'}), (282, {'res': '$offset282.20'}), (284, {'lhs': '$nwin280.19', 'rhs': '$offset282.20', 'res': '$284binary_subtract.21'}), (286, {'res': '$index_step286.22'}), (288, {'lhs': '$284binary_subtract.21', 'rhs': '$index_step286.22', 'res': '$288binary_floor_divide.23'}), (290, {'func': '$268load_global.13', 'args': ['$278binary_subtract.18', '$288binary_floor_divide.23'], 'res': '$290call_function.24'}), (292, {'value': '$290call_function.24'}), (294, {'res': '$294load_global.25'}), (296, {'res': '$k_max296.26'}), (298, {'func': '$294load_global.25', 'args': ['$k_max296.26'], 'res': '$298call_function.27'}), (300, {'value': '$298call_function.27', 'res': '$300get_iter.28'})), outgoing_phis={'$phi302.1': '$300get_iter.28'}, blockstack=(), active_try_block=None, outgoing_edgepushed={302: ('$phi236.0', '$300get_iter.28')})
2025-03-15 11:06:30,201 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=302 nstack_initial=2):
AdaptBlockInfo(insts=((302, {'iterator': '$phi302.1', 'pair': '$302for_iter.2', 'indval': '$302for_iter.3', 'pred': '$302for_iter.4'}),), outgoing_phis={'$phi304.2': '$302for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={376: ('$phi302.0',), 304: ('$phi302.0', '$phi302.1', '$302for_iter.3')})
2025-03-15 11:06:30,201 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=304 nstack_initial=3):
AdaptBlockInfo(insts=((304, {'value': '$phi304.2'}), (306, {'res': '$interp_win306.3'}), (308, {'res': '$offset308.4'}), (310, {'res': '$k310.5'}), (312, {'res': '$index_step312.6'}), (314, {'lhs': '$k310.5', 'rhs': '$index_step312.6', 'res': '$314binary_multiply.7'}), (316, {'lhs': '$offset308.4', 'rhs': '$314binary_multiply.7', 'res': '$316binary_add.8'}), (318, {'index': '$316binary_add.8', 'target': '$interp_win306.3', 'res': '$318binary_subscr.9'}), (320, {'res': '$eta320.10'}), (322, {'res': '$interp_delta322.11'}), (324, {'res': '$offset324.12'}), (326, {'res': '$k326.13'}), (328, {'res': '$index_step328.14'}), (330, {'lhs': '$k326.13', 'rhs': '$index_step328.14', 'res': '$330binary_multiply.15'}), (332, {'lhs': '$offset324.12', 'rhs': '$330binary_multiply.15', 'res': '$332binary_add.16'}), (334, {'index': '$332binary_add.16', 'target': '$interp_delta322.11', 'res': '$334binary_subscr.17'}), (336, {'lhs': '$eta320.10', 'rhs': '$334binary_subscr.17', 'res': '$336binary_multiply.18'}), (338, {'lhs': '$318binary_subscr.9', 'rhs': '$336binary_multiply.18', 'res': '$338binary_add.19'}), (340, {'value': '$338binary_add.19'}), (342, {'res': '$y342.20'}), (344, {'res': '$t344.21'}), (346, {'orig': ['$y342.20', '$t344.21'], 'duped': ['$346dup_top_two.22', '$346dup_top_two.23']}), (348, {'index': '$346dup_top_two.23', 'target': '$346dup_top_two.22', 'res': '$348binary_subscr.24'}), (350, {'res': '$weight350.25'}), (352, {'res': '$x352.26'}), (354, {'res': '$n354.27'}), (356, {'res': '$k356.28'}), (358, {'lhs': '$n354.27', 'rhs': '$k356.28', 'res': '$358binary_add.29'}), (360, {'res': '$const360.30'}), (362, {'lhs': '$358binary_add.29', 'rhs': '$const360.30', 'res': '$362binary_add.31'}), (364, {'index': '$362binary_add.31', 'target': '$x352.26', 'res': '$364binary_subscr.32'}), (366, {'lhs': '$weight350.25', 'rhs': '$364binary_subscr.32', 'res': '$366binary_multiply.33'}), (368, {'lhs': '$348binary_subscr.24', 'rhs': '$366binary_multiply.33', 'res': '$368inplace_add.34'}), (372, {'target': '$y342.20', 'index': '$t344.21', 'value': '$368inplace_add.34'}), (374, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={302: ('$phi304.0', '$phi304.1')})
2025-03-15 11:06:30,201 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=376 nstack_initial=1):
AdaptBlockInfo(insts=((376, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi376.0',)})
2025-03-15 11:06:30,202 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=378 nstack_initial=0):
AdaptBlockInfo(insts=((378, {'res': '$const378.0'}), (380, {'retval': '$const378.0', 'castval': '$380return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-03-15 11:06:30,207 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $2load_global.0 = global(int: <class 'int'>) ['$2load_global.0']
    $8binary_multiply.3 = scale * num_table  ['$8binary_multiply.3', 'num_table', 'scale']
    index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8binary_multiply.3', 'index_step']
    time_register = const(float, 0.0)        ['time_register']
    n = const(int, 0)                        ['n']
    frac = const(float, 0.0)                 ['frac']
    index_frac = const(float, 0.0)           ['index_frac']
    offset = const(int, 0)                   ['offset']
    eta = const(float, 0.0)                  ['eta']
    weight = const(float, 0.0)               ['weight']
    $44load_attr.13 = getattr(value=interp_win, attr=shape) ['$44load_attr.13', 'interp_win']
    $const46.14 = const(int, 0)              ['$const46.14']
    nwin = getitem(value=$44load_attr.13, index=$const46.14, fn=<built-in function getitem>) ['$44load_attr.13', '$const46.14', 'nwin']
    $54load_attr.17 = getattr(value=x, attr=shape) ['$54load_attr.17', 'x']
    $const56.18 = const(int, 0)              ['$const56.18']
    n_orig = getitem(value=$54load_attr.17, index=$const56.18, fn=<built-in function getitem>) ['$54load_attr.17', '$const56.18', 'n_orig']
    $64load_attr.21 = getattr(value=t_out, attr=shape) ['$64load_attr.21', 't_out']
    $const66.22 = const(int, 0)              ['$const66.22']
    n_out = getitem(value=$64load_attr.21, index=$const66.22, fn=<built-in function getitem>) ['$64load_attr.21', '$const66.22', 'n_out']
    $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>) ['$72load_global.24']
    $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_global.24', '$76call_function.26', 'n_out']
    $78get_iter.27 = getiter(value=$76call_function.26) ['$76call_function.26', '$78get_iter.27']
    $phi80.0 = $78get_iter.27                ['$78get_iter.27', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 378            ['$80for_iter.3']
label 82:
    t = $phi82.1                             ['$phi82.1', 't']
    time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>) ['t', 't_out', 'time_register']
    $92load_global.5 = global(int: <class 'int'>) ['$92load_global.5']
    n = call $92load_global.5(time_register, func=$92load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_global.5', 'n', 'time_register']
    $106binary_subtract.11 = time_register - n ['$106binary_subtract.11', 'n', 'time_register']
    frac = scale * $106binary_subtract.11    ['$106binary_subtract.11', 'frac', 'scale']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $120load_global.16 = global(int: <class 'int'>) ['$120load_global.16']
    offset = call $120load_global.16(index_frac, func=$120load_global.16, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.16', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $136load_global.22 = global(min: <built-in function min>) ['$136load_global.22']
    $const140.24 = const(int, 1)             ['$const140.24']
    $142binary_add.25 = n + $const140.24     ['$142binary_add.25', '$const140.24', 'n']
    $148binary_subtract.28 = nwin - offset   ['$148binary_subtract.28', 'nwin', 'offset']
    $152binary_floor_divide.30 = $148binary_subtract.28 // index_step ['$148binary_subtract.28', '$152binary_floor_divide.30', 'index_step']
    i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_global.22', '$142binary_add.25', '$152binary_floor_divide.30', 'i_max']
    $158load_global.32 = global(range: <class 'range'>) ['$158load_global.32']
    $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$158load_global.32', '$162call_function.34', 'i_max']
    $164get_iter.35 = getiter(value=$162call_function.34) ['$162call_function.34', '$164get_iter.35']
    $phi166.1 = $164get_iter.35              ['$164get_iter.35', '$phi166.1']
    jump 166                                 []
label 166:
    $166for_iter.2 = iternext(value=$phi166.1) ['$166for_iter.2', '$phi166.1']
    $166for_iter.3 = pair_first(value=$166for_iter.2) ['$166for_iter.2', '$166for_iter.3']
    $166for_iter.4 = pair_second(value=$166for_iter.2) ['$166for_iter.2', '$166for_iter.4']
    $phi168.2 = $166for_iter.3               ['$166for_iter.3', '$phi168.2']
    branch $166for_iter.4, 168, 236          ['$166for_iter.4']
label 168:
    i = $phi168.2                            ['$phi168.2', 'i']
    $178binary_multiply.7 = i * index_step   ['$178binary_multiply.7', 'i', 'index_step']
    $180binary_add.8 = offset + $178binary_multiply.7 ['$178binary_multiply.7', '$180binary_add.8', 'offset']
    $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>) ['$180binary_add.8', '$182binary_subscr.9', 'interp_win']
    $194binary_multiply.15 = i * index_step  ['$194binary_multiply.15', 'i', 'index_step']
    $196binary_add.16 = offset + $194binary_multiply.15 ['$194binary_multiply.15', '$196binary_add.16', 'offset']
    $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>) ['$196binary_add.16', '$198binary_subscr.17', 'interp_delta']
    $200binary_multiply.18 = eta * $198binary_subscr.17 ['$198binary_subscr.17', '$200binary_multiply.18', 'eta']
    weight = $182binary_subscr.9 + $200binary_multiply.18 ['$182binary_subscr.9', '$200binary_multiply.18', 'weight']
    $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$212binary_subscr.24', 't', 'y']
    $222binary_subtract.29 = n - i           ['$222binary_subtract.29', 'i', 'n']
    $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>) ['$222binary_subtract.29', '$224binary_subscr.30', 'x']
    $226binary_multiply.31 = weight * $224binary_subscr.30 ['$224binary_subscr.30', '$226binary_multiply.31', 'weight']
    $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined) ['$212binary_subscr.24', '$226binary_multiply.31', '$228inplace_add.32']
    y[t] = $228inplace_add.32                ['$228inplace_add.32', 't', 'y']
    jump 166                                 []
label 236:
    $240binary_subtract.3 = scale - frac     ['$240binary_subtract.3', 'frac', 'scale']
    frac = $240binary_subtract.3             ['$240binary_subtract.3', 'frac']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $252load_global.7 = global(int: <class 'int'>) ['$252load_global.7']
    offset = call $252load_global.7(index_frac, func=$252load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$252load_global.7', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $268load_global.13 = global(min: <built-in function min>) ['$268load_global.13']
    $274binary_subtract.16 = n_orig - n      ['$274binary_subtract.16', 'n', 'n_orig']
    $const276.17 = const(int, 1)             ['$const276.17']
    $278binary_subtract.18 = $274binary_subtract.16 - $const276.17 ['$274binary_subtract.16', '$278binary_subtract.18', '$const276.17']
    $284binary_subtract.21 = nwin - offset   ['$284binary_subtract.21', 'nwin', 'offset']
    $288binary_floor_divide.23 = $284binary_subtract.21 // index_step ['$284binary_subtract.21', '$288binary_floor_divide.23', 'index_step']
    k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$268load_global.13', '$278binary_subtract.18', '$288binary_floor_divide.23', 'k_max']
    $294load_global.25 = global(range: <class 'range'>) ['$294load_global.25']
    $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$294load_global.25', '$298call_function.27', 'k_max']
    $300get_iter.28 = getiter(value=$298call_function.27) ['$298call_function.27', '$300get_iter.28']
    $phi302.1 = $300get_iter.28              ['$300get_iter.28', '$phi302.1']
    jump 302                                 []
label 302:
    $302for_iter.2 = iternext(value=$phi302.1) ['$302for_iter.2', '$phi302.1']
    $302for_iter.3 = pair_first(value=$302for_iter.2) ['$302for_iter.2', '$302for_iter.3']
    $302for_iter.4 = pair_second(value=$302for_iter.2) ['$302for_iter.2', '$302for_iter.4']
    $phi304.2 = $302for_iter.3               ['$302for_iter.3', '$phi304.2']
    branch $302for_iter.4, 304, 376          ['$302for_iter.4']
label 304:
    k = $phi304.2                            ['$phi304.2', 'k']
    $314binary_multiply.7 = k * index_step   ['$314binary_multiply.7', 'index_step', 'k']
    $316binary_add.8 = offset + $314binary_multiply.7 ['$314binary_multiply.7', '$316binary_add.8', 'offset']
    $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>) ['$316binary_add.8', '$318binary_subscr.9', 'interp_win']
    $330binary_multiply.15 = k * index_step  ['$330binary_multiply.15', 'index_step', 'k']
    $332binary_add.16 = offset + $330binary_multiply.15 ['$330binary_multiply.15', '$332binary_add.16', 'offset']
    $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>) ['$332binary_add.16', '$334binary_subscr.17', 'interp_delta']
    $336binary_multiply.18 = eta * $334binary_subscr.17 ['$334binary_subscr.17', '$336binary_multiply.18', 'eta']
    weight = $318binary_subscr.9 + $336binary_multiply.18 ['$318binary_subscr.9', '$336binary_multiply.18', 'weight']
    $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$348binary_subscr.24', 't', 'y']
    $358binary_add.29 = n + k                ['$358binary_add.29', 'k', 'n']
    $const360.30 = const(int, 1)             ['$const360.30']
    $362binary_add.31 = $358binary_add.29 + $const360.30 ['$358binary_add.29', '$362binary_add.31', '$const360.30']
    $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>) ['$362binary_add.31', '$364binary_subscr.32', 'x']
    $366binary_multiply.33 = weight * $364binary_subscr.32 ['$364binary_subscr.32', '$366binary_multiply.33', 'weight']
    $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined) ['$348binary_subscr.24', '$366binary_multiply.33', '$368inplace_add.34']
    y[t] = $368inplace_add.34                ['$368inplace_add.34', 't', 'y']
    jump 302                                 []
label 376:
    jump 80                                  []
label 378:
    $const378.0 = const(NoneType, None)      ['$const378.0']
    $380return_value.1 = cast(value=$const378.0) ['$380return_value.1', '$const378.0']
    return $380return_value.1                ['$380return_value.1']

2025-03-15 11:06:30,252 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-03-15 11:06:30,252 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001D071DE3340>
2025-03-15 11:06:30,252 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-15 11:06:30,253 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-03-15 11:06:30,253 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-03-15 11:06:30,253 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-03-15 11:06:30,253 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-03-15 11:06:30,253 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-03-15 11:06:30,253 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-03-15 11:06:30,253 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-03-15 11:06:30,253 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-03-15 11:06:30,253 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,253 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-03-15 11:06:30,253 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-03-15 11:06:30,253 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-03-15 11:06:30,253 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-03-15 11:06:30,253 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-03-15 11:06:30,253 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-03-15 11:06:30,254 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-03-15 11:06:30,254 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-03-15 11:06:30,254 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-03-15 11:06:30,254 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-03-15 11:06:30,254 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-03-15 11:06:30,254 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-03-15 11:06:30,254 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-03-15 11:06:30,254 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-03-15 11:06:30,254 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-03-15 11:06:30,254 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-03-15 11:06:30,254 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-03-15 11:06:30,254 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,254 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-03-15 11:06:30,254 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-03-15 11:06:30,254 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-15 11:06:30,255 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 80
2025-03-15 11:06:30,255 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001D071DE3340>
2025-03-15 11:06:30,256 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-03-15 11:06:30,256 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-03-15 11:06:30,256 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-03-15 11:06:30,256 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-03-15 11:06:30,257 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-03-15 11:06:30,257 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 82
2025-03-15 11:06:30,257 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001D071DE3340>
2025-03-15 11:06:30,258 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-03-15 11:06:30,258 - numba.core.ssa - DEBUG - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,258 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-03-15 11:06:30,258 - numba.core.ssa - DEBUG - on stmt: n = call $92load_global.5(time_register, func=$92load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,259 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register - n
2025-03-15 11:06:30,259 - numba.core.ssa - DEBUG - on stmt: frac = scale * $106binary_subtract.11
2025-03-15 11:06:30,259 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-03-15 11:06:30,260 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-03-15 11:06:30,260 - numba.core.ssa - DEBUG - on stmt: offset = call $120load_global.16(index_frac, func=$120load_global.16, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,260 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-03-15 11:06:30,260 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-03-15 11:06:30,261 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-03-15 11:06:30,261 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n + $const140.24
2025-03-15 11:06:30,261 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset
2025-03-15 11:06:30,261 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-03-15 11:06:30,262 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,262 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-03-15 11:06:30,262 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,263 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-03-15 11:06:30,263 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-03-15 11:06:30,263 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-03-15 11:06:30,263 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 166
2025-03-15 11:06:30,264 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001D071DE3340>
2025-03-15 11:06:30,264 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-03-15 11:06:30,264 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-03-15 11:06:30,264 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-03-15 11:06:30,265 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-03-15 11:06:30,265 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-03-15 11:06:30,265 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 168
2025-03-15 11:06:30,265 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001D071DE3340>
2025-03-15 11:06:30,265 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-03-15 11:06:30,266 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-03-15 11:06:30,266 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset + $178binary_multiply.7
2025-03-15 11:06:30,266 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-03-15 11:06:30,266 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-03-15 11:06:30,267 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset + $194binary_multiply.15
2025-03-15 11:06:30,267 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-03-15 11:06:30,267 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-03-15 11:06:30,267 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-03-15 11:06:30,268 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,268 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n - i
2025-03-15 11:06:30,268 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-03-15 11:06:30,268 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-03-15 11:06:30,269 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-03-15 11:06:30,269 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-03-15 11:06:30,269 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-03-15 11:06:30,269 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 236
2025-03-15 11:06:30,269 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001D071DE3340>
2025-03-15 11:06:30,270 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac
2025-03-15 11:06:30,270 - numba.core.ssa - DEBUG - on stmt: frac = $240binary_subtract.3
2025-03-15 11:06:30,270 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-03-15 11:06:30,270 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-03-15 11:06:30,270 - numba.core.ssa - DEBUG - on stmt: offset = call $252load_global.7(index_frac, func=$252load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,271 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-03-15 11:06:30,271 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-03-15 11:06:30,271 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n
2025-03-15 11:06:30,271 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-03-15 11:06:30,271 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-03-15 11:06:30,272 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset
2025-03-15 11:06:30,272 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-03-15 11:06:30,272 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,272 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-03-15 11:06:30,273 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,273 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-03-15 11:06:30,273 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-03-15 11:06:30,273 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-03-15 11:06:30,273 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 302
2025-03-15 11:06:30,274 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001D071DE3340>
2025-03-15 11:06:30,274 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-03-15 11:06:30,274 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-03-15 11:06:30,274 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-03-15 11:06:30,274 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-03-15 11:06:30,274 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-03-15 11:06:30,275 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 304
2025-03-15 11:06:30,275 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001D071DE3340>
2025-03-15 11:06:30,275 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-03-15 11:06:30,275 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-03-15 11:06:30,275 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset + $314binary_multiply.7
2025-03-15 11:06:30,276 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-03-15 11:06:30,276 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-03-15 11:06:30,276 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset + $330binary_multiply.15
2025-03-15 11:06:30,276 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-03-15 11:06:30,276 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-03-15 11:06:30,277 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-03-15 11:06:30,277 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,277 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n + k
2025-03-15 11:06:30,277 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-03-15 11:06:30,277 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-03-15 11:06:30,277 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-03-15 11:06:30,278 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-03-15 11:06:30,278 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-03-15 11:06:30,278 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-03-15 11:06:30,278 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-03-15 11:06:30,278 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 376
2025-03-15 11:06:30,278 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001D071DE3340>
2025-03-15 11:06:30,278 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-15 11:06:30,278 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 378
2025-03-15 11:06:30,278 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001D071DE3340>
2025-03-15 11:06:30,279 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-03-15 11:06:30,279 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-03-15 11:06:30,279 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-03-15 11:06:30,287 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$106binary_subtract.11': [(<numba.core.ir.Assign object at 0x000001D071E7D570>,
                                         82)],
             '$120load_global.16': [(<numba.core.ir.Assign object at 0x000001D071E7DD80>,
                                     82)],
             '$136load_global.22': [(<numba.core.ir.Assign object at 0x000001D071E7E6E0>,
                                     82)],
             '$142binary_add.25': [(<numba.core.ir.Assign object at 0x000001D071E7EB30>,
                                    82)],
             '$148binary_subtract.28': [(<numba.core.ir.Assign object at 0x000001D071E7EEF0>,
                                         82)],
             '$152binary_floor_divide.30': [(<numba.core.ir.Assign object at 0x000001D071E7F190>,
                                             82)],
             '$158load_global.32': [(<numba.core.ir.Assign object at 0x000001D071E7F580>,
                                     82)],
             '$162call_function.34': [(<numba.core.ir.Assign object at 0x000001D071E7F880>,
                                       82)],
             '$164get_iter.35': [(<numba.core.ir.Assign object at 0x000001D071E7F9A0>,
                                  82)],
             '$166for_iter.2': [(<numba.core.ir.Assign object at 0x000001D071E7D2A0>,
                                 166)],
             '$166for_iter.3': [(<numba.core.ir.Assign object at 0x000001D071E7D630>,
                                 166)],
             '$166for_iter.4': [(<numba.core.ir.Assign object at 0x000001D071E7DC30>,
                                 166)],
             '$178binary_multiply.7': [(<numba.core.ir.Assign object at 0x000001D071E7FD90>,
                                        168)],
             '$180binary_add.8': [(<numba.core.ir.Assign object at 0x000001D071E7FF10>,
                                   168)],
             '$182binary_subscr.9': [(<numba.core.ir.Assign object at 0x000001D071E880D0>,
                                      168)],
             '$194binary_multiply.15': [(<numba.core.ir.Assign object at 0x000001D071E887F0>,
                                         168)],
             '$196binary_add.16': [(<numba.core.ir.Assign object at 0x000001D071E88970>,
                                    168)],
             '$198binary_subscr.17': [(<numba.core.ir.Assign object at 0x000001D071E88AF0>,
                                       168)],
             '$200binary_multiply.18': [(<numba.core.ir.Assign object at 0x000001D071E88C70>,
                                         168)],
             '$212binary_subscr.24': [(<numba.core.ir.Assign object at 0x000001D071E89450>,
                                       168)],
             '$222binary_subtract.29': [(<numba.core.ir.Assign object at 0x000001D071E89A50>,
                                         168)],
             '$224binary_subscr.30': [(<numba.core.ir.Assign object at 0x000001D071E89BD0>,
                                       168)],
             '$226binary_multiply.31': [(<numba.core.ir.Assign object at 0x000001D071E89D50>,
                                         168)],
             '$228inplace_add.32': [(<numba.core.ir.Assign object at 0x000001D071E89ED0>,
                                     168)],
             '$240binary_subtract.3': [(<numba.core.ir.Assign object at 0x000001D071E88FA0>,
                                        236)],
             '$252load_global.7': [(<numba.core.ir.Assign object at 0x000001D071E8A440>,
                                    236)],
             '$268load_global.13': [(<numba.core.ir.Assign object at 0x000001D071E8ADA0>,
                                     236)],
             '$274binary_subtract.16': [(<numba.core.ir.Assign object at 0x000001D071E8B190>,
                                         236)],
             '$278binary_subtract.18': [(<numba.core.ir.Assign object at 0x000001D071E8B490>,
                                         236)],
             '$284binary_subtract.21': [(<numba.core.ir.Assign object at 0x000001D071E8B850>,
                                         236)],
             '$288binary_floor_divide.23': [(<numba.core.ir.Assign object at 0x000001D071E8BAF0>,
                                             236)],
             '$294load_global.25': [(<numba.core.ir.Assign object at 0x000001D071E8BEE0>,
                                     236)],
             '$298call_function.27': [(<numba.core.ir.Assign object at 0x000001D071E90220>,
                                       236)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x000001D071E651E0>,
                                  0)],
             '$300get_iter.28': [(<numba.core.ir.Assign object at 0x000001D071E90340>,
                                  236)],
             '$302for_iter.2': [(<numba.core.ir.Assign object at 0x000001D071E8A9E0>,
                                 302)],
             '$302for_iter.3': [(<numba.core.ir.Assign object at 0x000001D071E8AEC0>,
                                 302)],
             '$302for_iter.4': [(<numba.core.ir.Assign object at 0x000001D071E8B6A0>,
                                 302)],
             '$314binary_multiply.7': [(<numba.core.ir.Assign object at 0x000001D071E90A90>,
                                        304)],
             '$316binary_add.8': [(<numba.core.ir.Assign object at 0x000001D071E90C10>,
                                   304)],
             '$318binary_subscr.9': [(<numba.core.ir.Assign object at 0x000001D071E90D90>,
                                      304)],
             '$330binary_multiply.15': [(<numba.core.ir.Assign object at 0x000001D071E914B0>,
                                         304)],
             '$332binary_add.16': [(<numba.core.ir.Assign object at 0x000001D071E91630>,
                                    304)],
             '$334binary_subscr.17': [(<numba.core.ir.Assign object at 0x000001D071E917B0>,
                                       304)],
             '$336binary_multiply.18': [(<numba.core.ir.Assign object at 0x000001D071E91930>,
                                         304)],
             '$348binary_subscr.24': [(<numba.core.ir.Assign object at 0x000001D071E92110>,
                                       304)],
             '$358binary_add.29': [(<numba.core.ir.Assign object at 0x000001D071E92710>,
                                    304)],
             '$362binary_add.31': [(<numba.core.ir.Assign object at 0x000001D071E92A10>,
                                    304)],
             '$364binary_subscr.32': [(<numba.core.ir.Assign object at 0x000001D071E92B90>,
                                       304)],
             '$366binary_multiply.33': [(<numba.core.ir.Assign object at 0x000001D071E92D10>,
                                         304)],
             '$368inplace_add.34': [(<numba.core.ir.Assign object at 0x000001D071E92E90>,
                                     304)],
             '$380return_value.1': [(<numba.core.ir.Assign object at 0x000001D071E91E10>,
                                     378)],
             '$44load_attr.13': [(<numba.core.ir.Assign object at 0x000001D071E66D40>,
                                  0)],
             '$54load_attr.17': [(<numba.core.ir.Assign object at 0x000001D071E67400>,
                                  0)],
             '$64load_attr.21': [(<numba.core.ir.Assign object at 0x000001D071E67AC0>,
                                  0)],
             '$72load_global.24': [(<numba.core.ir.Assign object at 0x000001D071E7C0A0>,
                                    0)],
             '$76call_function.26': [(<numba.core.ir.Assign object at 0x000001D071E7C3A0>,
                                      0)],
             '$78get_iter.27': [(<numba.core.ir.Assign object at 0x000001D071E7C4C0>,
                                 0)],
             '$80for_iter.1': [(<numba.core.ir.Assign object at 0x000001D071E66890>,
                                80)],
             '$80for_iter.2': [(<numba.core.ir.Assign object at 0x000001D071E671F0>,
                                80)],
             '$80for_iter.3': [(<numba.core.ir.Assign object at 0x000001D071E679D0>,
                                80)],
             '$8binary_multiply.3': [(<numba.core.ir.Assign object at 0x000001D071E655D0>,
                                      0)],
             '$92load_global.5': [(<numba.core.ir.Assign object at 0x000001D071E7CD00>,
                                   82)],
             '$const140.24': [(<numba.core.ir.Assign object at 0x000001D071E7E980>,
                               82)],
             '$const276.17': [(<numba.core.ir.Assign object at 0x000001D071E8B2E0>,
                               236)],
             '$const360.30': [(<numba.core.ir.Assign object at 0x000001D071E92860>,
                               304)],
             '$const378.0': [(<numba.core.ir.Assign object at 0x000001D071E91390>,
                              378)],
             '$const46.14': [(<numba.core.ir.Assign object at 0x000001D071E66EC0>,
                              0)],
             '$const56.18': [(<numba.core.ir.Assign object at 0x000001D071E67580>,
                              0)],
             '$const66.22': [(<numba.core.ir.Assign object at 0x000001D071E67C40>,
                              0)],
             '$phi166.1': [(<numba.core.ir.Assign object at 0x000001D071E7C820>,
                            82)],
             '$phi168.2': [(<numba.core.ir.Assign object at 0x000001D071E7CF10>,
                            166)],
             '$phi302.1': [(<numba.core.ir.Assign object at 0x000001D071E88490>,
                            236)],
             '$phi304.2': [(<numba.core.ir.Assign object at 0x000001D071E8A650>,
                            302)],
             '$phi80.0': [(<numba.core.ir.Assign object at 0x000001D071E65390>,
                           0)],
             '$phi82.1': [(<numba.core.ir.Assign object at 0x000001D071E66350>,
                           80)],
             'eta': [(<numba.core.ir.Assign object at 0x000001D071E666E0>, 0),
                     (<numba.core.ir.Assign object at 0x000001D071E7E4D0>, 82),
                     (<numba.core.ir.Assign object at 0x000001D071E8AB90>,
                      236)],
             'frac': [(<numba.core.ir.Assign object at 0x000001D071E65F00>, 0),
                      (<numba.core.ir.Assign object at 0x000001D071E7D6F0>, 82),
                      (<numba.core.ir.Assign object at 0x000001D071E89240>,
                       236)],
             'i': [(<numba.core.ir.Assign object at 0x000001D071E7E5F0>, 168)],
             'i_max': [(<numba.core.ir.Assign object at 0x000001D071E7F340>,
                        82)],
             'index_frac': [(<numba.core.ir.Assign object at 0x000001D071E661A0>,
                             0),
                            (<numba.core.ir.Assign object at 0x000001D071E7DB70>,
                             82),
                            (<numba.core.ir.Assign object at 0x000001D071E8A230>,
                             236)],
             'index_step': [(<numba.core.ir.Assign object at 0x000001D071E65780>,
                             0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x000001D071E64760>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x000001D071E643A0>,
                             0)],
             'k': [(<numba.core.ir.Assign object at 0x000001D071E90460>, 304)],
             'k_max': [(<numba.core.ir.Assign object at 0x000001D071E8BCA0>,
                        236)],
             'n': [(<numba.core.ir.Assign object at 0x000001D071E65C60>, 0),
                   (<numba.core.ir.Assign object at 0x000001D071E7D000>, 82)],
             'n_orig': [(<numba.core.ir.Assign object at 0x000001D071E93EE0>,
                         0)],
             'n_out': [(<numba.core.ir.Assign object at 0x000001D071E93CA0>,
                        0)],
             'num_table': [(<numba.core.ir.Assign object at 0x000001D071E64940>,
                            0)],
             'nwin': [(<numba.core.ir.Assign object at 0x000001D071E93F40>, 0)],
             'offset': [(<numba.core.ir.Assign object at 0x000001D071E66440>,
                         0),
                        (<numba.core.ir.Assign object at 0x000001D071E7E080>,
                         82),
                        (<numba.core.ir.Assign object at 0x000001D071E8A740>,
                         236)],
             'scale': [(<numba.core.ir.Assign object at 0x000001D071E64820>,
                        0)],
             't': [(<numba.core.ir.Assign object at 0x000001D071E7C700>, 82)],
             't_out': [(<numba.core.ir.Assign object at 0x000001D071E64D00>,
                        0)],
             'time_register': [(<numba.core.ir.Assign object at 0x000001D071E659C0>,
                                0),
                               (<numba.core.ir.Assign object at 0x000001D071E7CAF0>,
                                82)],
             'weight': [(<numba.core.ir.Assign object at 0x000001D071E66980>,
                         0),
                        (<numba.core.ir.Assign object at 0x000001D071E88DF0>,
                         168),
                        (<numba.core.ir.Assign object at 0x000001D071E91AB0>,
                         304)],
             'x': [(<numba.core.ir.Assign object at 0x000001D071E641F0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x000001D071E65060>, 0)]})
2025-03-15 11:06:30,287 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001D071DE3340>
2025-03-15 11:06:30,287 - numba.core.ssa - DEBUG - Fix SSA violator on var time_register
2025-03-15 11:06:30,287 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-15 11:06:30,287 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071DE34C0>
2025-03-15 11:06:30,287 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-15 11:06:30,288 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-03-15 11:06:30,288 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-03-15 11:06:30,288 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-03-15 11:06:30,288 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-03-15 11:06:30,288 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-03-15 11:06:30,288 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-03-15 11:06:30,288 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-03-15 11:06:30,288 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-03-15 11:06:30,288 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,288 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-03-15 11:06:30,288 - numba.core.ssa - DEBUG - first assign: time_register
2025-03-15 11:06:30,288 - numba.core.ssa - DEBUG - replaced with: time_register = const(float, 0.0)
2025-03-15 11:06:30,288 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-03-15 11:06:30,288 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-03-15 11:06:30,288 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-03-15 11:06:30,289 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-03-15 11:06:30,289 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-03-15 11:06:30,289 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-03-15 11:06:30,289 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-03-15 11:06:30,289 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-03-15 11:06:30,289 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-03-15 11:06:30,289 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-03-15 11:06:30,289 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-03-15 11:06:30,289 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-03-15 11:06:30,289 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-03-15 11:06:30,289 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-03-15 11:06:30,289 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-03-15 11:06:30,289 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-03-15 11:06:30,289 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,289 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-03-15 11:06:30,289 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-03-15 11:06:30,289 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-15 11:06:30,289 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-03-15 11:06:30,290 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071DE34C0>
2025-03-15 11:06:30,290 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-03-15 11:06:30,290 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-03-15 11:06:30,290 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-03-15 11:06:30,290 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-03-15 11:06:30,290 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-03-15 11:06:30,290 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-03-15 11:06:30,290 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071DE34C0>
2025-03-15 11:06:30,290 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-03-15 11:06:30,290 - numba.core.ssa - DEBUG - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,290 - numba.core.ssa - DEBUG - replaced with: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,290 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-03-15 11:06:30,290 - numba.core.ssa - DEBUG - on stmt: n = call $92load_global.5(time_register, func=$92load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,290 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register - n
2025-03-15 11:06:30,290 - numba.core.ssa - DEBUG - on stmt: frac = scale * $106binary_subtract.11
2025-03-15 11:06:30,290 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-03-15 11:06:30,290 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-03-15 11:06:30,291 - numba.core.ssa - DEBUG - on stmt: offset = call $120load_global.16(index_frac, func=$120load_global.16, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,291 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-03-15 11:06:30,291 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-03-15 11:06:30,291 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-03-15 11:06:30,291 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n + $const140.24
2025-03-15 11:06:30,291 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset
2025-03-15 11:06:30,291 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-03-15 11:06:30,291 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,291 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-03-15 11:06:30,291 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,291 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-03-15 11:06:30,291 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-03-15 11:06:30,291 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-03-15 11:06:30,291 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-03-15 11:06:30,291 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071DE34C0>
2025-03-15 11:06:30,291 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-03-15 11:06:30,292 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-03-15 11:06:30,292 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-03-15 11:06:30,292 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-03-15 11:06:30,292 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-03-15 11:06:30,292 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-03-15 11:06:30,292 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071DE34C0>
2025-03-15 11:06:30,292 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-03-15 11:06:30,292 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-03-15 11:06:30,292 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset + $178binary_multiply.7
2025-03-15 11:06:30,292 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-03-15 11:06:30,292 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-03-15 11:06:30,292 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset + $194binary_multiply.15
2025-03-15 11:06:30,292 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-03-15 11:06:30,292 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-03-15 11:06:30,292 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-03-15 11:06:30,292 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,292 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n - i
2025-03-15 11:06:30,293 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-03-15 11:06:30,293 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-03-15 11:06:30,293 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-03-15 11:06:30,293 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-03-15 11:06:30,293 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-03-15 11:06:30,293 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-03-15 11:06:30,293 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071DE34C0>
2025-03-15 11:06:30,293 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac
2025-03-15 11:06:30,293 - numba.core.ssa - DEBUG - on stmt: frac = $240binary_subtract.3
2025-03-15 11:06:30,293 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-03-15 11:06:30,293 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-03-15 11:06:30,293 - numba.core.ssa - DEBUG - on stmt: offset = call $252load_global.7(index_frac, func=$252load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,293 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-03-15 11:06:30,293 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-03-15 11:06:30,293 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n
2025-03-15 11:06:30,293 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-03-15 11:06:30,293 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-03-15 11:06:30,294 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset
2025-03-15 11:06:30,294 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-03-15 11:06:30,294 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,294 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-03-15 11:06:30,294 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,294 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-03-15 11:06:30,294 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-03-15 11:06:30,294 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-03-15 11:06:30,294 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-03-15 11:06:30,294 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071DE34C0>
2025-03-15 11:06:30,294 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-03-15 11:06:30,294 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-03-15 11:06:30,294 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-03-15 11:06:30,294 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-03-15 11:06:30,294 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-03-15 11:06:30,294 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-03-15 11:06:30,294 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071DE34C0>
2025-03-15 11:06:30,295 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-03-15 11:06:30,295 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-03-15 11:06:30,295 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset + $314binary_multiply.7
2025-03-15 11:06:30,295 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-03-15 11:06:30,295 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-03-15 11:06:30,295 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset + $330binary_multiply.15
2025-03-15 11:06:30,295 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-03-15 11:06:30,295 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-03-15 11:06:30,295 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-03-15 11:06:30,295 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,295 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n + k
2025-03-15 11:06:30,295 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-03-15 11:06:30,295 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-03-15 11:06:30,295 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-03-15 11:06:30,295 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-03-15 11:06:30,295 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-03-15 11:06:30,295 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-03-15 11:06:30,296 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-03-15 11:06:30,296 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-03-15 11:06:30,296 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071DE34C0>
2025-03-15 11:06:30,296 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-15 11:06:30,296 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-03-15 11:06:30,296 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071DE34C0>
2025-03-15 11:06:30,296 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-03-15 11:06:30,296 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-03-15 11:06:30,296 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-03-15 11:06:30,296 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001D071E64190>],
             82: [<numba.core.ir.Assign object at 0x000001D071E64040>]})
2025-03-15 11:06:30,296 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-15 11:06:30,296 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071DE34C0>
2025-03-15 11:06:30,296 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-15 11:06:30,296 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-03-15 11:06:30,296 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-03-15 11:06:30,296 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-03-15 11:06:30,297 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-03-15 11:06:30,297 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-03-15 11:06:30,297 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-03-15 11:06:30,297 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-03-15 11:06:30,297 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-03-15 11:06:30,297 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,297 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-03-15 11:06:30,297 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-03-15 11:06:30,297 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-03-15 11:06:30,297 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-03-15 11:06:30,297 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-03-15 11:06:30,297 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-03-15 11:06:30,297 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-03-15 11:06:30,297 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-03-15 11:06:30,297 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-03-15 11:06:30,297 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-03-15 11:06:30,298 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-03-15 11:06:30,298 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-03-15 11:06:30,298 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-03-15 11:06:30,298 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-03-15 11:06:30,298 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-03-15 11:06:30,298 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-03-15 11:06:30,298 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-03-15 11:06:30,298 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,298 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-03-15 11:06:30,298 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-03-15 11:06:30,298 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-15 11:06:30,298 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-03-15 11:06:30,298 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071DE34C0>
2025-03-15 11:06:30,298 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-03-15 11:06:30,298 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-03-15 11:06:30,299 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-03-15 11:06:30,299 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-03-15 11:06:30,299 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-03-15 11:06:30,299 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-03-15 11:06:30,299 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071DE34C0>
2025-03-15 11:06:30,299 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-03-15 11:06:30,299 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,299 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-03-15 11:06:30,299 - numba.core.ssa - DEBUG - on stmt: n = call $92load_global.5(time_register, func=$92load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,299 - numba.core.ssa - DEBUG - find_def var='time_register' stmt=n = call $92load_global.5(time_register, func=$92load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,299 - numba.core.ssa - DEBUG - replaced with: n = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,299 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register - n
2025-03-15 11:06:30,299 - numba.core.ssa - DEBUG - find_def var='time_register' stmt=$106binary_subtract.11 = time_register - n
2025-03-15 11:06:30,299 - numba.core.ssa - DEBUG - replaced with: $106binary_subtract.11 = time_register.1 - n
2025-03-15 11:06:30,300 - numba.core.ssa - DEBUG - on stmt: frac = scale * $106binary_subtract.11
2025-03-15 11:06:30,300 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-03-15 11:06:30,300 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-03-15 11:06:30,300 - numba.core.ssa - DEBUG - on stmt: offset = call $120load_global.16(index_frac, func=$120load_global.16, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,300 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-03-15 11:06:30,300 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-03-15 11:06:30,300 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-03-15 11:06:30,300 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n + $const140.24
2025-03-15 11:06:30,300 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset
2025-03-15 11:06:30,300 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-03-15 11:06:30,300 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,300 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-03-15 11:06:30,300 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,300 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-03-15 11:06:30,301 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-03-15 11:06:30,301 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-03-15 11:06:30,301 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-03-15 11:06:30,301 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071DE34C0>
2025-03-15 11:06:30,301 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-03-15 11:06:30,301 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-03-15 11:06:30,301 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-03-15 11:06:30,301 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-03-15 11:06:30,301 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-03-15 11:06:30,301 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-03-15 11:06:30,301 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071DE34C0>
2025-03-15 11:06:30,301 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-03-15 11:06:30,301 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-03-15 11:06:30,301 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset + $178binary_multiply.7
2025-03-15 11:06:30,301 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-03-15 11:06:30,301 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-03-15 11:06:30,302 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset + $194binary_multiply.15
2025-03-15 11:06:30,302 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-03-15 11:06:30,302 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-03-15 11:06:30,302 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-03-15 11:06:30,302 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,302 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n - i
2025-03-15 11:06:30,302 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-03-15 11:06:30,302 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-03-15 11:06:30,302 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-03-15 11:06:30,302 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-03-15 11:06:30,302 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-03-15 11:06:30,302 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-03-15 11:06:30,302 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071DE34C0>
2025-03-15 11:06:30,302 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac
2025-03-15 11:06:30,302 - numba.core.ssa - DEBUG - on stmt: frac = $240binary_subtract.3
2025-03-15 11:06:30,302 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-03-15 11:06:30,303 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-03-15 11:06:30,303 - numba.core.ssa - DEBUG - on stmt: offset = call $252load_global.7(index_frac, func=$252load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,303 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-03-15 11:06:30,303 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-03-15 11:06:30,303 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n
2025-03-15 11:06:30,303 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-03-15 11:06:30,303 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-03-15 11:06:30,303 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset
2025-03-15 11:06:30,303 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-03-15 11:06:30,303 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,303 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-03-15 11:06:30,303 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,303 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-03-15 11:06:30,303 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-03-15 11:06:30,304 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-03-15 11:06:30,304 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-03-15 11:06:30,304 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071DE34C0>
2025-03-15 11:06:30,304 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-03-15 11:06:30,304 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-03-15 11:06:30,304 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-03-15 11:06:30,304 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-03-15 11:06:30,304 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-03-15 11:06:30,304 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-03-15 11:06:30,304 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071DE34C0>
2025-03-15 11:06:30,304 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-03-15 11:06:30,304 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-03-15 11:06:30,304 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset + $314binary_multiply.7
2025-03-15 11:06:30,304 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-03-15 11:06:30,304 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-03-15 11:06:30,304 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset + $330binary_multiply.15
2025-03-15 11:06:30,305 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-03-15 11:06:30,305 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-03-15 11:06:30,305 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-03-15 11:06:30,305 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,305 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n + k
2025-03-15 11:06:30,305 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-03-15 11:06:30,305 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-03-15 11:06:30,305 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-03-15 11:06:30,305 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-03-15 11:06:30,305 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-03-15 11:06:30,305 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-03-15 11:06:30,305 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-03-15 11:06:30,305 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-03-15 11:06:30,305 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071DE34C0>
2025-03-15 11:06:30,305 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-15 11:06:30,306 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-03-15 11:06:30,306 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071DE34C0>
2025-03-15 11:06:30,306 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-03-15 11:06:30,306 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-03-15 11:06:30,306 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-03-15 11:06:30,306 - numba.core.ssa - DEBUG - Fix SSA violator on var n
2025-03-15 11:06:30,306 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-15 11:06:30,306 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64BE0>
2025-03-15 11:06:30,306 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-15 11:06:30,306 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-03-15 11:06:30,306 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-03-15 11:06:30,306 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-03-15 11:06:30,306 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-03-15 11:06:30,306 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-03-15 11:06:30,306 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-03-15 11:06:30,306 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-03-15 11:06:30,306 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-03-15 11:06:30,306 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,307 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-03-15 11:06:30,307 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-03-15 11:06:30,307 - numba.core.ssa - DEBUG - first assign: n
2025-03-15 11:06:30,307 - numba.core.ssa - DEBUG - replaced with: n = const(int, 0)
2025-03-15 11:06:30,307 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-03-15 11:06:30,307 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-03-15 11:06:30,307 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-03-15 11:06:30,307 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-03-15 11:06:30,307 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-03-15 11:06:30,307 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-03-15 11:06:30,307 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-03-15 11:06:30,307 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-03-15 11:06:30,307 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-03-15 11:06:30,307 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-03-15 11:06:30,307 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-03-15 11:06:30,307 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-03-15 11:06:30,307 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-03-15 11:06:30,307 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-03-15 11:06:30,308 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-03-15 11:06:30,308 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,308 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-03-15 11:06:30,308 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-03-15 11:06:30,308 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-15 11:06:30,308 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-03-15 11:06:30,308 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64BE0>
2025-03-15 11:06:30,308 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-03-15 11:06:30,308 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-03-15 11:06:30,308 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-03-15 11:06:30,308 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-03-15 11:06:30,308 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-03-15 11:06:30,308 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-03-15 11:06:30,308 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64BE0>
2025-03-15 11:06:30,308 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-03-15 11:06:30,308 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,308 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-03-15 11:06:30,309 - numba.core.ssa - DEBUG - on stmt: n = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,309 - numba.core.ssa - DEBUG - replaced with: n.1 = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,309 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register.1 - n
2025-03-15 11:06:30,309 - numba.core.ssa - DEBUG - on stmt: frac = scale * $106binary_subtract.11
2025-03-15 11:06:30,309 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-03-15 11:06:30,309 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-03-15 11:06:30,309 - numba.core.ssa - DEBUG - on stmt: offset = call $120load_global.16(index_frac, func=$120load_global.16, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,309 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-03-15 11:06:30,309 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-03-15 11:06:30,309 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-03-15 11:06:30,309 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n + $const140.24
2025-03-15 11:06:30,309 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset
2025-03-15 11:06:30,309 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-03-15 11:06:30,309 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,309 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-03-15 11:06:30,310 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,310 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-03-15 11:06:30,310 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-03-15 11:06:30,310 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-03-15 11:06:30,310 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-03-15 11:06:30,310 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64BE0>
2025-03-15 11:06:30,310 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-03-15 11:06:30,310 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-03-15 11:06:30,310 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-03-15 11:06:30,310 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-03-15 11:06:30,310 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-03-15 11:06:30,310 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-03-15 11:06:30,310 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64BE0>
2025-03-15 11:06:30,310 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-03-15 11:06:30,310 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-03-15 11:06:30,310 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset + $178binary_multiply.7
2025-03-15 11:06:30,310 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-03-15 11:06:30,310 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-03-15 11:06:30,311 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset + $194binary_multiply.15
2025-03-15 11:06:30,311 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-03-15 11:06:30,311 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-03-15 11:06:30,311 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-03-15 11:06:30,311 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,311 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n - i
2025-03-15 11:06:30,311 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-03-15 11:06:30,311 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-03-15 11:06:30,311 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-03-15 11:06:30,311 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-03-15 11:06:30,311 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-03-15 11:06:30,311 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-03-15 11:06:30,311 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64BE0>
2025-03-15 11:06:30,311 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac
2025-03-15 11:06:30,311 - numba.core.ssa - DEBUG - on stmt: frac = $240binary_subtract.3
2025-03-15 11:06:30,311 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-03-15 11:06:30,311 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-03-15 11:06:30,312 - numba.core.ssa - DEBUG - on stmt: offset = call $252load_global.7(index_frac, func=$252load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,312 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-03-15 11:06:30,312 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-03-15 11:06:30,312 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n
2025-03-15 11:06:30,312 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-03-15 11:06:30,312 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-03-15 11:06:30,312 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset
2025-03-15 11:06:30,312 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-03-15 11:06:30,312 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,312 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-03-15 11:06:30,312 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,312 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-03-15 11:06:30,312 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-03-15 11:06:30,312 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-03-15 11:06:30,312 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-03-15 11:06:30,312 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64BE0>
2025-03-15 11:06:30,312 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-03-15 11:06:30,313 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-03-15 11:06:30,313 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-03-15 11:06:30,313 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-03-15 11:06:30,313 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-03-15 11:06:30,313 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-03-15 11:06:30,313 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64BE0>
2025-03-15 11:06:30,313 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-03-15 11:06:30,313 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-03-15 11:06:30,313 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset + $314binary_multiply.7
2025-03-15 11:06:30,313 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-03-15 11:06:30,313 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-03-15 11:06:30,313 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset + $330binary_multiply.15
2025-03-15 11:06:30,313 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-03-15 11:06:30,313 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-03-15 11:06:30,313 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-03-15 11:06:30,313 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,313 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n + k
2025-03-15 11:06:30,314 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-03-15 11:06:30,314 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-03-15 11:06:30,314 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-03-15 11:06:30,314 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-03-15 11:06:30,314 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-03-15 11:06:30,314 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-03-15 11:06:30,314 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-03-15 11:06:30,314 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-03-15 11:06:30,314 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64BE0>
2025-03-15 11:06:30,314 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-15 11:06:30,314 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-03-15 11:06:30,314 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64BE0>
2025-03-15 11:06:30,314 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-03-15 11:06:30,314 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-03-15 11:06:30,314 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-03-15 11:06:30,314 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001D071E64FD0>],
             82: [<numba.core.ir.Assign object at 0x000001D071E64A90>]})
2025-03-15 11:06:30,314 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-15 11:06:30,315 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E64BE0>
2025-03-15 11:06:30,315 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-15 11:06:30,315 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-03-15 11:06:30,315 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-03-15 11:06:30,315 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-03-15 11:06:30,315 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-03-15 11:06:30,315 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-03-15 11:06:30,315 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-03-15 11:06:30,315 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-03-15 11:06:30,315 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-03-15 11:06:30,315 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,315 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-03-15 11:06:30,315 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-03-15 11:06:30,315 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-03-15 11:06:30,315 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-03-15 11:06:30,315 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-03-15 11:06:30,315 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-03-15 11:06:30,316 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-03-15 11:06:30,316 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-03-15 11:06:30,316 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-03-15 11:06:30,316 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-03-15 11:06:30,316 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-03-15 11:06:30,316 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-03-15 11:06:30,316 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-03-15 11:06:30,316 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-03-15 11:06:30,316 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-03-15 11:06:30,316 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-03-15 11:06:30,316 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-03-15 11:06:30,316 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,316 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-03-15 11:06:30,316 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-03-15 11:06:30,316 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-15 11:06:30,316 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-03-15 11:06:30,316 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E64BE0>
2025-03-15 11:06:30,317 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-03-15 11:06:30,317 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-03-15 11:06:30,317 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-03-15 11:06:30,317 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-03-15 11:06:30,317 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-03-15 11:06:30,317 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-03-15 11:06:30,317 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E64BE0>
2025-03-15 11:06:30,317 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-03-15 11:06:30,317 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,317 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-03-15 11:06:30,317 - numba.core.ssa - DEBUG - on stmt: n.1 = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,317 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register.1 - n
2025-03-15 11:06:30,317 - numba.core.ssa - DEBUG - find_def var='n' stmt=$106binary_subtract.11 = time_register.1 - n
2025-03-15 11:06:30,317 - numba.core.ssa - DEBUG - replaced with: $106binary_subtract.11 = time_register.1 - n.1
2025-03-15 11:06:30,317 - numba.core.ssa - DEBUG - on stmt: frac = scale * $106binary_subtract.11
2025-03-15 11:06:30,317 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-03-15 11:06:30,318 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-03-15 11:06:30,318 - numba.core.ssa - DEBUG - on stmt: offset = call $120load_global.16(index_frac, func=$120load_global.16, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,318 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-03-15 11:06:30,318 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-03-15 11:06:30,318 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-03-15 11:06:30,318 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n + $const140.24
2025-03-15 11:06:30,318 - numba.core.ssa - DEBUG - find_def var='n' stmt=$142binary_add.25 = n + $const140.24
2025-03-15 11:06:30,318 - numba.core.ssa - DEBUG - replaced with: $142binary_add.25 = n.1 + $const140.24
2025-03-15 11:06:30,318 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset
2025-03-15 11:06:30,318 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-03-15 11:06:30,318 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,318 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-03-15 11:06:30,318 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,318 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-03-15 11:06:30,318 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-03-15 11:06:30,319 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-03-15 11:06:30,319 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-03-15 11:06:30,319 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E64BE0>
2025-03-15 11:06:30,319 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-03-15 11:06:30,319 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-03-15 11:06:30,319 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-03-15 11:06:30,319 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-03-15 11:06:30,319 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-03-15 11:06:30,319 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-03-15 11:06:30,319 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E64BE0>
2025-03-15 11:06:30,319 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-03-15 11:06:30,319 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-03-15 11:06:30,319 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset + $178binary_multiply.7
2025-03-15 11:06:30,319 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-03-15 11:06:30,319 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-03-15 11:06:30,319 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset + $194binary_multiply.15
2025-03-15 11:06:30,320 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-03-15 11:06:30,320 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-03-15 11:06:30,320 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-03-15 11:06:30,320 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,320 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n - i
2025-03-15 11:06:30,320 - numba.core.ssa - DEBUG - find_def var='n' stmt=$222binary_subtract.29 = n - i
2025-03-15 11:06:30,320 - numba.core.ssa - DEBUG - find_def_from_top label 168
2025-03-15 11:06:30,320 - numba.core.ssa - DEBUG - idom 166 from label 168
2025-03-15 11:06:30,320 - numba.core.ssa - DEBUG - find_def_from_bottom label 166
2025-03-15 11:06:30,320 - numba.core.ssa - DEBUG - find_def_from_top label 166
2025-03-15 11:06:30,320 - numba.core.ssa - DEBUG - idom 82 from label 166
2025-03-15 11:06:30,320 - numba.core.ssa - DEBUG - find_def_from_bottom label 82
2025-03-15 11:06:30,320 - numba.core.ssa - DEBUG - replaced with: $222binary_subtract.29 = n.1 - i
2025-03-15 11:06:30,320 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-03-15 11:06:30,320 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-03-15 11:06:30,320 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-03-15 11:06:30,321 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-03-15 11:06:30,321 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-03-15 11:06:30,321 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-03-15 11:06:30,321 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E64BE0>
2025-03-15 11:06:30,321 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac
2025-03-15 11:06:30,321 - numba.core.ssa - DEBUG - on stmt: frac = $240binary_subtract.3
2025-03-15 11:06:30,321 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-03-15 11:06:30,321 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-03-15 11:06:30,321 - numba.core.ssa - DEBUG - on stmt: offset = call $252load_global.7(index_frac, func=$252load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,321 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-03-15 11:06:30,321 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-03-15 11:06:30,321 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n
2025-03-15 11:06:30,321 - numba.core.ssa - DEBUG - find_def var='n' stmt=$274binary_subtract.16 = n_orig - n
2025-03-15 11:06:30,321 - numba.core.ssa - DEBUG - find_def_from_top label 236
2025-03-15 11:06:30,321 - numba.core.ssa - DEBUG - idom 166 from label 236
2025-03-15 11:06:30,321 - numba.core.ssa - DEBUG - find_def_from_bottom label 166
2025-03-15 11:06:30,321 - numba.core.ssa - DEBUG - find_def_from_top label 166
2025-03-15 11:06:30,322 - numba.core.ssa - DEBUG - idom 82 from label 166
2025-03-15 11:06:30,322 - numba.core.ssa - DEBUG - find_def_from_bottom label 82
2025-03-15 11:06:30,322 - numba.core.ssa - DEBUG - replaced with: $274binary_subtract.16 = n_orig - n.1
2025-03-15 11:06:30,322 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-03-15 11:06:30,322 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-03-15 11:06:30,322 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset
2025-03-15 11:06:30,322 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-03-15 11:06:30,322 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,322 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-03-15 11:06:30,322 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,322 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-03-15 11:06:30,322 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-03-15 11:06:30,322 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-03-15 11:06:30,322 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-03-15 11:06:30,322 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E64BE0>
2025-03-15 11:06:30,322 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-03-15 11:06:30,323 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-03-15 11:06:30,323 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-03-15 11:06:30,323 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-03-15 11:06:30,323 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-03-15 11:06:30,323 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-03-15 11:06:30,323 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E64BE0>
2025-03-15 11:06:30,323 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-03-15 11:06:30,323 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-03-15 11:06:30,323 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset + $314binary_multiply.7
2025-03-15 11:06:30,323 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-03-15 11:06:30,323 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-03-15 11:06:30,323 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset + $330binary_multiply.15
2025-03-15 11:06:30,323 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-03-15 11:06:30,323 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-03-15 11:06:30,323 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-03-15 11:06:30,323 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,323 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n + k
2025-03-15 11:06:30,324 - numba.core.ssa - DEBUG - find_def var='n' stmt=$358binary_add.29 = n + k
2025-03-15 11:06:30,324 - numba.core.ssa - DEBUG - find_def_from_top label 304
2025-03-15 11:06:30,324 - numba.core.ssa - DEBUG - idom 302 from label 304
2025-03-15 11:06:30,324 - numba.core.ssa - DEBUG - find_def_from_bottom label 302
2025-03-15 11:06:30,324 - numba.core.ssa - DEBUG - find_def_from_top label 302
2025-03-15 11:06:30,324 - numba.core.ssa - DEBUG - idom 236 from label 302
2025-03-15 11:06:30,324 - numba.core.ssa - DEBUG - find_def_from_bottom label 236
2025-03-15 11:06:30,324 - numba.core.ssa - DEBUG - find_def_from_top label 236
2025-03-15 11:06:30,324 - numba.core.ssa - DEBUG - idom 166 from label 236
2025-03-15 11:06:30,324 - numba.core.ssa - DEBUG - find_def_from_bottom label 166
2025-03-15 11:06:30,324 - numba.core.ssa - DEBUG - find_def_from_top label 166
2025-03-15 11:06:30,324 - numba.core.ssa - DEBUG - idom 82 from label 166
2025-03-15 11:06:30,324 - numba.core.ssa - DEBUG - find_def_from_bottom label 82
2025-03-15 11:06:30,324 - numba.core.ssa - DEBUG - replaced with: $358binary_add.29 = n.1 + k
2025-03-15 11:06:30,324 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-03-15 11:06:30,324 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-03-15 11:06:30,324 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-03-15 11:06:30,324 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-03-15 11:06:30,325 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-03-15 11:06:30,325 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-03-15 11:06:30,325 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-03-15 11:06:30,325 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-03-15 11:06:30,325 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E64BE0>
2025-03-15 11:06:30,325 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-15 11:06:30,325 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-03-15 11:06:30,325 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E64BE0>
2025-03-15 11:06:30,325 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-03-15 11:06:30,325 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-03-15 11:06:30,325 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-03-15 11:06:30,325 - numba.core.ssa - DEBUG - Fix SSA violator on var frac
2025-03-15 11:06:30,325 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-15 11:06:30,325 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64B50>
2025-03-15 11:06:30,325 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-15 11:06:30,325 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-03-15 11:06:30,325 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-03-15 11:06:30,325 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-03-15 11:06:30,326 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-03-15 11:06:30,326 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-03-15 11:06:30,326 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-03-15 11:06:30,326 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-03-15 11:06:30,326 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-03-15 11:06:30,326 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,326 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-03-15 11:06:30,326 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-03-15 11:06:30,326 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-03-15 11:06:30,326 - numba.core.ssa - DEBUG - first assign: frac
2025-03-15 11:06:30,326 - numba.core.ssa - DEBUG - replaced with: frac = const(float, 0.0)
2025-03-15 11:06:30,326 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-03-15 11:06:30,326 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-03-15 11:06:30,326 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-03-15 11:06:30,326 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-03-15 11:06:30,326 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-03-15 11:06:30,326 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-03-15 11:06:30,326 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-03-15 11:06:30,327 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-03-15 11:06:30,327 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-03-15 11:06:30,327 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-03-15 11:06:30,327 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-03-15 11:06:30,327 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-03-15 11:06:30,327 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-03-15 11:06:30,327 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-03-15 11:06:30,327 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,327 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-03-15 11:06:30,327 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-03-15 11:06:30,327 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-15 11:06:30,327 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-03-15 11:06:30,327 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64B50>
2025-03-15 11:06:30,327 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-03-15 11:06:30,327 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-03-15 11:06:30,327 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-03-15 11:06:30,327 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-03-15 11:06:30,328 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-03-15 11:06:30,328 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-03-15 11:06:30,328 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64B50>
2025-03-15 11:06:30,328 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-03-15 11:06:30,328 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,328 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-03-15 11:06:30,328 - numba.core.ssa - DEBUG - on stmt: n.1 = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,328 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register.1 - n.1
2025-03-15 11:06:30,328 - numba.core.ssa - DEBUG - on stmt: frac = scale * $106binary_subtract.11
2025-03-15 11:06:30,328 - numba.core.ssa - DEBUG - replaced with: frac.1 = scale * $106binary_subtract.11
2025-03-15 11:06:30,328 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-03-15 11:06:30,328 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-03-15 11:06:30,328 - numba.core.ssa - DEBUG - on stmt: offset = call $120load_global.16(index_frac, func=$120load_global.16, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,328 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-03-15 11:06:30,328 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-03-15 11:06:30,328 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-03-15 11:06:30,328 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n.1 + $const140.24
2025-03-15 11:06:30,329 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset
2025-03-15 11:06:30,329 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-03-15 11:06:30,329 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,329 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-03-15 11:06:30,329 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,329 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-03-15 11:06:30,329 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-03-15 11:06:30,329 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-03-15 11:06:30,329 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-03-15 11:06:30,329 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64B50>
2025-03-15 11:06:30,329 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-03-15 11:06:30,329 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-03-15 11:06:30,329 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-03-15 11:06:30,329 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-03-15 11:06:30,329 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-03-15 11:06:30,329 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-03-15 11:06:30,329 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64B50>
2025-03-15 11:06:30,330 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-03-15 11:06:30,330 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-03-15 11:06:30,330 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset + $178binary_multiply.7
2025-03-15 11:06:30,330 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-03-15 11:06:30,330 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-03-15 11:06:30,330 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset + $194binary_multiply.15
2025-03-15 11:06:30,330 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-03-15 11:06:30,330 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-03-15 11:06:30,330 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-03-15 11:06:30,330 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,330 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n.1 - i
2025-03-15 11:06:30,330 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-03-15 11:06:30,330 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-03-15 11:06:30,330 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-03-15 11:06:30,330 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-03-15 11:06:30,330 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-03-15 11:06:30,330 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-03-15 11:06:30,331 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64B50>
2025-03-15 11:06:30,331 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac
2025-03-15 11:06:30,331 - numba.core.ssa - DEBUG - on stmt: frac = $240binary_subtract.3
2025-03-15 11:06:30,331 - numba.core.ssa - DEBUG - replaced with: frac.2 = $240binary_subtract.3
2025-03-15 11:06:30,331 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-03-15 11:06:30,331 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-03-15 11:06:30,331 - numba.core.ssa - DEBUG - on stmt: offset = call $252load_global.7(index_frac, func=$252load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,331 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-03-15 11:06:30,331 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-03-15 11:06:30,331 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n.1
2025-03-15 11:06:30,331 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-03-15 11:06:30,331 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-03-15 11:06:30,331 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset
2025-03-15 11:06:30,331 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-03-15 11:06:30,331 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,331 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-03-15 11:06:30,331 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,332 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-03-15 11:06:30,332 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-03-15 11:06:30,332 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-03-15 11:06:30,332 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-03-15 11:06:30,332 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64B50>
2025-03-15 11:06:30,332 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-03-15 11:06:30,332 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-03-15 11:06:30,332 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-03-15 11:06:30,332 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-03-15 11:06:30,332 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-03-15 11:06:30,332 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-03-15 11:06:30,332 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64B50>
2025-03-15 11:06:30,332 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-03-15 11:06:30,332 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-03-15 11:06:30,332 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset + $314binary_multiply.7
2025-03-15 11:06:30,332 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-03-15 11:06:30,332 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-03-15 11:06:30,332 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset + $330binary_multiply.15
2025-03-15 11:06:30,333 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-03-15 11:06:30,333 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-03-15 11:06:30,333 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-03-15 11:06:30,333 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,333 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n.1 + k
2025-03-15 11:06:30,333 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-03-15 11:06:30,333 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-03-15 11:06:30,333 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-03-15 11:06:30,333 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-03-15 11:06:30,333 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-03-15 11:06:30,333 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-03-15 11:06:30,333 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-03-15 11:06:30,333 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-03-15 11:06:30,333 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64B50>
2025-03-15 11:06:30,333 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-15 11:06:30,333 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-03-15 11:06:30,333 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64B50>
2025-03-15 11:06:30,334 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-03-15 11:06:30,334 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-03-15 11:06:30,334 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-03-15 11:06:30,334 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001D071E64E20>],
             82: [<numba.core.ir.Assign object at 0x000001D071E93220>],
             236: [<numba.core.ir.Assign object at 0x000001D071E93E80>]})
2025-03-15 11:06:30,334 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-15 11:06:30,334 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93A60>
2025-03-15 11:06:30,334 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-15 11:06:30,334 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-03-15 11:06:30,334 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-03-15 11:06:30,334 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-03-15 11:06:30,334 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-03-15 11:06:30,334 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-03-15 11:06:30,334 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-03-15 11:06:30,334 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-03-15 11:06:30,334 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-03-15 11:06:30,334 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,335 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-03-15 11:06:30,335 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-03-15 11:06:30,335 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-03-15 11:06:30,335 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-03-15 11:06:30,335 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-03-15 11:06:30,335 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-03-15 11:06:30,335 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-03-15 11:06:30,335 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-03-15 11:06:30,335 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-03-15 11:06:30,335 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-03-15 11:06:30,335 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-03-15 11:06:30,335 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-03-15 11:06:30,335 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-03-15 11:06:30,335 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-03-15 11:06:30,335 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-03-15 11:06:30,335 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-03-15 11:06:30,335 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-03-15 11:06:30,336 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,336 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-03-15 11:06:30,336 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-03-15 11:06:30,336 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-15 11:06:30,336 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-03-15 11:06:30,336 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93A60>
2025-03-15 11:06:30,336 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-03-15 11:06:30,336 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-03-15 11:06:30,336 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-03-15 11:06:30,336 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-03-15 11:06:30,336 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-03-15 11:06:30,336 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-03-15 11:06:30,336 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93A60>
2025-03-15 11:06:30,336 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-03-15 11:06:30,336 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,336 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-03-15 11:06:30,336 - numba.core.ssa - DEBUG - on stmt: n.1 = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,337 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register.1 - n.1
2025-03-15 11:06:30,337 - numba.core.ssa - DEBUG - on stmt: frac.1 = scale * $106binary_subtract.11
2025-03-15 11:06:30,337 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-03-15 11:06:30,337 - numba.core.ssa - DEBUG - find_def var='frac' stmt=index_frac = frac * num_table
2025-03-15 11:06:30,337 - numba.core.ssa - DEBUG - replaced with: index_frac = frac.1 * num_table
2025-03-15 11:06:30,337 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-03-15 11:06:30,337 - numba.core.ssa - DEBUG - on stmt: offset = call $120load_global.16(index_frac, func=$120load_global.16, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,337 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-03-15 11:06:30,337 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-03-15 11:06:30,337 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-03-15 11:06:30,337 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n.1 + $const140.24
2025-03-15 11:06:30,337 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset
2025-03-15 11:06:30,337 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-03-15 11:06:30,337 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,337 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-03-15 11:06:30,338 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,338 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-03-15 11:06:30,338 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-03-15 11:06:30,338 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-03-15 11:06:30,338 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-03-15 11:06:30,338 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93A60>
2025-03-15 11:06:30,338 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-03-15 11:06:30,338 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-03-15 11:06:30,338 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-03-15 11:06:30,338 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-03-15 11:06:30,338 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-03-15 11:06:30,338 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-03-15 11:06:30,338 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93A60>
2025-03-15 11:06:30,338 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-03-15 11:06:30,338 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-03-15 11:06:30,338 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset + $178binary_multiply.7
2025-03-15 11:06:30,338 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-03-15 11:06:30,339 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-03-15 11:06:30,339 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset + $194binary_multiply.15
2025-03-15 11:06:30,339 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-03-15 11:06:30,339 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-03-15 11:06:30,339 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-03-15 11:06:30,339 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,339 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n.1 - i
2025-03-15 11:06:30,339 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-03-15 11:06:30,339 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-03-15 11:06:30,339 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-03-15 11:06:30,339 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-03-15 11:06:30,339 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-03-15 11:06:30,339 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-03-15 11:06:30,339 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93A60>
2025-03-15 11:06:30,339 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac
2025-03-15 11:06:30,339 - numba.core.ssa - DEBUG - find_def var='frac' stmt=$240binary_subtract.3 = scale - frac
2025-03-15 11:06:30,340 - numba.core.ssa - DEBUG - find_def_from_top label 236
2025-03-15 11:06:30,340 - numba.core.ssa - DEBUG - idom 166 from label 236
2025-03-15 11:06:30,340 - numba.core.ssa - DEBUG - find_def_from_bottom label 166
2025-03-15 11:06:30,340 - numba.core.ssa - DEBUG - find_def_from_top label 166
2025-03-15 11:06:30,340 - numba.core.ssa - DEBUG - idom 82 from label 166
2025-03-15 11:06:30,340 - numba.core.ssa - DEBUG - find_def_from_bottom label 82
2025-03-15 11:06:30,340 - numba.core.ssa - DEBUG - replaced with: $240binary_subtract.3 = scale - frac.1
2025-03-15 11:06:30,340 - numba.core.ssa - DEBUG - on stmt: frac.2 = $240binary_subtract.3
2025-03-15 11:06:30,340 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-03-15 11:06:30,340 - numba.core.ssa - DEBUG - find_def var='frac' stmt=index_frac = frac * num_table
2025-03-15 11:06:30,340 - numba.core.ssa - DEBUG - replaced with: index_frac = frac.2 * num_table
2025-03-15 11:06:30,340 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-03-15 11:06:30,340 - numba.core.ssa - DEBUG - on stmt: offset = call $252load_global.7(index_frac, func=$252load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,340 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-03-15 11:06:30,340 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-03-15 11:06:30,340 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n.1
2025-03-15 11:06:30,341 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-03-15 11:06:30,341 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-03-15 11:06:30,341 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset
2025-03-15 11:06:30,341 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-03-15 11:06:30,341 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,341 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-03-15 11:06:30,341 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,341 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-03-15 11:06:30,341 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-03-15 11:06:30,341 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-03-15 11:06:30,341 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-03-15 11:06:30,341 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93A60>
2025-03-15 11:06:30,341 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-03-15 11:06:30,341 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-03-15 11:06:30,341 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-03-15 11:06:30,341 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-03-15 11:06:30,342 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-03-15 11:06:30,342 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-03-15 11:06:30,342 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93A60>
2025-03-15 11:06:30,342 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-03-15 11:06:30,342 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-03-15 11:06:30,342 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset + $314binary_multiply.7
2025-03-15 11:06:30,342 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-03-15 11:06:30,342 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-03-15 11:06:30,342 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset + $330binary_multiply.15
2025-03-15 11:06:30,342 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-03-15 11:06:30,342 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-03-15 11:06:30,342 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-03-15 11:06:30,342 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,342 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n.1 + k
2025-03-15 11:06:30,342 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-03-15 11:06:30,342 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-03-15 11:06:30,342 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-03-15 11:06:30,343 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-03-15 11:06:30,343 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-03-15 11:06:30,343 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-03-15 11:06:30,343 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-03-15 11:06:30,343 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-03-15 11:06:30,343 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93A60>
2025-03-15 11:06:30,343 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-15 11:06:30,343 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-03-15 11:06:30,343 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93A60>
2025-03-15 11:06:30,343 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-03-15 11:06:30,343 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-03-15 11:06:30,343 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-03-15 11:06:30,343 - numba.core.ssa - DEBUG - Fix SSA violator on var index_frac
2025-03-15 11:06:30,343 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-15 11:06:30,343 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64BE0>
2025-03-15 11:06:30,343 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-15 11:06:30,343 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-03-15 11:06:30,343 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-03-15 11:06:30,344 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-03-15 11:06:30,344 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-03-15 11:06:30,344 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-03-15 11:06:30,344 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-03-15 11:06:30,344 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-03-15 11:06:30,344 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-03-15 11:06:30,344 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,344 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-03-15 11:06:30,344 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-03-15 11:06:30,344 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-03-15 11:06:30,344 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-03-15 11:06:30,344 - numba.core.ssa - DEBUG - first assign: index_frac
2025-03-15 11:06:30,344 - numba.core.ssa - DEBUG - replaced with: index_frac = const(float, 0.0)
2025-03-15 11:06:30,344 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-03-15 11:06:30,344 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-03-15 11:06:30,344 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-03-15 11:06:30,344 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-03-15 11:06:30,345 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-03-15 11:06:30,345 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-03-15 11:06:30,345 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-03-15 11:06:30,345 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-03-15 11:06:30,345 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-03-15 11:06:30,345 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-03-15 11:06:30,345 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-03-15 11:06:30,345 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-03-15 11:06:30,345 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-03-15 11:06:30,345 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,345 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-03-15 11:06:30,345 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-03-15 11:06:30,345 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-15 11:06:30,345 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-03-15 11:06:30,345 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64BE0>
2025-03-15 11:06:30,345 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-03-15 11:06:30,345 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-03-15 11:06:30,345 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-03-15 11:06:30,346 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-03-15 11:06:30,346 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-03-15 11:06:30,346 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-03-15 11:06:30,346 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64BE0>
2025-03-15 11:06:30,346 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-03-15 11:06:30,346 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,346 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-03-15 11:06:30,346 - numba.core.ssa - DEBUG - on stmt: n.1 = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,346 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register.1 - n.1
2025-03-15 11:06:30,346 - numba.core.ssa - DEBUG - on stmt: frac.1 = scale * $106binary_subtract.11
2025-03-15 11:06:30,346 - numba.core.ssa - DEBUG - on stmt: index_frac = frac.1 * num_table
2025-03-15 11:06:30,346 - numba.core.ssa - DEBUG - replaced with: index_frac.1 = frac.1 * num_table
2025-03-15 11:06:30,346 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-03-15 11:06:30,346 - numba.core.ssa - DEBUG - on stmt: offset = call $120load_global.16(index_frac, func=$120load_global.16, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,346 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-03-15 11:06:30,346 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-03-15 11:06:30,346 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-03-15 11:06:30,347 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n.1 + $const140.24
2025-03-15 11:06:30,347 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset
2025-03-15 11:06:30,347 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-03-15 11:06:30,347 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,347 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-03-15 11:06:30,347 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,347 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-03-15 11:06:30,347 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-03-15 11:06:30,347 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-03-15 11:06:30,347 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-03-15 11:06:30,347 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64BE0>
2025-03-15 11:06:30,347 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-03-15 11:06:30,347 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-03-15 11:06:30,347 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-03-15 11:06:30,347 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-03-15 11:06:30,347 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-03-15 11:06:30,348 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-03-15 11:06:30,348 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64BE0>
2025-03-15 11:06:30,348 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-03-15 11:06:30,348 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-03-15 11:06:30,348 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset + $178binary_multiply.7
2025-03-15 11:06:30,348 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-03-15 11:06:30,348 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-03-15 11:06:30,348 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset + $194binary_multiply.15
2025-03-15 11:06:30,348 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-03-15 11:06:30,348 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-03-15 11:06:30,348 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-03-15 11:06:30,348 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,348 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n.1 - i
2025-03-15 11:06:30,348 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-03-15 11:06:30,348 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-03-15 11:06:30,348 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-03-15 11:06:30,348 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-03-15 11:06:30,348 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-03-15 11:06:30,349 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-03-15 11:06:30,349 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64BE0>
2025-03-15 11:06:30,349 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac.1
2025-03-15 11:06:30,349 - numba.core.ssa - DEBUG - on stmt: frac.2 = $240binary_subtract.3
2025-03-15 11:06:30,349 - numba.core.ssa - DEBUG - on stmt: index_frac = frac.2 * num_table
2025-03-15 11:06:30,349 - numba.core.ssa - DEBUG - replaced with: index_frac.2 = frac.2 * num_table
2025-03-15 11:06:30,349 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-03-15 11:06:30,349 - numba.core.ssa - DEBUG - on stmt: offset = call $252load_global.7(index_frac, func=$252load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,349 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-03-15 11:06:30,349 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-03-15 11:06:30,349 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n.1
2025-03-15 11:06:30,349 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-03-15 11:06:30,349 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-03-15 11:06:30,349 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset
2025-03-15 11:06:30,349 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-03-15 11:06:30,349 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,350 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-03-15 11:06:30,350 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,350 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-03-15 11:06:30,350 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-03-15 11:06:30,350 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-03-15 11:06:30,350 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-03-15 11:06:30,350 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64BE0>
2025-03-15 11:06:30,350 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-03-15 11:06:30,350 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-03-15 11:06:30,350 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-03-15 11:06:30,350 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-03-15 11:06:30,350 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-03-15 11:06:30,350 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-03-15 11:06:30,350 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64BE0>
2025-03-15 11:06:30,350 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-03-15 11:06:30,350 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-03-15 11:06:30,351 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset + $314binary_multiply.7
2025-03-15 11:06:30,351 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-03-15 11:06:30,351 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-03-15 11:06:30,351 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset + $330binary_multiply.15
2025-03-15 11:06:30,351 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-03-15 11:06:30,351 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-03-15 11:06:30,351 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-03-15 11:06:30,351 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,351 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n.1 + k
2025-03-15 11:06:30,351 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-03-15 11:06:30,351 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-03-15 11:06:30,351 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-03-15 11:06:30,351 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-03-15 11:06:30,351 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-03-15 11:06:30,351 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-03-15 11:06:30,351 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-03-15 11:06:30,351 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-03-15 11:06:30,351 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64BE0>
2025-03-15 11:06:30,351 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-15 11:06:30,351 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-03-15 11:06:30,351 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64BE0>
2025-03-15 11:06:30,352 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-03-15 11:06:30,352 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-03-15 11:06:30,352 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-03-15 11:06:30,352 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001D071E64C40>],
             82: [<numba.core.ir.Assign object at 0x000001D071E923B0>],
             236: [<numba.core.ir.Assign object at 0x000001D071EA1690>]})
2025-03-15 11:06:30,352 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-15 11:06:30,352 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93160>
2025-03-15 11:06:30,352 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-15 11:06:30,352 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-03-15 11:06:30,353 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-03-15 11:06:30,353 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-03-15 11:06:30,353 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-03-15 11:06:30,353 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-03-15 11:06:30,353 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-03-15 11:06:30,353 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-03-15 11:06:30,353 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-03-15 11:06:30,353 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,353 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-03-15 11:06:30,353 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-03-15 11:06:30,353 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-03-15 11:06:30,353 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-03-15 11:06:30,353 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-03-15 11:06:30,353 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-03-15 11:06:30,353 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-03-15 11:06:30,353 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-03-15 11:06:30,353 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-03-15 11:06:30,353 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-03-15 11:06:30,353 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-03-15 11:06:30,354 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-03-15 11:06:30,354 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-03-15 11:06:30,354 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-03-15 11:06:30,354 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-03-15 11:06:30,354 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-03-15 11:06:30,354 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-03-15 11:06:30,354 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,354 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-03-15 11:06:30,354 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-03-15 11:06:30,354 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-15 11:06:30,354 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-03-15 11:06:30,355 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93160>
2025-03-15 11:06:30,355 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-03-15 11:06:30,355 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-03-15 11:06:30,355 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-03-15 11:06:30,355 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-03-15 11:06:30,355 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-03-15 11:06:30,355 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-03-15 11:06:30,355 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93160>
2025-03-15 11:06:30,355 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-03-15 11:06:30,355 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,355 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-03-15 11:06:30,355 - numba.core.ssa - DEBUG - on stmt: n.1 = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,355 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register.1 - n.1
2025-03-15 11:06:30,355 - numba.core.ssa - DEBUG - on stmt: frac.1 = scale * $106binary_subtract.11
2025-03-15 11:06:30,355 - numba.core.ssa - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-03-15 11:06:30,355 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-03-15 11:06:30,355 - numba.core.ssa - DEBUG - on stmt: offset = call $120load_global.16(index_frac, func=$120load_global.16, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,355 - numba.core.ssa - DEBUG - find_def var='index_frac' stmt=offset = call $120load_global.16(index_frac, func=$120load_global.16, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,356 - numba.core.ssa - DEBUG - replaced with: offset = call $120load_global.16(index_frac.1, func=$120load_global.16, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,356 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-03-15 11:06:30,356 - numba.core.ssa - DEBUG - find_def var='index_frac' stmt=eta = index_frac - offset
2025-03-15 11:06:30,356 - numba.core.ssa - DEBUG - replaced with: eta = index_frac.1 - offset
2025-03-15 11:06:30,356 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-03-15 11:06:30,356 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-03-15 11:06:30,356 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n.1 + $const140.24
2025-03-15 11:06:30,356 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset
2025-03-15 11:06:30,356 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-03-15 11:06:30,356 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,357 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-03-15 11:06:30,357 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,357 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-03-15 11:06:30,357 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-03-15 11:06:30,357 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-03-15 11:06:30,357 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-03-15 11:06:30,357 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93160>
2025-03-15 11:06:30,357 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-03-15 11:06:30,357 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-03-15 11:06:30,357 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-03-15 11:06:30,357 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-03-15 11:06:30,357 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-03-15 11:06:30,357 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-03-15 11:06:30,357 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93160>
2025-03-15 11:06:30,357 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-03-15 11:06:30,357 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-03-15 11:06:30,357 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset + $178binary_multiply.7
2025-03-15 11:06:30,357 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-03-15 11:06:30,357 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-03-15 11:06:30,358 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset + $194binary_multiply.15
2025-03-15 11:06:30,358 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-03-15 11:06:30,358 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-03-15 11:06:30,358 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-03-15 11:06:30,358 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,358 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n.1 - i
2025-03-15 11:06:30,358 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-03-15 11:06:30,358 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-03-15 11:06:30,358 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-03-15 11:06:30,358 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-03-15 11:06:30,358 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-03-15 11:06:30,358 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-03-15 11:06:30,358 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93160>
2025-03-15 11:06:30,359 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac.1
2025-03-15 11:06:30,359 - numba.core.ssa - DEBUG - on stmt: frac.2 = $240binary_subtract.3
2025-03-15 11:06:30,359 - numba.core.ssa - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-03-15 11:06:30,359 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-03-15 11:06:30,359 - numba.core.ssa - DEBUG - on stmt: offset = call $252load_global.7(index_frac, func=$252load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,359 - numba.core.ssa - DEBUG - find_def var='index_frac' stmt=offset = call $252load_global.7(index_frac, func=$252load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,359 - numba.core.ssa - DEBUG - replaced with: offset = call $252load_global.7(index_frac.2, func=$252load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,359 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-03-15 11:06:30,359 - numba.core.ssa - DEBUG - find_def var='index_frac' stmt=eta = index_frac - offset
2025-03-15 11:06:30,359 - numba.core.ssa - DEBUG - replaced with: eta = index_frac.2 - offset
2025-03-15 11:06:30,359 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-03-15 11:06:30,359 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n.1
2025-03-15 11:06:30,359 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-03-15 11:06:30,359 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-03-15 11:06:30,359 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset
2025-03-15 11:06:30,360 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-03-15 11:06:30,360 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,360 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-03-15 11:06:30,360 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,360 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-03-15 11:06:30,360 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-03-15 11:06:30,360 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-03-15 11:06:30,360 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-03-15 11:06:30,360 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93160>
2025-03-15 11:06:30,360 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-03-15 11:06:30,360 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-03-15 11:06:30,360 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-03-15 11:06:30,360 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-03-15 11:06:30,360 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-03-15 11:06:30,360 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-03-15 11:06:30,360 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93160>
2025-03-15 11:06:30,360 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-03-15 11:06:30,360 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-03-15 11:06:30,360 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset + $314binary_multiply.7
2025-03-15 11:06:30,361 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-03-15 11:06:30,361 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-03-15 11:06:30,361 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset + $330binary_multiply.15
2025-03-15 11:06:30,361 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-03-15 11:06:30,361 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-03-15 11:06:30,361 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-03-15 11:06:30,361 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,361 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n.1 + k
2025-03-15 11:06:30,361 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-03-15 11:06:30,361 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-03-15 11:06:30,362 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-03-15 11:06:30,362 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-03-15 11:06:30,362 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-03-15 11:06:30,362 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-03-15 11:06:30,362 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-03-15 11:06:30,362 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-03-15 11:06:30,362 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93160>
2025-03-15 11:06:30,362 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-15 11:06:30,362 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-03-15 11:06:30,362 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93160>
2025-03-15 11:06:30,362 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-03-15 11:06:30,362 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-03-15 11:06:30,362 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-03-15 11:06:30,362 - numba.core.ssa - DEBUG - Fix SSA violator on var offset
2025-03-15 11:06:30,362 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-15 11:06:30,362 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64700>
2025-03-15 11:06:30,362 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-15 11:06:30,362 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-03-15 11:06:30,362 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-03-15 11:06:30,362 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-03-15 11:06:30,362 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-03-15 11:06:30,363 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-03-15 11:06:30,363 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-03-15 11:06:30,363 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-03-15 11:06:30,363 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-03-15 11:06:30,363 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,363 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-03-15 11:06:30,363 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-03-15 11:06:30,363 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-03-15 11:06:30,363 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-03-15 11:06:30,363 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-03-15 11:06:30,363 - numba.core.ssa - DEBUG - first assign: offset
2025-03-15 11:06:30,363 - numba.core.ssa - DEBUG - replaced with: offset = const(int, 0)
2025-03-15 11:06:30,363 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-03-15 11:06:30,363 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-03-15 11:06:30,363 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-03-15 11:06:30,363 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-03-15 11:06:30,363 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-03-15 11:06:30,363 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-03-15 11:06:30,363 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-03-15 11:06:30,363 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-03-15 11:06:30,363 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-03-15 11:06:30,363 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-03-15 11:06:30,363 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-03-15 11:06:30,363 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-03-15 11:06:30,363 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,363 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-03-15 11:06:30,363 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-03-15 11:06:30,363 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-15 11:06:30,364 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-03-15 11:06:30,364 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64700>
2025-03-15 11:06:30,364 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-03-15 11:06:30,364 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-03-15 11:06:30,364 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-03-15 11:06:30,364 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-03-15 11:06:30,364 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-03-15 11:06:30,364 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-03-15 11:06:30,364 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64700>
2025-03-15 11:06:30,364 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-03-15 11:06:30,364 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,364 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-03-15 11:06:30,364 - numba.core.ssa - DEBUG - on stmt: n.1 = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,364 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register.1 - n.1
2025-03-15 11:06:30,364 - numba.core.ssa - DEBUG - on stmt: frac.1 = scale * $106binary_subtract.11
2025-03-15 11:06:30,364 - numba.core.ssa - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-03-15 11:06:30,364 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-03-15 11:06:30,365 - numba.core.ssa - DEBUG - on stmt: offset = call $120load_global.16(index_frac.1, func=$120load_global.16, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,365 - numba.core.ssa - DEBUG - replaced with: offset.1 = call $120load_global.16(index_frac.1, func=$120load_global.16, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,365 - numba.core.ssa - DEBUG - on stmt: eta = index_frac.1 - offset
2025-03-15 11:06:30,365 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-03-15 11:06:30,365 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-03-15 11:06:30,365 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n.1 + $const140.24
2025-03-15 11:06:30,365 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset
2025-03-15 11:06:30,365 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-03-15 11:06:30,365 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,365 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-03-15 11:06:30,365 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,365 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-03-15 11:06:30,365 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-03-15 11:06:30,365 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-03-15 11:06:30,365 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-03-15 11:06:30,365 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64700>
2025-03-15 11:06:30,365 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-03-15 11:06:30,365 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-03-15 11:06:30,365 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-03-15 11:06:30,366 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-03-15 11:06:30,366 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-03-15 11:06:30,366 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-03-15 11:06:30,366 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64700>
2025-03-15 11:06:30,366 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-03-15 11:06:30,366 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-03-15 11:06:30,366 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset + $178binary_multiply.7
2025-03-15 11:06:30,366 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-03-15 11:06:30,366 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-03-15 11:06:30,366 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset + $194binary_multiply.15
2025-03-15 11:06:30,366 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-03-15 11:06:30,366 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-03-15 11:06:30,366 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-03-15 11:06:30,366 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,366 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n.1 - i
2025-03-15 11:06:30,366 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-03-15 11:06:30,366 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-03-15 11:06:30,366 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-03-15 11:06:30,367 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-03-15 11:06:30,367 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-03-15 11:06:30,367 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-03-15 11:06:30,367 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64700>
2025-03-15 11:06:30,367 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac.1
2025-03-15 11:06:30,367 - numba.core.ssa - DEBUG - on stmt: frac.2 = $240binary_subtract.3
2025-03-15 11:06:30,367 - numba.core.ssa - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-03-15 11:06:30,367 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-03-15 11:06:30,367 - numba.core.ssa - DEBUG - on stmt: offset = call $252load_global.7(index_frac.2, func=$252load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,367 - numba.core.ssa - DEBUG - replaced with: offset.2 = call $252load_global.7(index_frac.2, func=$252load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,367 - numba.core.ssa - DEBUG - on stmt: eta = index_frac.2 - offset
2025-03-15 11:06:30,367 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-03-15 11:06:30,367 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n.1
2025-03-15 11:06:30,367 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-03-15 11:06:30,367 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-03-15 11:06:30,367 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset
2025-03-15 11:06:30,368 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-03-15 11:06:30,368 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,368 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-03-15 11:06:30,368 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,368 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-03-15 11:06:30,368 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-03-15 11:06:30,368 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-03-15 11:06:30,368 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-03-15 11:06:30,368 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64700>
2025-03-15 11:06:30,368 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-03-15 11:06:30,368 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-03-15 11:06:30,368 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-03-15 11:06:30,368 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-03-15 11:06:30,368 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-03-15 11:06:30,368 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-03-15 11:06:30,368 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64700>
2025-03-15 11:06:30,368 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-03-15 11:06:30,368 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-03-15 11:06:30,368 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset + $314binary_multiply.7
2025-03-15 11:06:30,368 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-03-15 11:06:30,368 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-03-15 11:06:30,369 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset + $330binary_multiply.15
2025-03-15 11:06:30,369 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-03-15 11:06:30,369 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-03-15 11:06:30,369 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-03-15 11:06:30,369 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,369 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n.1 + k
2025-03-15 11:06:30,369 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-03-15 11:06:30,369 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-03-15 11:06:30,369 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-03-15 11:06:30,369 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-03-15 11:06:30,369 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-03-15 11:06:30,369 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-03-15 11:06:30,369 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-03-15 11:06:30,369 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-03-15 11:06:30,369 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64700>
2025-03-15 11:06:30,369 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-15 11:06:30,369 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-03-15 11:06:30,370 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64700>
2025-03-15 11:06:30,370 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-03-15 11:06:30,370 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-03-15 11:06:30,370 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-03-15 11:06:30,370 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001D071E93A00>],
             82: [<numba.core.ir.Assign object at 0x000001D071EA1600>],
             236: [<numba.core.ir.Assign object at 0x000001D071EA1630>]})
2025-03-15 11:06:30,370 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-15 11:06:30,370 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93FA0>
2025-03-15 11:06:30,370 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-15 11:06:30,370 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-03-15 11:06:30,370 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-03-15 11:06:30,370 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-03-15 11:06:30,370 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-03-15 11:06:30,370 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-03-15 11:06:30,370 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-03-15 11:06:30,370 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-03-15 11:06:30,370 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-03-15 11:06:30,370 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,371 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-03-15 11:06:30,371 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-03-15 11:06:30,371 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-03-15 11:06:30,371 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-03-15 11:06:30,371 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-03-15 11:06:30,371 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-03-15 11:06:30,371 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-03-15 11:06:30,371 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-03-15 11:06:30,371 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-03-15 11:06:30,371 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-03-15 11:06:30,371 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-03-15 11:06:30,371 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-03-15 11:06:30,371 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-03-15 11:06:30,371 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-03-15 11:06:30,371 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-03-15 11:06:30,371 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-03-15 11:06:30,371 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-03-15 11:06:30,372 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,372 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-03-15 11:06:30,372 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-03-15 11:06:30,372 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-15 11:06:30,372 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-03-15 11:06:30,372 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93FA0>
2025-03-15 11:06:30,372 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-03-15 11:06:30,372 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-03-15 11:06:30,372 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-03-15 11:06:30,372 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-03-15 11:06:30,372 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-03-15 11:06:30,372 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-03-15 11:06:30,372 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93FA0>
2025-03-15 11:06:30,372 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-03-15 11:06:30,372 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,372 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-03-15 11:06:30,372 - numba.core.ssa - DEBUG - on stmt: n.1 = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,373 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register.1 - n.1
2025-03-15 11:06:30,373 - numba.core.ssa - DEBUG - on stmt: frac.1 = scale * $106binary_subtract.11
2025-03-15 11:06:30,373 - numba.core.ssa - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-03-15 11:06:30,373 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-03-15 11:06:30,373 - numba.core.ssa - DEBUG - on stmt: offset.1 = call $120load_global.16(index_frac.1, func=$120load_global.16, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,373 - numba.core.ssa - DEBUG - on stmt: eta = index_frac.1 - offset
2025-03-15 11:06:30,373 - numba.core.ssa - DEBUG - find_def var='offset' stmt=eta = index_frac.1 - offset
2025-03-15 11:06:30,373 - numba.core.ssa - DEBUG - replaced with: eta = index_frac.1 - offset.1
2025-03-15 11:06:30,373 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-03-15 11:06:30,373 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-03-15 11:06:30,373 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n.1 + $const140.24
2025-03-15 11:06:30,373 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset
2025-03-15 11:06:30,373 - numba.core.ssa - DEBUG - find_def var='offset' stmt=$148binary_subtract.28 = nwin - offset
2025-03-15 11:06:30,373 - numba.core.ssa - DEBUG - replaced with: $148binary_subtract.28 = nwin - offset.1
2025-03-15 11:06:30,373 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-03-15 11:06:30,374 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,374 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-03-15 11:06:30,374 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,374 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-03-15 11:06:30,374 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-03-15 11:06:30,374 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-03-15 11:06:30,374 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-03-15 11:06:30,374 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93FA0>
2025-03-15 11:06:30,374 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-03-15 11:06:30,374 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-03-15 11:06:30,374 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-03-15 11:06:30,374 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-03-15 11:06:30,374 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-03-15 11:06:30,374 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-03-15 11:06:30,374 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93FA0>
2025-03-15 11:06:30,374 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-03-15 11:06:30,374 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-03-15 11:06:30,375 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset + $178binary_multiply.7
2025-03-15 11:06:30,375 - numba.core.ssa - DEBUG - find_def var='offset' stmt=$180binary_add.8 = offset + $178binary_multiply.7
2025-03-15 11:06:30,375 - numba.core.ssa - DEBUG - find_def_from_top label 168
2025-03-15 11:06:30,375 - numba.core.ssa - DEBUG - idom 166 from label 168
2025-03-15 11:06:30,375 - numba.core.ssa - DEBUG - find_def_from_bottom label 166
2025-03-15 11:06:30,375 - numba.core.ssa - DEBUG - find_def_from_top label 166
2025-03-15 11:06:30,375 - numba.core.ssa - DEBUG - idom 82 from label 166
2025-03-15 11:06:30,375 - numba.core.ssa - DEBUG - find_def_from_bottom label 82
2025-03-15 11:06:30,375 - numba.core.ssa - DEBUG - replaced with: $180binary_add.8 = offset.1 + $178binary_multiply.7
2025-03-15 11:06:30,375 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-03-15 11:06:30,375 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-03-15 11:06:30,375 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset + $194binary_multiply.15
2025-03-15 11:06:30,375 - numba.core.ssa - DEBUG - find_def var='offset' stmt=$196binary_add.16 = offset + $194binary_multiply.15
2025-03-15 11:06:30,375 - numba.core.ssa - DEBUG - find_def_from_top label 168
2025-03-15 11:06:30,375 - numba.core.ssa - DEBUG - idom 166 from label 168
2025-03-15 11:06:30,375 - numba.core.ssa - DEBUG - find_def_from_bottom label 166
2025-03-15 11:06:30,375 - numba.core.ssa - DEBUG - find_def_from_top label 166
2025-03-15 11:06:30,376 - numba.core.ssa - DEBUG - idom 82 from label 166
2025-03-15 11:06:30,376 - numba.core.ssa - DEBUG - find_def_from_bottom label 82
2025-03-15 11:06:30,376 - numba.core.ssa - DEBUG - replaced with: $196binary_add.16 = offset.1 + $194binary_multiply.15
2025-03-15 11:06:30,376 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-03-15 11:06:30,376 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-03-15 11:06:30,376 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-03-15 11:06:30,376 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,376 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n.1 - i
2025-03-15 11:06:30,376 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-03-15 11:06:30,376 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-03-15 11:06:30,376 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-03-15 11:06:30,376 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-03-15 11:06:30,376 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-03-15 11:06:30,376 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-03-15 11:06:30,376 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93FA0>
2025-03-15 11:06:30,376 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac.1
2025-03-15 11:06:30,376 - numba.core.ssa - DEBUG - on stmt: frac.2 = $240binary_subtract.3
2025-03-15 11:06:30,377 - numba.core.ssa - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-03-15 11:06:30,377 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-03-15 11:06:30,377 - numba.core.ssa - DEBUG - on stmt: offset.2 = call $252load_global.7(index_frac.2, func=$252load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,377 - numba.core.ssa - DEBUG - on stmt: eta = index_frac.2 - offset
2025-03-15 11:06:30,377 - numba.core.ssa - DEBUG - find_def var='offset' stmt=eta = index_frac.2 - offset
2025-03-15 11:06:30,377 - numba.core.ssa - DEBUG - replaced with: eta = index_frac.2 - offset.2
2025-03-15 11:06:30,377 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-03-15 11:06:30,377 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n.1
2025-03-15 11:06:30,377 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-03-15 11:06:30,377 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-03-15 11:06:30,377 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset
2025-03-15 11:06:30,377 - numba.core.ssa - DEBUG - find_def var='offset' stmt=$284binary_subtract.21 = nwin - offset
2025-03-15 11:06:30,377 - numba.core.ssa - DEBUG - replaced with: $284binary_subtract.21 = nwin - offset.2
2025-03-15 11:06:30,377 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-03-15 11:06:30,377 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,378 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-03-15 11:06:30,378 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,378 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-03-15 11:06:30,378 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-03-15 11:06:30,378 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-03-15 11:06:30,378 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-03-15 11:06:30,378 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93FA0>
2025-03-15 11:06:30,378 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-03-15 11:06:30,378 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-03-15 11:06:30,378 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-03-15 11:06:30,378 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-03-15 11:06:30,378 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-03-15 11:06:30,378 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-03-15 11:06:30,378 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93FA0>
2025-03-15 11:06:30,378 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-03-15 11:06:30,378 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-03-15 11:06:30,378 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset + $314binary_multiply.7
2025-03-15 11:06:30,379 - numba.core.ssa - DEBUG - find_def var='offset' stmt=$316binary_add.8 = offset + $314binary_multiply.7
2025-03-15 11:06:30,379 - numba.core.ssa - DEBUG - find_def_from_top label 304
2025-03-15 11:06:30,379 - numba.core.ssa - DEBUG - idom 302 from label 304
2025-03-15 11:06:30,379 - numba.core.ssa - DEBUG - find_def_from_bottom label 302
2025-03-15 11:06:30,379 - numba.core.ssa - DEBUG - find_def_from_top label 302
2025-03-15 11:06:30,379 - numba.core.ssa - DEBUG - idom 236 from label 302
2025-03-15 11:06:30,379 - numba.core.ssa - DEBUG - find_def_from_bottom label 236
2025-03-15 11:06:30,379 - numba.core.ssa - DEBUG - replaced with: $316binary_add.8 = offset.2 + $314binary_multiply.7
2025-03-15 11:06:30,379 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-03-15 11:06:30,379 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-03-15 11:06:30,379 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset + $330binary_multiply.15
2025-03-15 11:06:30,379 - numba.core.ssa - DEBUG - find_def var='offset' stmt=$332binary_add.16 = offset + $330binary_multiply.15
2025-03-15 11:06:30,379 - numba.core.ssa - DEBUG - find_def_from_top label 304
2025-03-15 11:06:30,379 - numba.core.ssa - DEBUG - idom 302 from label 304
2025-03-15 11:06:30,379 - numba.core.ssa - DEBUG - find_def_from_bottom label 302
2025-03-15 11:06:30,379 - numba.core.ssa - DEBUG - find_def_from_top label 302
2025-03-15 11:06:30,379 - numba.core.ssa - DEBUG - idom 236 from label 302
2025-03-15 11:06:30,379 - numba.core.ssa - DEBUG - find_def_from_bottom label 236
2025-03-15 11:06:30,380 - numba.core.ssa - DEBUG - replaced with: $332binary_add.16 = offset.2 + $330binary_multiply.15
2025-03-15 11:06:30,380 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-03-15 11:06:30,380 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-03-15 11:06:30,380 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-03-15 11:06:30,380 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,380 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n.1 + k
2025-03-15 11:06:30,380 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-03-15 11:06:30,380 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-03-15 11:06:30,380 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-03-15 11:06:30,380 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-03-15 11:06:30,380 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-03-15 11:06:30,380 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-03-15 11:06:30,380 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-03-15 11:06:30,380 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-03-15 11:06:30,380 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93FA0>
2025-03-15 11:06:30,380 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-15 11:06:30,381 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-03-15 11:06:30,381 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93FA0>
2025-03-15 11:06:30,381 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-03-15 11:06:30,381 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-03-15 11:06:30,381 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-03-15 11:06:30,381 - numba.core.ssa - DEBUG - Fix SSA violator on var eta
2025-03-15 11:06:30,381 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-15 11:06:30,381 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E645E0>
2025-03-15 11:06:30,381 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-15 11:06:30,381 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-03-15 11:06:30,381 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-03-15 11:06:30,381 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-03-15 11:06:30,381 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-03-15 11:06:30,381 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-03-15 11:06:30,381 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-03-15 11:06:30,381 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-03-15 11:06:30,381 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-03-15 11:06:30,381 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,382 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-03-15 11:06:30,382 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-03-15 11:06:30,382 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-03-15 11:06:30,382 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-03-15 11:06:30,382 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-03-15 11:06:30,382 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-03-15 11:06:30,382 - numba.core.ssa - DEBUG - first assign: eta
2025-03-15 11:06:30,382 - numba.core.ssa - DEBUG - replaced with: eta = const(float, 0.0)
2025-03-15 11:06:30,382 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-03-15 11:06:30,382 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-03-15 11:06:30,382 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-03-15 11:06:30,382 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-03-15 11:06:30,382 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-03-15 11:06:30,382 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-03-15 11:06:30,382 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-03-15 11:06:30,382 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-03-15 11:06:30,382 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-03-15 11:06:30,382 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-03-15 11:06:30,383 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-03-15 11:06:30,383 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,383 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-03-15 11:06:30,383 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-03-15 11:06:30,383 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-15 11:06:30,383 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-03-15 11:06:30,383 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E645E0>
2025-03-15 11:06:30,383 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-03-15 11:06:30,383 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-03-15 11:06:30,383 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-03-15 11:06:30,383 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-03-15 11:06:30,383 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-03-15 11:06:30,383 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-03-15 11:06:30,383 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E645E0>
2025-03-15 11:06:30,383 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-03-15 11:06:30,383 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,383 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-03-15 11:06:30,383 - numba.core.ssa - DEBUG - on stmt: n.1 = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,384 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register.1 - n.1
2025-03-15 11:06:30,384 - numba.core.ssa - DEBUG - on stmt: frac.1 = scale * $106binary_subtract.11
2025-03-15 11:06:30,384 - numba.core.ssa - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-03-15 11:06:30,384 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-03-15 11:06:30,384 - numba.core.ssa - DEBUG - on stmt: offset.1 = call $120load_global.16(index_frac.1, func=$120load_global.16, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,384 - numba.core.ssa - DEBUG - on stmt: eta = index_frac.1 - offset.1
2025-03-15 11:06:30,384 - numba.core.ssa - DEBUG - replaced with: eta.1 = index_frac.1 - offset.1
2025-03-15 11:06:30,384 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-03-15 11:06:30,384 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-03-15 11:06:30,384 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n.1 + $const140.24
2025-03-15 11:06:30,384 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset.1
2025-03-15 11:06:30,384 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-03-15 11:06:30,384 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,384 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-03-15 11:06:30,384 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,384 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-03-15 11:06:30,385 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-03-15 11:06:30,385 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-03-15 11:06:30,385 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-03-15 11:06:30,385 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E645E0>
2025-03-15 11:06:30,385 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-03-15 11:06:30,385 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-03-15 11:06:30,385 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-03-15 11:06:30,385 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-03-15 11:06:30,385 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-03-15 11:06:30,385 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-03-15 11:06:30,385 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E645E0>
2025-03-15 11:06:30,385 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-03-15 11:06:30,385 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-03-15 11:06:30,385 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset.1 + $178binary_multiply.7
2025-03-15 11:06:30,385 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-03-15 11:06:30,385 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-03-15 11:06:30,385 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset.1 + $194binary_multiply.15
2025-03-15 11:06:30,385 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-03-15 11:06:30,386 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-03-15 11:06:30,386 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-03-15 11:06:30,386 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,386 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n.1 - i
2025-03-15 11:06:30,386 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-03-15 11:06:30,386 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-03-15 11:06:30,386 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-03-15 11:06:30,386 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-03-15 11:06:30,386 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-03-15 11:06:30,386 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-03-15 11:06:30,386 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E645E0>
2025-03-15 11:06:30,386 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac.1
2025-03-15 11:06:30,386 - numba.core.ssa - DEBUG - on stmt: frac.2 = $240binary_subtract.3
2025-03-15 11:06:30,386 - numba.core.ssa - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-03-15 11:06:30,386 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-03-15 11:06:30,386 - numba.core.ssa - DEBUG - on stmt: offset.2 = call $252load_global.7(index_frac.2, func=$252load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,386 - numba.core.ssa - DEBUG - on stmt: eta = index_frac.2 - offset.2
2025-03-15 11:06:30,387 - numba.core.ssa - DEBUG - replaced with: eta.2 = index_frac.2 - offset.2
2025-03-15 11:06:30,387 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-03-15 11:06:30,387 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n.1
2025-03-15 11:06:30,387 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-03-15 11:06:30,387 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-03-15 11:06:30,387 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset.2
2025-03-15 11:06:30,387 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-03-15 11:06:30,387 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,387 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-03-15 11:06:30,387 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,387 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-03-15 11:06:30,387 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-03-15 11:06:30,387 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-03-15 11:06:30,387 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-03-15 11:06:30,387 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E645E0>
2025-03-15 11:06:30,387 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-03-15 11:06:30,387 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-03-15 11:06:30,387 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-03-15 11:06:30,387 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-03-15 11:06:30,387 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-03-15 11:06:30,388 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-03-15 11:06:30,388 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E645E0>
2025-03-15 11:06:30,388 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-03-15 11:06:30,388 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-03-15 11:06:30,388 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset.2 + $314binary_multiply.7
2025-03-15 11:06:30,388 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-03-15 11:06:30,388 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-03-15 11:06:30,388 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset.2 + $330binary_multiply.15
2025-03-15 11:06:30,388 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-03-15 11:06:30,388 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-03-15 11:06:30,388 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-03-15 11:06:30,388 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,388 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n.1 + k
2025-03-15 11:06:30,388 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-03-15 11:06:30,388 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-03-15 11:06:30,388 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-03-15 11:06:30,388 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-03-15 11:06:30,389 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-03-15 11:06:30,389 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-03-15 11:06:30,389 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-03-15 11:06:30,389 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-03-15 11:06:30,389 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E645E0>
2025-03-15 11:06:30,389 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-15 11:06:30,389 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-03-15 11:06:30,389 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E645E0>
2025-03-15 11:06:30,389 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-03-15 11:06:30,389 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-03-15 11:06:30,389 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-03-15 11:06:30,389 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001D071E92290>],
             82: [<numba.core.ir.Assign object at 0x000001D071EA0A30>],
             236: [<numba.core.ir.Assign object at 0x000001D071EA0670>]})
2025-03-15 11:06:30,389 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-15 11:06:30,389 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93400>
2025-03-15 11:06:30,389 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-15 11:06:30,389 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-03-15 11:06:30,389 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-03-15 11:06:30,390 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-03-15 11:06:30,390 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-03-15 11:06:30,390 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-03-15 11:06:30,390 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-03-15 11:06:30,390 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-03-15 11:06:30,390 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-03-15 11:06:30,390 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,390 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-03-15 11:06:30,390 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-03-15 11:06:30,390 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-03-15 11:06:30,390 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-03-15 11:06:30,390 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-03-15 11:06:30,390 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-03-15 11:06:30,390 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-03-15 11:06:30,390 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-03-15 11:06:30,390 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-03-15 11:06:30,390 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-03-15 11:06:30,390 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-03-15 11:06:30,391 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-03-15 11:06:30,391 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-03-15 11:06:30,391 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-03-15 11:06:30,391 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-03-15 11:06:30,391 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-03-15 11:06:30,391 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-03-15 11:06:30,391 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,391 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-03-15 11:06:30,391 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-03-15 11:06:30,391 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-15 11:06:30,391 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-03-15 11:06:30,391 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93400>
2025-03-15 11:06:30,391 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-03-15 11:06:30,391 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-03-15 11:06:30,391 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-03-15 11:06:30,391 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-03-15 11:06:30,391 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-03-15 11:06:30,391 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-03-15 11:06:30,391 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93400>
2025-03-15 11:06:30,391 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-03-15 11:06:30,391 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,392 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-03-15 11:06:30,392 - numba.core.ssa - DEBUG - on stmt: n.1 = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,392 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register.1 - n.1
2025-03-15 11:06:30,392 - numba.core.ssa - DEBUG - on stmt: frac.1 = scale * $106binary_subtract.11
2025-03-15 11:06:30,392 - numba.core.ssa - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-03-15 11:06:30,392 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-03-15 11:06:30,392 - numba.core.ssa - DEBUG - on stmt: offset.1 = call $120load_global.16(index_frac.1, func=$120load_global.16, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,392 - numba.core.ssa - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-03-15 11:06:30,392 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-03-15 11:06:30,392 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-03-15 11:06:30,392 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n.1 + $const140.24
2025-03-15 11:06:30,392 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset.1
2025-03-15 11:06:30,392 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-03-15 11:06:30,392 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,392 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-03-15 11:06:30,393 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,393 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-03-15 11:06:30,393 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-03-15 11:06:30,393 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-03-15 11:06:30,393 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-03-15 11:06:30,393 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93400>
2025-03-15 11:06:30,393 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-03-15 11:06:30,393 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-03-15 11:06:30,393 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-03-15 11:06:30,393 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-03-15 11:06:30,393 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-03-15 11:06:30,393 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-03-15 11:06:30,393 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93400>
2025-03-15 11:06:30,393 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-03-15 11:06:30,393 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-03-15 11:06:30,393 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset.1 + $178binary_multiply.7
2025-03-15 11:06:30,393 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-03-15 11:06:30,394 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-03-15 11:06:30,394 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset.1 + $194binary_multiply.15
2025-03-15 11:06:30,394 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-03-15 11:06:30,394 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-03-15 11:06:30,394 - numba.core.ssa - DEBUG - find_def var='eta' stmt=$200binary_multiply.18 = eta * $198binary_subscr.17
2025-03-15 11:06:30,394 - numba.core.ssa - DEBUG - find_def_from_top label 168
2025-03-15 11:06:30,394 - numba.core.ssa - DEBUG - idom 166 from label 168
2025-03-15 11:06:30,394 - numba.core.ssa - DEBUG - find_def_from_bottom label 166
2025-03-15 11:06:30,394 - numba.core.ssa - DEBUG - find_def_from_top label 166
2025-03-15 11:06:30,394 - numba.core.ssa - DEBUG - idom 82 from label 166
2025-03-15 11:06:30,394 - numba.core.ssa - DEBUG - find_def_from_bottom label 82
2025-03-15 11:06:30,394 - numba.core.ssa - DEBUG - replaced with: $200binary_multiply.18 = eta.1 * $198binary_subscr.17
2025-03-15 11:06:30,394 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-03-15 11:06:30,394 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,394 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n.1 - i
2025-03-15 11:06:30,394 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-03-15 11:06:30,394 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-03-15 11:06:30,395 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-03-15 11:06:30,395 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-03-15 11:06:30,395 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-03-15 11:06:30,395 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-03-15 11:06:30,395 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93400>
2025-03-15 11:06:30,395 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac.1
2025-03-15 11:06:30,395 - numba.core.ssa - DEBUG - on stmt: frac.2 = $240binary_subtract.3
2025-03-15 11:06:30,395 - numba.core.ssa - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-03-15 11:06:30,395 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-03-15 11:06:30,395 - numba.core.ssa - DEBUG - on stmt: offset.2 = call $252load_global.7(index_frac.2, func=$252load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,395 - numba.core.ssa - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-03-15 11:06:30,395 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-03-15 11:06:30,395 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n.1
2025-03-15 11:06:30,395 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-03-15 11:06:30,395 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-03-15 11:06:30,395 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset.2
2025-03-15 11:06:30,395 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-03-15 11:06:30,395 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,395 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-03-15 11:06:30,395 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,396 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-03-15 11:06:30,396 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-03-15 11:06:30,396 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-03-15 11:06:30,396 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-03-15 11:06:30,396 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93400>
2025-03-15 11:06:30,396 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-03-15 11:06:30,396 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-03-15 11:06:30,396 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-03-15 11:06:30,396 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-03-15 11:06:30,396 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-03-15 11:06:30,396 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-03-15 11:06:30,396 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93400>
2025-03-15 11:06:30,396 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-03-15 11:06:30,396 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-03-15 11:06:30,396 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset.2 + $314binary_multiply.7
2025-03-15 11:06:30,396 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-03-15 11:06:30,396 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-03-15 11:06:30,397 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset.2 + $330binary_multiply.15
2025-03-15 11:06:30,397 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-03-15 11:06:30,397 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-03-15 11:06:30,397 - numba.core.ssa - DEBUG - find_def var='eta' stmt=$336binary_multiply.18 = eta * $334binary_subscr.17
2025-03-15 11:06:30,397 - numba.core.ssa - DEBUG - find_def_from_top label 304
2025-03-15 11:06:30,397 - numba.core.ssa - DEBUG - idom 302 from label 304
2025-03-15 11:06:30,397 - numba.core.ssa - DEBUG - find_def_from_bottom label 302
2025-03-15 11:06:30,397 - numba.core.ssa - DEBUG - find_def_from_top label 302
2025-03-15 11:06:30,397 - numba.core.ssa - DEBUG - idom 236 from label 302
2025-03-15 11:06:30,397 - numba.core.ssa - DEBUG - find_def_from_bottom label 236
2025-03-15 11:06:30,397 - numba.core.ssa - DEBUG - replaced with: $336binary_multiply.18 = eta.2 * $334binary_subscr.17
2025-03-15 11:06:30,397 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-03-15 11:06:30,397 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,397 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n.1 + k
2025-03-15 11:06:30,397 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-03-15 11:06:30,397 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-03-15 11:06:30,398 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-03-15 11:06:30,398 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-03-15 11:06:30,398 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-03-15 11:06:30,398 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-03-15 11:06:30,398 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-03-15 11:06:30,398 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-03-15 11:06:30,398 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93400>
2025-03-15 11:06:30,398 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-15 11:06:30,398 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-03-15 11:06:30,398 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E93400>
2025-03-15 11:06:30,398 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-03-15 11:06:30,398 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-03-15 11:06:30,398 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-03-15 11:06:30,398 - numba.core.ssa - DEBUG - Fix SSA violator on var weight
2025-03-15 11:06:30,398 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-15 11:06:30,398 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64BB0>
2025-03-15 11:06:30,398 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-15 11:06:30,398 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-03-15 11:06:30,399 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-03-15 11:06:30,399 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-03-15 11:06:30,399 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-03-15 11:06:30,399 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-03-15 11:06:30,399 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-03-15 11:06:30,399 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-03-15 11:06:30,399 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-03-15 11:06:30,399 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,399 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-03-15 11:06:30,399 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-03-15 11:06:30,399 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-03-15 11:06:30,399 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-03-15 11:06:30,399 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-03-15 11:06:30,399 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-03-15 11:06:30,399 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-03-15 11:06:30,399 - numba.core.ssa - DEBUG - first assign: weight
2025-03-15 11:06:30,399 - numba.core.ssa - DEBUG - replaced with: weight = const(float, 0.0)
2025-03-15 11:06:30,399 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-03-15 11:06:30,400 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-03-15 11:06:30,400 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-03-15 11:06:30,400 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-03-15 11:06:30,400 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-03-15 11:06:30,400 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-03-15 11:06:30,400 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-03-15 11:06:30,400 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-03-15 11:06:30,400 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-03-15 11:06:30,400 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-03-15 11:06:30,400 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,400 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-03-15 11:06:30,400 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-03-15 11:06:30,400 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-15 11:06:30,400 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-03-15 11:06:30,400 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64BB0>
2025-03-15 11:06:30,400 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-03-15 11:06:30,400 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-03-15 11:06:30,401 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-03-15 11:06:30,401 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-03-15 11:06:30,401 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-03-15 11:06:30,401 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-03-15 11:06:30,401 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64BB0>
2025-03-15 11:06:30,401 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-03-15 11:06:30,401 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,401 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-03-15 11:06:30,401 - numba.core.ssa - DEBUG - on stmt: n.1 = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,401 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register.1 - n.1
2025-03-15 11:06:30,401 - numba.core.ssa - DEBUG - on stmt: frac.1 = scale * $106binary_subtract.11
2025-03-15 11:06:30,401 - numba.core.ssa - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-03-15 11:06:30,401 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-03-15 11:06:30,401 - numba.core.ssa - DEBUG - on stmt: offset.1 = call $120load_global.16(index_frac.1, func=$120load_global.16, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,401 - numba.core.ssa - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-03-15 11:06:30,401 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-03-15 11:06:30,401 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-03-15 11:06:30,402 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n.1 + $const140.24
2025-03-15 11:06:30,402 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset.1
2025-03-15 11:06:30,402 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-03-15 11:06:30,402 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,402 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-03-15 11:06:30,402 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,402 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-03-15 11:06:30,402 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-03-15 11:06:30,402 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-03-15 11:06:30,402 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-03-15 11:06:30,402 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64BB0>
2025-03-15 11:06:30,402 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-03-15 11:06:30,402 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-03-15 11:06:30,402 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-03-15 11:06:30,402 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-03-15 11:06:30,402 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-03-15 11:06:30,402 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-03-15 11:06:30,402 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64BB0>
2025-03-15 11:06:30,403 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-03-15 11:06:30,403 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-03-15 11:06:30,403 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset.1 + $178binary_multiply.7
2025-03-15 11:06:30,403 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-03-15 11:06:30,403 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-03-15 11:06:30,403 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset.1 + $194binary_multiply.15
2025-03-15 11:06:30,403 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-03-15 11:06:30,403 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta.1 * $198binary_subscr.17
2025-03-15 11:06:30,403 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-03-15 11:06:30,403 - numba.core.ssa - DEBUG - replaced with: weight.1 = $182binary_subscr.9 + $200binary_multiply.18
2025-03-15 11:06:30,403 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,403 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n.1 - i
2025-03-15 11:06:30,403 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-03-15 11:06:30,403 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-03-15 11:06:30,403 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-03-15 11:06:30,403 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-03-15 11:06:30,403 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-03-15 11:06:30,404 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-03-15 11:06:30,404 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64BB0>
2025-03-15 11:06:30,404 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac.1
2025-03-15 11:06:30,404 - numba.core.ssa - DEBUG - on stmt: frac.2 = $240binary_subtract.3
2025-03-15 11:06:30,404 - numba.core.ssa - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-03-15 11:06:30,404 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-03-15 11:06:30,404 - numba.core.ssa - DEBUG - on stmt: offset.2 = call $252load_global.7(index_frac.2, func=$252load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,404 - numba.core.ssa - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-03-15 11:06:30,404 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-03-15 11:06:30,404 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n.1
2025-03-15 11:06:30,404 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-03-15 11:06:30,404 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-03-15 11:06:30,404 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset.2
2025-03-15 11:06:30,404 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-03-15 11:06:30,404 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,404 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-03-15 11:06:30,404 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,405 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-03-15 11:06:30,405 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-03-15 11:06:30,405 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-03-15 11:06:30,405 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-03-15 11:06:30,405 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64BB0>
2025-03-15 11:06:30,405 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-03-15 11:06:30,405 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-03-15 11:06:30,405 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-03-15 11:06:30,405 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-03-15 11:06:30,405 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-03-15 11:06:30,405 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-03-15 11:06:30,405 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64BB0>
2025-03-15 11:06:30,405 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-03-15 11:06:30,405 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-03-15 11:06:30,405 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset.2 + $314binary_multiply.7
2025-03-15 11:06:30,405 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-03-15 11:06:30,405 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-03-15 11:06:30,405 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset.2 + $330binary_multiply.15
2025-03-15 11:06:30,406 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-03-15 11:06:30,406 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta.2 * $334binary_subscr.17
2025-03-15 11:06:30,406 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-03-15 11:06:30,406 - numba.core.ssa - DEBUG - replaced with: weight.2 = $318binary_subscr.9 + $336binary_multiply.18
2025-03-15 11:06:30,406 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,406 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n.1 + k
2025-03-15 11:06:30,406 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-03-15 11:06:30,406 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-03-15 11:06:30,406 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-03-15 11:06:30,406 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-03-15 11:06:30,406 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-03-15 11:06:30,406 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-03-15 11:06:30,406 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-03-15 11:06:30,406 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-03-15 11:06:30,406 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64BB0>
2025-03-15 11:06:30,406 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-15 11:06:30,406 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-03-15 11:06:30,406 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001D071E64BB0>
2025-03-15 11:06:30,406 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-03-15 11:06:30,406 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-03-15 11:06:30,407 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-03-15 11:06:30,407 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001D071E930D0>],
             168: [<numba.core.ir.Assign object at 0x000001D071EA1870>],
             304: [<numba.core.ir.Assign object at 0x000001D071EA01C0>]})
2025-03-15 11:06:30,407 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-03-15 11:06:30,407 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E64700>
2025-03-15 11:06:30,407 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-03-15 11:06:30,407 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-03-15 11:06:30,407 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-03-15 11:06:30,407 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-03-15 11:06:30,407 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-03-15 11:06:30,407 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-03-15 11:06:30,407 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-03-15 11:06:30,407 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-03-15 11:06:30,407 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-03-15 11:06:30,407 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,407 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-03-15 11:06:30,407 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-03-15 11:06:30,408 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-03-15 11:06:30,408 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-03-15 11:06:30,408 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-03-15 11:06:30,408 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-03-15 11:06:30,408 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-03-15 11:06:30,408 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-03-15 11:06:30,408 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-03-15 11:06:30,408 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-03-15 11:06:30,408 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-03-15 11:06:30,408 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-03-15 11:06:30,408 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-03-15 11:06:30,408 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-03-15 11:06:30,408 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-03-15 11:06:30,408 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-03-15 11:06:30,408 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-03-15 11:06:30,408 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,408 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-03-15 11:06:30,409 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-03-15 11:06:30,409 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-15 11:06:30,409 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-03-15 11:06:30,409 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E64700>
2025-03-15 11:06:30,409 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-03-15 11:06:30,409 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-03-15 11:06:30,409 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-03-15 11:06:30,409 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-03-15 11:06:30,409 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-03-15 11:06:30,409 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-03-15 11:06:30,409 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E64700>
2025-03-15 11:06:30,409 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-03-15 11:06:30,409 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,409 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-03-15 11:06:30,409 - numba.core.ssa - DEBUG - on stmt: n.1 = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,409 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register.1 - n.1
2025-03-15 11:06:30,409 - numba.core.ssa - DEBUG - on stmt: frac.1 = scale * $106binary_subtract.11
2025-03-15 11:06:30,409 - numba.core.ssa - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-03-15 11:06:30,410 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-03-15 11:06:30,410 - numba.core.ssa - DEBUG - on stmt: offset.1 = call $120load_global.16(index_frac.1, func=$120load_global.16, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,410 - numba.core.ssa - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-03-15 11:06:30,410 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-03-15 11:06:30,410 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-03-15 11:06:30,410 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n.1 + $const140.24
2025-03-15 11:06:30,410 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset.1
2025-03-15 11:06:30,410 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-03-15 11:06:30,410 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,410 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-03-15 11:06:30,410 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,410 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-03-15 11:06:30,410 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-03-15 11:06:30,410 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-03-15 11:06:30,410 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-03-15 11:06:30,410 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E64700>
2025-03-15 11:06:30,411 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-03-15 11:06:30,411 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-03-15 11:06:30,411 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-03-15 11:06:30,411 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-03-15 11:06:30,411 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-03-15 11:06:30,411 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-03-15 11:06:30,411 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E64700>
2025-03-15 11:06:30,411 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-03-15 11:06:30,411 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-03-15 11:06:30,411 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset.1 + $178binary_multiply.7
2025-03-15 11:06:30,411 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-03-15 11:06:30,411 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-03-15 11:06:30,411 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset.1 + $194binary_multiply.15
2025-03-15 11:06:30,411 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-03-15 11:06:30,411 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta.1 * $198binary_subscr.17
2025-03-15 11:06:30,411 - numba.core.ssa - DEBUG - on stmt: weight.1 = $182binary_subscr.9 + $200binary_multiply.18
2025-03-15 11:06:30,411 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,411 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n.1 - i
2025-03-15 11:06:30,411 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-03-15 11:06:30,412 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-03-15 11:06:30,412 - numba.core.ssa - DEBUG - find_def var='weight' stmt=$226binary_multiply.31 = weight * $224binary_subscr.30
2025-03-15 11:06:30,412 - numba.core.ssa - DEBUG - replaced with: $226binary_multiply.31 = weight.1 * $224binary_subscr.30
2025-03-15 11:06:30,412 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-03-15 11:06:30,412 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-03-15 11:06:30,412 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-03-15 11:06:30,412 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-03-15 11:06:30,412 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E64700>
2025-03-15 11:06:30,412 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac.1
2025-03-15 11:06:30,412 - numba.core.ssa - DEBUG - on stmt: frac.2 = $240binary_subtract.3
2025-03-15 11:06:30,412 - numba.core.ssa - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-03-15 11:06:30,412 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-03-15 11:06:30,412 - numba.core.ssa - DEBUG - on stmt: offset.2 = call $252load_global.7(index_frac.2, func=$252load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,412 - numba.core.ssa - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-03-15 11:06:30,412 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-03-15 11:06:30,412 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n.1
2025-03-15 11:06:30,413 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-03-15 11:06:30,413 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-03-15 11:06:30,413 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset.2
2025-03-15 11:06:30,413 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-03-15 11:06:30,413 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,413 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-03-15 11:06:30,413 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-03-15 11:06:30,413 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-03-15 11:06:30,413 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-03-15 11:06:30,413 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-03-15 11:06:30,413 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-03-15 11:06:30,413 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E64700>
2025-03-15 11:06:30,413 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-03-15 11:06:30,413 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-03-15 11:06:30,413 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-03-15 11:06:30,413 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-03-15 11:06:30,414 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-03-15 11:06:30,414 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-03-15 11:06:30,414 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E64700>
2025-03-15 11:06:30,414 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-03-15 11:06:30,414 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-03-15 11:06:30,414 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset.2 + $314binary_multiply.7
2025-03-15 11:06:30,414 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-03-15 11:06:30,414 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-03-15 11:06:30,414 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset.2 + $330binary_multiply.15
2025-03-15 11:06:30,414 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-03-15 11:06:30,414 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta.2 * $334binary_subscr.17
2025-03-15 11:06:30,414 - numba.core.ssa - DEBUG - on stmt: weight.2 = $318binary_subscr.9 + $336binary_multiply.18
2025-03-15 11:06:30,414 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-03-15 11:06:30,414 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n.1 + k
2025-03-15 11:06:30,414 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-03-15 11:06:30,414 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-03-15 11:06:30,414 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-03-15 11:06:30,415 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-03-15 11:06:30,415 - numba.core.ssa - DEBUG - find_def var='weight' stmt=$366binary_multiply.33 = weight * $364binary_subscr.32
2025-03-15 11:06:30,415 - numba.core.ssa - DEBUG - replaced with: $366binary_multiply.33 = weight.2 * $364binary_subscr.32
2025-03-15 11:06:30,415 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-03-15 11:06:30,415 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-03-15 11:06:30,415 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-03-15 11:06:30,415 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-03-15 11:06:30,415 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E64700>
2025-03-15 11:06:30,415 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-03-15 11:06:30,415 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-03-15 11:06:30,415 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001D071E64700>
2025-03-15 11:06:30,415 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-03-15 11:06:30,415 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-03-15 11:06:30,415 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-03-15 14:13:08,192 - speechbrain.utils.train_logger - INFO - Epoch: 1, lr: 1.00e-04 - train loss: 3.89e-01 - valid loss: 2.99, valid error_rate: 1.77e-01
2025-03-15 14:13:08,587 - speechbrain.utils.checkpoints - INFO - Saved an end-of-epoch checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-15+14-13-08+00
2025-03-15 14:13:08,592 - speechbrain.utils.epoch_loop - INFO - Going into epoch 2
2025-03-15 17:17:21,314 - speechbrain.nnet.schedulers - INFO - Changing lr from 0.0001 to 9e-05
2025-03-15 17:17:21,317 - speechbrain.utils.train_logger - INFO - Epoch: 2, lr: 1.00e-04 - train loss: 8.85e-02 - valid loss: 3.21, valid error_rate: 1.78e-01
2025-03-15 17:17:21,744 - speechbrain.utils.checkpoints - INFO - Saved an end-of-epoch checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-15+17-17-21+00
2025-03-15 17:17:21,759 - speechbrain.utils.epoch_loop - INFO - Going into epoch 3
2025-03-15 20:21:23,665 - speechbrain.nnet.schedulers - INFO - Changing lr from 9e-05 to 8.1e-05
2025-03-15 20:21:23,668 - speechbrain.utils.train_logger - INFO - Epoch: 3, lr: 9.00e-05 - train loss: 5.54e-02 - valid loss: 3.56, valid error_rate: 1.92e-01
2025-03-15 20:21:24,088 - speechbrain.utils.checkpoints - INFO - Saved an end-of-epoch checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-15+20-21-23+00
2025-03-15 20:21:24,135 - speechbrain.utils.checkpoints - INFO - Deleted checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-15+17-17-21+00
2025-03-15 20:21:24,136 - speechbrain.utils.epoch_loop - INFO - Going into epoch 4
2025-03-15 23:25:48,503 - speechbrain.utils.train_logger - INFO - Epoch: 4, lr: 8.10e-05 - train loss: 3.85e-02 - valid loss: 3.14, valid error_rate: 1.70e-01
2025-03-15 23:25:48,890 - speechbrain.utils.checkpoints - INFO - Saved an end-of-epoch checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-15+23-25-48+00
2025-03-15 23:25:48,945 - speechbrain.utils.checkpoints - INFO - Deleted checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-15+14-13-08+00
2025-03-15 23:25:48,968 - speechbrain.utils.checkpoints - INFO - Deleted checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-15+20-21-23+00
2025-03-15 23:25:48,969 - speechbrain.utils.epoch_loop - INFO - Going into epoch 5
2025-03-16 02:30:19,591 - speechbrain.nnet.schedulers - INFO - Changing lr from 8.1e-05 to 7.3e-05
2025-03-16 02:30:19,593 - speechbrain.utils.train_logger - INFO - Epoch: 5, lr: 8.10e-05 - train loss: 2.72e-02 - valid loss: 3.91, valid error_rate: 1.88e-01
2025-03-16 02:30:19,981 - speechbrain.utils.checkpoints - INFO - Saved an end-of-epoch checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-16+02-30-19+00
2025-03-16 02:30:20,012 - speechbrain.utils.epoch_loop - INFO - Going into epoch 6
2025-03-16 05:33:42,512 - speechbrain.nnet.schedulers - INFO - Changing lr from 7.3e-05 to 6.6e-05
2025-03-16 05:33:42,515 - speechbrain.utils.train_logger - INFO - Epoch: 6, lr: 7.29e-05 - train loss: 2.33e-02 - valid loss: 4.69, valid error_rate: 2.12e-01
2025-03-16 05:33:42,933 - speechbrain.utils.checkpoints - INFO - Saved an end-of-epoch checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-16+05-33-42+00
2025-03-16 05:33:42,998 - speechbrain.utils.checkpoints - INFO - Deleted checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-16+02-30-19+00
2025-03-16 05:33:42,999 - speechbrain.utils.epoch_loop - INFO - Going into epoch 7
2025-03-16 08:36:15,007 - speechbrain.utils.train_logger - INFO - Epoch: 7, lr: 6.56e-05 - train loss: 2.06e-02 - valid loss: 4.32, valid error_rate: 1.92e-01
2025-03-16 08:36:15,441 - speechbrain.utils.checkpoints - INFO - Saved an end-of-epoch checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-16+08-36-15+00
2025-03-16 08:36:15,510 - speechbrain.utils.checkpoints - INFO - Deleted checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-16+05-33-42+00
2025-03-16 08:36:15,511 - speechbrain.utils.epoch_loop - INFO - Going into epoch 8
2025-03-16 11:39:10,200 - speechbrain.utils.train_logger - INFO - Epoch: 8, lr: 6.56e-05 - train loss: 1.99e-02 - valid loss: 4.15, valid error_rate: 1.88e-01
2025-03-16 11:39:10,616 - speechbrain.utils.checkpoints - INFO - Saved an end-of-epoch checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-16+11-39-10+00
2025-03-16 11:39:10,692 - speechbrain.utils.checkpoints - INFO - Deleted checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-16+08-36-15+00
2025-03-16 11:39:10,693 - speechbrain.utils.epoch_loop - INFO - Going into epoch 9
2025-03-16 14:43:42,929 - speechbrain.utils.train_logger - INFO - Epoch: 9, lr: 6.56e-05 - train loss: 1.33e-02 - valid loss: 3.75, valid error_rate: 1.76e-01
2025-03-16 14:43:43,364 - speechbrain.utils.checkpoints - INFO - Saved an end-of-epoch checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-16+14-43-42+00
2025-03-16 14:43:43,469 - speechbrain.utils.checkpoints - INFO - Deleted checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-16+11-39-10+00
2025-03-16 14:43:43,470 - speechbrain.utils.epoch_loop - INFO - Going into epoch 10
2025-03-16 17:48:00,161 - speechbrain.nnet.schedulers - INFO - Changing lr from 6.6e-05 to 5.9e-05
2025-03-16 17:48:00,162 - speechbrain.utils.train_logger - INFO - Epoch: 10, lr: 6.56e-05 - train loss: 2.01e-02 - valid loss: 4.25, valid error_rate: 1.80e-01
2025-03-16 17:48:00,577 - speechbrain.utils.checkpoints - INFO - Saved an end-of-epoch checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-16+17-48-00+00
2025-03-16 17:48:00,663 - speechbrain.utils.checkpoints - INFO - Deleted checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-16+14-43-42+00
2025-03-16 17:48:00,664 - speechbrain.utils.epoch_loop - INFO - Going into epoch 11
2025-03-16 20:52:07,393 - speechbrain.utils.train_logger - INFO - Epoch: 11, lr: 5.90e-05 - train loss: 1.74e-02 - valid loss: 4.16, valid error_rate: 1.77e-01
2025-03-16 20:52:07,806 - speechbrain.utils.checkpoints - INFO - Saved an end-of-epoch checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-16+20-52-07+00
2025-03-16 20:52:07,897 - speechbrain.utils.checkpoints - INFO - Deleted checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-16+17-48-00+00
2025-03-16 20:52:07,898 - speechbrain.utils.epoch_loop - INFO - Going into epoch 12
2025-03-16 23:56:27,533 - speechbrain.utils.train_logger - INFO - Epoch: 12, lr: 5.90e-05 - train loss: 1.87e-02 - valid loss: 3.56, valid error_rate: 1.68e-01
2025-03-16 23:56:27,955 - speechbrain.utils.checkpoints - INFO - Saved an end-of-epoch checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-16+23-56-27+00
2025-03-16 23:56:28,063 - speechbrain.utils.checkpoints - INFO - Deleted checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-16+20-52-07+00
2025-03-16 23:56:28,086 - speechbrain.utils.checkpoints - INFO - Deleted checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-15+23-25-48+00
2025-03-16 23:56:28,087 - speechbrain.utils.epoch_loop - INFO - Going into epoch 13
2025-03-17 03:01:10,769 - speechbrain.nnet.schedulers - INFO - Changing lr from 5.9e-05 to 5.3e-05
2025-03-17 03:01:10,771 - speechbrain.utils.train_logger - INFO - Epoch: 13, lr: 5.90e-05 - train loss: 8.87e-03 - valid loss: 4.59, valid error_rate: 1.99e-01
2025-03-17 03:01:11,153 - speechbrain.utils.checkpoints - INFO - Saved an end-of-epoch checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-17+03-01-10+00
2025-03-17 03:01:11,241 - speechbrain.utils.epoch_loop - INFO - Going into epoch 14
2025-03-17 06:05:28,084 - speechbrain.utils.train_logger - INFO - Epoch: 14, lr: 5.31e-05 - train loss: 1.06e-02 - valid loss: 4.19, valid error_rate: 1.88e-01
2025-03-17 06:05:28,498 - speechbrain.utils.checkpoints - INFO - Saved an end-of-epoch checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-17+06-05-28+00
2025-03-17 06:05:28,614 - speechbrain.utils.checkpoints - INFO - Deleted checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-17+03-01-10+00
2025-03-17 06:05:28,615 - speechbrain.utils.epoch_loop - INFO - Going into epoch 15
2025-03-17 09:09:41,799 - speechbrain.nnet.schedulers - INFO - Changing lr from 5.3e-05 to 4.8e-05
2025-03-17 09:09:41,801 - speechbrain.utils.train_logger - INFO - Epoch: 15, lr: 5.31e-05 - train loss: 1.04e-02 - valid loss: 4.79, valid error_rate: 2.00e-01
2025-03-17 09:09:42,189 - speechbrain.utils.checkpoints - INFO - Saved an end-of-epoch checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-17+09-09-41+00
2025-03-17 09:09:42,300 - speechbrain.utils.checkpoints - INFO - Deleted checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-17+06-05-28+00
2025-03-17 09:09:42,301 - speechbrain.utils.epoch_loop - INFO - Going into epoch 16
2025-03-17 12:12:57,259 - speechbrain.utils.train_logger - INFO - Epoch: 16, lr: 4.78e-05 - train loss: 9.56e-03 - valid loss: 3.94, valid error_rate: 1.76e-01
2025-03-17 12:12:57,651 - speechbrain.utils.checkpoints - INFO - Saved an end-of-epoch checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-17+12-12-57+00
2025-03-17 12:12:57,794 - speechbrain.utils.checkpoints - INFO - Deleted checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-17+09-09-41+00
2025-03-17 12:12:57,795 - speechbrain.utils.epoch_loop - INFO - Going into epoch 17
2025-03-17 15:17:15,395 - speechbrain.nnet.schedulers - INFO - Changing lr from 4.8e-05 to 4.3e-05
2025-03-17 15:17:15,398 - speechbrain.utils.train_logger - INFO - Epoch: 17, lr: 4.78e-05 - train loss: 5.33e-03 - valid loss: 4.41, valid error_rate: 1.89e-01
2025-03-17 15:17:15,818 - speechbrain.utils.checkpoints - INFO - Saved an end-of-epoch checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-17+15-17-15+00
2025-03-17 15:17:15,941 - speechbrain.utils.checkpoints - INFO - Deleted checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-17+12-12-57+00
2025-03-17 15:17:15,942 - speechbrain.utils.epoch_loop - INFO - Going into epoch 18
2025-03-17 18:21:09,085 - speechbrain.utils.train_logger - INFO - Epoch: 18, lr: 4.30e-05 - train loss: 7.36e-03 - valid loss: 4.26, valid error_rate: 1.83e-01
2025-03-17 18:21:09,503 - speechbrain.utils.checkpoints - INFO - Saved an end-of-epoch checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-17+18-21-09+00
2025-03-17 18:21:09,631 - speechbrain.utils.checkpoints - INFO - Deleted checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-17+15-17-15+00
2025-03-17 18:21:09,633 - speechbrain.utils.epoch_loop - INFO - Going into epoch 19
2025-03-17 21:25:28,558 - speechbrain.utils.train_logger - INFO - Epoch: 19, lr: 4.30e-05 - train loss: 2.99e-03 - valid loss: 4.16, valid error_rate: 1.78e-01
2025-03-17 21:25:28,983 - speechbrain.utils.checkpoints - INFO - Saved an end-of-epoch checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-17+21-25-28+00
2025-03-17 21:25:29,132 - speechbrain.utils.checkpoints - INFO - Deleted checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-17+18-21-09+00
2025-03-17 21:25:29,133 - speechbrain.utils.epoch_loop - INFO - Going into epoch 20
2025-03-18 00:29:15,041 - speechbrain.nnet.schedulers - INFO - Changing lr from 4.3e-05 to 3.9e-05
2025-03-18 00:29:15,043 - speechbrain.utils.train_logger - INFO - Epoch: 20, lr: 4.30e-05 - train loss: 3.94e-03 - valid loss: 4.46, valid error_rate: 1.80e-01
2025-03-18 00:29:15,498 - speechbrain.utils.checkpoints - INFO - Saved an end-of-epoch checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-18+00-29-15+00
2025-03-18 00:29:15,651 - speechbrain.utils.checkpoints - INFO - Deleted checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-17+21-25-28+00
2025-03-18 00:29:15,652 - speechbrain.utils.epoch_loop - INFO - Going into epoch 21
2025-03-18 03:33:50,563 - speechbrain.nnet.schedulers - INFO - Changing lr from 3.9e-05 to 3.5e-05
2025-03-18 03:33:50,564 - speechbrain.utils.train_logger - INFO - Epoch: 21, lr: 3.87e-05 - train loss: 4.70e-03 - valid loss: 5.27, valid error_rate: 2.07e-01
2025-03-18 03:33:50,952 - speechbrain.utils.checkpoints - INFO - Saved an end-of-epoch checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-18+03-33-50+00
2025-03-18 03:33:51,102 - speechbrain.utils.checkpoints - INFO - Deleted checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-18+00-29-15+00
2025-03-18 03:33:51,103 - speechbrain.utils.epoch_loop - INFO - Going into epoch 22
2025-03-18 06:38:23,824 - speechbrain.utils.train_logger - INFO - Epoch: 22, lr: 3.49e-05 - train loss: 3.09e-03 - valid loss: 5.03, valid error_rate: 2.00e-01
2025-03-18 06:38:24,208 - speechbrain.utils.checkpoints - INFO - Saved an end-of-epoch checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-18+06-38-23+00
2025-03-18 06:38:24,356 - speechbrain.utils.checkpoints - INFO - Deleted checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-18+03-33-50+00
2025-03-18 06:38:24,357 - speechbrain.utils.epoch_loop - INFO - Going into epoch 23
2025-03-18 09:43:11,337 - speechbrain.utils.train_logger - INFO - Epoch: 23, lr: 3.49e-05 - train loss: 4.10e-03 - valid loss: 4.73, valid error_rate: 1.88e-01
2025-03-18 09:43:11,763 - speechbrain.utils.checkpoints - INFO - Saved an end-of-epoch checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-18+09-43-11+00
2025-03-18 09:43:11,916 - speechbrain.utils.checkpoints - INFO - Deleted checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-18+06-38-23+00
2025-03-18 09:43:11,917 - speechbrain.utils.epoch_loop - INFO - Going into epoch 24
2025-03-18 12:47:49,308 - speechbrain.utils.train_logger - INFO - Epoch: 24, lr: 3.49e-05 - train loss: 3.94e-03 - valid loss: 4.64, valid error_rate: 1.82e-01
2025-03-18 12:47:49,760 - speechbrain.utils.checkpoints - INFO - Saved an end-of-epoch checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-18+12-47-49+00
2025-03-18 12:47:49,962 - speechbrain.utils.checkpoints - INFO - Deleted checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-18+09-43-11+00
2025-03-18 12:47:49,963 - speechbrain.utils.epoch_loop - INFO - Going into epoch 25
2025-03-18 15:54:03,515 - speechbrain.nnet.schedulers - INFO - Changing lr from 3.5e-05 to 3.1e-05
2025-03-18 15:54:03,518 - speechbrain.utils.train_logger - INFO - Epoch: 25, lr: 3.49e-05 - train loss: 5.92e-03 - valid loss: 5.16, valid error_rate: 1.97e-01
2025-03-18 15:54:03,960 - speechbrain.utils.checkpoints - INFO - Saved an end-of-epoch checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-18+15-54-03+00
2025-03-18 15:54:04,164 - speechbrain.utils.checkpoints - INFO - Deleted checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-18+12-47-49+00
2025-03-18 15:54:04,165 - speechbrain.utils.epoch_loop - INFO - Going into epoch 26
2025-03-18 19:00:03,894 - speechbrain.nnet.schedulers - INFO - Changing lr from 3.1e-05 to 2.8e-05
2025-03-18 19:00:03,896 - speechbrain.utils.train_logger - INFO - Epoch: 26, lr: 3.14e-05 - train loss: 2.36e-03 - valid loss: 5.40, valid error_rate: 2.01e-01
2025-03-18 19:00:04,319 - speechbrain.utils.checkpoints - INFO - Saved an end-of-epoch checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-18+19-00-03+00
2025-03-18 19:00:04,554 - speechbrain.utils.checkpoints - INFO - Deleted checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-18+15-54-03+00
2025-03-18 19:00:04,556 - speechbrain.utils.epoch_loop - INFO - Going into epoch 27
2025-03-18 22:05:19,177 - speechbrain.utils.train_logger - INFO - Epoch: 27, lr: 2.82e-05 - train loss: 5.50e-03 - valid loss: 3.98, valid error_rate: 1.67e-01
2025-03-18 22:05:19,593 - speechbrain.utils.checkpoints - INFO - Saved an end-of-epoch checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-18+22-05-19+00
2025-03-18 22:05:19,770 - speechbrain.utils.checkpoints - INFO - Deleted checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-18+19-00-03+00
2025-03-18 22:05:19,773 - speechbrain.utils.checkpoints - INFO - Deleted checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-16+23-56-27+00
2025-03-18 22:05:19,774 - speechbrain.utils.epoch_loop - INFO - Going into epoch 28
2025-03-19 01:10:09,641 - speechbrain.nnet.schedulers - INFO - Changing lr from 2.8e-05 to 2.5e-05
2025-03-19 01:10:09,644 - speechbrain.utils.train_logger - INFO - Epoch: 28, lr: 2.82e-05 - train loss: 4.02e-03 - valid loss: 4.45, valid error_rate: 1.82e-01
2025-03-19 01:10:10,067 - speechbrain.utils.checkpoints - INFO - Saved an end-of-epoch checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-19+01-10-09+00
2025-03-19 01:10:10,180 - speechbrain.utils.epoch_loop - INFO - Going into epoch 29
2025-03-19 04:15:06,749 - speechbrain.nnet.schedulers - INFO - Changing lr from 2.5e-05 to 2.3e-05
2025-03-19 04:15:06,752 - speechbrain.utils.train_logger - INFO - Epoch: 29, lr: 2.54e-05 - train loss: 1.29e-03 - valid loss: 4.82, valid error_rate: 1.91e-01
2025-03-19 04:15:07,188 - speechbrain.utils.checkpoints - INFO - Saved an end-of-epoch checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-19+04-15-06+00
2025-03-19 04:15:07,379 - speechbrain.utils.checkpoints - INFO - Deleted checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-19+01-10-09+00
2025-03-19 04:15:07,380 - speechbrain.utils.epoch_loop - INFO - Going into epoch 30
2025-03-19 07:19:41,420 - speechbrain.utils.train_logger - INFO - Epoch: 30, lr: 2.29e-05 - train loss: 1.36e-03 - valid loss: 4.74, valid error_rate: 1.88e-01
2025-03-19 07:19:41,832 - speechbrain.utils.checkpoints - INFO - Saved an end-of-epoch checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-19+07-19-41+00
2025-03-19 07:19:42,031 - speechbrain.utils.checkpoints - INFO - Deleted checkpoint in results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-19+04-15-06+00
2025-03-19 07:19:42,034 - speechbrain.utils.checkpoints - INFO - Loading a checkpoint from results\ECAPA-TDNN-241229-70k-filtered-0.7\1986\save\CKPT+2025-03-18+22-05-19+00
2025-03-19 07:19:42,145 - root - DEBUG - SaveableDataLoader was requested to load a checkpoint, but the DataLoader has already been iterated. The DataLoader file will be ignored. This is normal in evaluation, when a checkpoint is loaded just to retrieve the best model.
2025-03-19 08:11:13,888 - speechbrain.utils.train_logger - INFO - Epoch loaded: 27 - test loss: 3.86, test error_rate: 1.61e-01
