# Generated 2025-03-15 from:
# C:\Users\junwe\Desktop\accent_recog\speechbrain\accent-recog-slt2022\CommonAccent\accent_id\hparams\train_ecapa_tdnn_2accents.yaml
# yamllint disable
# #################################
# Training ECAPA-TDNN embeddings for Accent identification (LID) of English Data.
#
# Authors:
#  * For SLT Juan Pablo and Sara
# #################################

# Seed needs to be set at top of yaml, before objects with parameters are made
seed: 1986
__set_seed: !apply:torch.manual_seed [1986]

# Set up folders for reading from and writing to
# Dataset will be downloaded to the `data_folder`
# data_folder: !PLACEHOLDER # e.g. /localscratch/common_voice_kpd/
data_folder: 
  C:\Users\junwe\Desktop\accent_recog\speechbrain\accent-recog-slt2022\CommonAccent
csv_prepared_folder: data/en_us_70k_filtered_0.7/
output_folder: results/ECAPA-TDNN-241229-70k-filtered-0.7/1986
save_folder: results/ECAPA-TDNN-241229-70k-filtered-0.7/1986/save
rir_folder: data/rir_folder
train_log: results/ECAPA-TDNN-241229-70k-filtered-0.7/1986/train_log.txt
device: cuda:0
skip_prep: true
# max audio lenth allowed, higher than this is dropped
avoid_if_longer_than: 10.0

# Load pretrained embedding module (from HuggingFace)
# Note: in this case, we pre-train with the ECAPA-TDNN model trained on voxceleb
# for speaker-id (this leads to a performance improvement).
ecapa_tdnn_hub: speechbrain/spkrec-ecapa-voxceleb/embedding_model.ckpt

# The train logger writes training statistics to a file, as well as stdout.
train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
  save_file: results/ECAPA-TDNN-241229-70k-filtered-0.7/1986/train_log.txt

error_stats: !name:speechbrain.utils.metric_stats.MetricStats
  metric: !name:speechbrain.nnet.losses.classification_error
    reduction: batch

# Feature parameters btw: 40 - 80
n_mels: 80

# Training Parameters
sample_rate: 16000
number_of_epochs: 30
batch_size: 32
n_accents: 2
emb_dim: 192 # dimensionality of the embeddings

# batch type of sorting
sorting: random # sort the samples

# This setup works well for V100 32GB GPU, adapts it to your needs.
# Or turn it off (but training speed will decrease)
dynamic_batching: false
max_batch_len: 400 #
num_bucket: 200
num_workers: 0

dynamic_batch_sampler:
  max_batch_len: 400
  max_batch_len_val: 400
  num_buckets: 200
  shuffle_ex: true  # if true re-creates batches at each epoch shuffling examples.
  batch_ordering: random
  max_batch_ex: 128

# Dataloader options
train_dataloader_opts:
  batch_size: 32
  num_workers: 0
  drop_last: true
  shuffle: true
valid_dataloader_opts:
  batch_size: 32
  num_workers: 0
test_dataloader_opts:
  batch_size: 32
  num_workers: 0

# variable to control whether to apply augmentation or not:
apply_augmentation: false

# variable to control whether to load a pre-trained model
load_pretrained: true

# Added noise and reverb come from OpenRIR dataset, automatically
# downloaded and prepared with this Environmental Corruption class.
env_corrupt: &id002 !new:speechbrain.lobes.augment.EnvCorrupt
  openrir_folder: data/rir_folder
  openrir_max_noise_len: 3.0    # seconds
  babble_prob: 0.0
  reverb_prob: 1.0
  noise_prob: 1.0
  noise_snr_low: 0
  noise_snr_high: 15
  rir_scale_factor: 1.0

# A small speed change help to improve the performance of speaker-id as well.
augmentation: &id003 !new:speechbrain.lobes.augment.TimeDomainSpecAugment
  sample_rate: 16000
  speeds: [95, 100, 105]

# Feature extraction
compute_features: &id001 !new:speechbrain.lobes.features.Fbank
  n_mels: 80

# Mean and std normalization of the input features
mean_var_norm_input: &id005 !new:speechbrain.processing.features.InputNormalization
  norm_type: sentence
  std_norm: false

# To design a custom model, either just edit the simple CustomModel
# class that's listed here, or replace this `!new` call with a line
# pointing to a different file you've defined.

# Embedding Model
embedding_model: &id004 !new:speechbrain.lobes.models.ECAPA_TDNN.ECAPA_TDNN
  input_size: 80
  activation: !name:torch.nn.LeakyReLU
  channels: [1024, 1024, 1024, 1024, 3072]
  kernel_sizes: [5, 3, 3, 3, 1]
  dilations: [1, 2, 3, 4, 1]
  attention_channels: 128
  lin_neurons: 192

# Classifier based on cosine distance
classifier: &id006 !new:speechbrain.lobes.models.ECAPA_TDNN.Classifier

  input_size: 192
  out_neurons: 2

# The first object passed to the Brain class is this "Epoch Counter"
# which is saved by the Checkpointer so that training can be resumed
# if it gets interrupted at any point.
epoch_counter: &id007 !new:speechbrain.utils.epoch_loop.EpochCounter

# Pretrained ECAPA embeddings from SpeakerID on VoxCeleb
  limit: 30

# Objects in "modules" dict will have their parameters moved to the correct
# device, as well as having train()/eval() called on them by the Brain class.
modules:
  compute_features: *id001
  env_corrupt: *id002
  augmentation: *id003
  embedding_model: *id004
  mean_var_norm_input: *id005
  classifier: *id006
model: !new:torch.nn.ModuleList
- [*id004, *id006]
compute_cost: !new:speechbrain.nnet.losses.LogSoftmaxWrapper
  loss_fn: !new:speechbrain.nnet.losses.AdditiveAngularMargin
    margin: 0.2
    scale: 30

# Learning rates
lr: 0.0001

# This optimizer will be constructed by the Brain class after all parameters
# are moved to the correct device. Then it will be added to the checkpointer.
opt_class: !name:torch.optim.Adam
  lr: 0.0001
  weight_decay: 0.000002

# Linear lr decay
lr_annealing: !new:speechbrain.nnet.schedulers.NewBobScheduler
  initial_value: 0.0001
  improvement_threshold: 0.0025
  annealing_factor: 0.9
  patient: 0

# This object is used for saving the state of training both so that it
# can be resumed if it gets interrupted, and also so that the best checkpoint
# can be later loaded for evaluation or inference.
checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
  checkpoints_dir: results/ECAPA-TDNN-241229-70k-filtered-0.7/1986/save
  recoverables:
    normalizer_input: *id005
    embedding_model: *id004
    classifier: *id006
    counter: *id007
pretrainer: !new:speechbrain.utils.parameter_transfer.Pretrainer
  collect_in: results/ECAPA-TDNN-241229-70k-filtered-0.7/1986/save
  loadables:
    embedding_model: *id004
  paths:
    embedding_model: speechbrain/spkrec-ecapa-voxceleb/embedding_model.ckpt
