2025-02-17 09:50:48,181 - speechbrain.core - INFO - Beginning experiment!
2025-02-17 09:50:48,183 - speechbrain.core - INFO - Experiment folder: results/analysis_ECAPA-TDNN-241229_70k
2025-02-17 09:50:49,729 - speechbrain.utils.superpowers - DEBUG - aiohappyeyeballs==2.4.3
aiohttp==3.11.0
aiosignal==1.3.1
asttokens==2.4.1
async-timeout==5.0.1
attrs==24.2.0
audioread==3.0.1
black==24.3.0
certifi==2024.8.30
cffi==1.17.1
cfgv==3.4.0
charset-normalizer==3.4.0
click==8.1.7
colorama==0.4.6
contourpy==1.3.1
cycler==0.12.1
datasets==3.1.0
decorator==5.1.1
dill==0.3.8
distlib==0.3.9
docstring_parser_fork==0.0.9
exceptiongroup==1.2.2
executing==2.1.0
filelock==3.16.1
flake8==7.0.0
fonttools==4.55.0
frozenlist==1.5.0
fsspec==2024.9.0
huggingface-hub==0.26.2
HyperPyYAML==1.2.2
identify==2.6.1
idna==3.10
iniconfig==2.0.0
ipdb==0.13.13
ipython==8.29.0
isort==5.13.2
jedi==0.19.1
Jinja2==3.1.4
joblib==1.4.2
kiwisolver==1.4.7
lazy_loader==0.4
librosa==0.9.2
llvmlite==0.43.0
MarkupSafe==3.0.2
matplotlib==3.9.2
matplotlib-inline==0.1.7
mccabe==0.7.0
mpmath==1.3.0
msgpack==1.1.0
multidict==6.1.0
multiprocess==0.70.16
mypy-extensions==1.0.0
networkx==3.4.2
nodeenv==1.9.1
numba==0.60.0
numpy==1.26.4
packaging==24.1
pandas==2.2.3
parso==0.8.4
pathspec==0.12.1
pillow==11.0.0
platformdirs==4.3.6
pluggy==1.5.0
pooch==1.8.2
pre_commit==4.0.1
prompt_toolkit==3.0.48
propcache==0.2.0
pure_eval==0.2.3
pyarrow==18.0.0
pycodestyle==2.11.0
pycparser==2.22
pydoclint==0.4.1
pyflakes==3.2.0
Pygments==2.18.0
pygtrie==2.5.0
pyparsing==3.2.0
pytest==7.4.0
python-dateutil==2.9.0.post0
pytz==2024.2
PyYAML==6.0.2
regex==2024.11.6
requests==2.32.3
resampy==0.4.3
ruamel.yaml==0.18.6
ruamel.yaml.clib==0.2.12
safetensors==0.4.5
scikit-learn==1.5.2
scipy==1.12.0
sentencepiece==0.2.0
six==1.16.0
soundfile==0.12.1
soxr==0.5.0.post1
speechbrain==0.5.13
stack-data==0.6.3
sympy==1.13.1
threadpoolctl==3.5.0
tokenizers==0.20.3
tomli==2.0.2
torch==1.13.0+cu117
torchaudio==0.13.0+cu117
torchvision==0.14.0+cu117
tqdm==4.67.0
traitlets==5.14.3
transformers==4.46.2
typing_extensions==4.12.2
tzdata==2024.2
urllib3==2.2.3
virtualenv==20.27.1
wcwidth==0.2.13
xxhash==3.5.0
yamllint==1.35.1
yarl==1.17.1


2025-02-17 09:50:50,015 - speechbrain.dataio.encoder - DEBUG - Would load categorical encoding from C:\Users\junwe\Desktop\accent_recog\speechbrain\accent-recog-slt2022\CommonAccent\accent_id\results\ECAPA-TDNN-241229-70k\1986\save\CKPT+2025-01-04+09-54-28+00\accent_encoder.txt, but file doesn't exist yet.
2025-02-17 09:50:50,016 - speechbrain.dataio.encoder - DEBUG - Loaded categorical encoding from C:\Users\junwe\Desktop\accent_recog\speechbrain\accent-recog-slt2022\CommonAccent\accent_id\results\ECAPA-TDNN-241229-70k\1986\save\CKPT+2025-01-04+09-54-28+00\accent_encoder.txt
2025-02-17 09:50:50,430 - speechbrain.utils.parameter_transfer - DEBUG - Collecting files (or symlinks) for pretraining in model_checkpoints.
2025-02-17 09:50:50,431 - speechbrain.pretrained.fetching - INFO - Fetch accent_encoder.txt: Using existing file/symlink in model_checkpoints\label_encoder.ckpt.
2025-02-17 09:50:50,434 - speechbrain.pretrained.fetching - INFO - Fetch normalizer_input.ckpt: Using existing file/symlink in model_checkpoints\mean_var_norm.ckpt.
2025-02-17 09:50:50,435 - speechbrain.utils.parameter_transfer - INFO - Loading pretrained files for: label_encoder, mean_var_norm
2025-02-17 09:50:50,437 - speechbrain.dataio.encoder - DEBUG - Loaded categorical encoding from model_checkpoints\label_encoder.ckpt
2025-02-17 09:50:50,642 - speechbrain.core - INFO - Info: device arg from hparam file is used
2025-02-17 09:50:50,699 - speechbrain.core - INFO - 20.8M trainable parameters in AccID_inf
2025-02-17 09:50:52,570 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=81)
           2	LOAD_GLOBAL(arg=0, lineno=86)
           4	LOAD_FAST(arg=0, lineno=86)
           6	LOAD_FAST(arg=1, lineno=86)
           8	LOAD_FAST(arg=2, lineno=86)
          10	LOAD_FAST(arg=3, lineno=86)
          12	LOAD_FAST(arg=4, lineno=86)
          14	LOAD_FAST(arg=5, lineno=86)
          16	LOAD_FAST(arg=6, lineno=86)
          18	CALL_FUNCTION(arg=7, lineno=86)
          20	POP_TOP(arg=None, lineno=86)
          22	LOAD_CONST(arg=0, lineno=86)
          24	RETURN_VALUE(arg=None, lineno=86)
2025-02-17 09:50:52,570 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-02-17 09:50:52,570 - numba.core.byteflow - DEBUG - stack: []
2025-02-17 09:50:52,570 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-02-17 09:50:52,571 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=81)
2025-02-17 09:50:52,571 - numba.core.byteflow - DEBUG - stack []
2025-02-17 09:50:52,571 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=86)
2025-02-17 09:50:52,571 - numba.core.byteflow - DEBUG - stack []
2025-02-17 09:50:52,571 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=86)
2025-02-17 09:50:52,571 - numba.core.byteflow - DEBUG - stack ['$2load_global.0']
2025-02-17 09:50:52,571 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=86)
2025-02-17 09:50:52,571 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1']
2025-02-17 09:50:52,571 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=86)
2025-02-17 09:50:52,571 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1', '$t_out6.2']
2025-02-17 09:50:52,571 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_FAST(arg=3, lineno=86)
2025-02-17 09:50:52,571 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1', '$t_out6.2', '$interp_win8.3']
2025-02-17 09:50:52,571 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=4, lineno=86)
2025-02-17 09:50:52,571 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1', '$t_out6.2', '$interp_win8.3', '$interp_delta10.4']
2025-02-17 09:50:52,571 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=5, lineno=86)
2025-02-17 09:50:52,571 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1', '$t_out6.2', '$interp_win8.3', '$interp_delta10.4', '$num_table12.5']
2025-02-17 09:50:52,571 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=6, lineno=86)
2025-02-17 09:50:52,571 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1', '$t_out6.2', '$interp_win8.3', '$interp_delta10.4', '$num_table12.5', '$scale14.6']
2025-02-17 09:50:52,571 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=CALL_FUNCTION(arg=7, lineno=86)
2025-02-17 09:50:52,571 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1', '$t_out6.2', '$interp_win8.3', '$interp_delta10.4', '$num_table12.5', '$scale14.6', '$y16.7']
2025-02-17 09:50:52,571 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=POP_TOP(arg=None, lineno=86)
2025-02-17 09:50:52,572 - numba.core.byteflow - DEBUG - stack ['$18call_function.8']
2025-02-17 09:50:52,572 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_CONST(arg=0, lineno=86)
2025-02-17 09:50:52,572 - numba.core.byteflow - DEBUG - stack []
2025-02-17 09:50:52,572 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=RETURN_VALUE(arg=None, lineno=86)
2025-02-17 09:50:52,572 - numba.core.byteflow - DEBUG - stack ['$const22.9']
2025-02-17 09:50:52,572 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-02-17 09:50:52,572 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-02-17 09:50:52,572 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-02-17 09:50:52,572 - numba.core.byteflow - DEBUG - defmap: {}
2025-02-17 09:50:52,572 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-02-17 09:50:52,572 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-02-17 09:50:52,572 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-02-17 09:50:52,572 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-02-17 09:50:52,572 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-02-17 09:50:52,572 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'res': '$t_out6.2'}), (8, {'res': '$interp_win8.3'}), (10, {'res': '$interp_delta10.4'}), (12, {'res': '$num_table12.5'}), (14, {'res': '$scale14.6'}), (16, {'res': '$y16.7'}), (18, {'func': '$2load_global.0', 'args': ['$x4.1', '$t_out6.2', '$interp_win8.3', '$interp_delta10.4', '$num_table12.5', '$scale14.6', '$y16.7'], 'res': '$18call_function.8'}), (22, {'res': '$const22.9'}), (24, {'retval': '$const22.9', 'castval': '$24return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-02-17 09:50:52,573 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $2load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x000002934B23A5F0>)) ['$2load_global.0']
    $18call_function.8 = call $2load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$2load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None) ['$18call_function.8', '$2load_global.0', 'interp_delta', 'interp_win', 'num_table', 'scale', 't_out', 'x', 'y']
    $const22.9 = const(NoneType, None)       ['$const22.9']
    $24return_value.10 = cast(value=$const22.9) ['$24return_value.10', '$const22.9']
    return $24return_value.10                ['$24return_value.10']

2025-02-17 09:50:52,578 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-02-17 09:50:52,578 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x00000293E4CBD930>
2025-02-17 09:50:52,579 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-02-17 09:50:52,579 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-02-17 09:50:52,579 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-02-17 09:50:52,579 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-02-17 09:50:52,579 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-02-17 09:50:52,579 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-02-17 09:50:52,579 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-02-17 09:50:52,579 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x000002934B23A5F0>))
2025-02-17 09:50:52,579 - numba.core.ssa - DEBUG - on stmt: $18call_function.8 = call $2load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$2load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,579 - numba.core.ssa - DEBUG - on stmt: $const22.9 = const(NoneType, None)
2025-02-17 09:50:52,579 - numba.core.ssa - DEBUG - on stmt: $24return_value.10 = cast(value=$const22.9)
2025-02-17 09:50:52,579 - numba.core.ssa - DEBUG - on stmt: return $24return_value.10
2025-02-17 09:50:52,580 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$18call_function.8': [(<numba.core.ir.Assign object at 0x00000293E4CBEE60>,
                                     0)],
             '$24return_value.10': [(<numba.core.ir.Assign object at 0x00000293E4CBF100>,
                                     0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x00000293E4CBD900>,
                                  0)],
             '$const22.9': [(<numba.core.ir.Assign object at 0x00000293E4CBEF80>,
                             0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x00000293E4CBD450>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x00000293E4CBCD00>,
                             0)],
             'num_table': [(<numba.core.ir.Assign object at 0x00000293E4CBD210>,
                            0)],
             'scale': [(<numba.core.ir.Assign object at 0x00000293E4CBD030>,
                        0)],
             't_out': [(<numba.core.ir.Assign object at 0x00000293E4CBCBB0>,
                        0)],
             'x': [(<numba.core.ir.Assign object at 0x00000293E4CBDF30>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x00000293E4CBCF40>, 0)]})
2025-02-17 09:50:52,580 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x00000293E4CBD930>
2025-02-17 09:50:52,594 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=7)
           2	LOAD_GLOBAL(arg=0, lineno=9)
           4	LOAD_FAST(arg=5, lineno=9)
           6	LOAD_FAST(arg=4, lineno=9)
           8	BINARY_MULTIPLY(arg=None, lineno=9)
          10	CALL_FUNCTION(arg=1, lineno=9)
          12	STORE_FAST(arg=7, lineno=9)
          14	LOAD_CONST(arg=1, lineno=10)
          16	STORE_FAST(arg=8, lineno=10)
          18	LOAD_CONST(arg=2, lineno=12)
          20	STORE_FAST(arg=9, lineno=12)
          22	LOAD_CONST(arg=1, lineno=13)
          24	STORE_FAST(arg=10, lineno=13)
          26	LOAD_CONST(arg=1, lineno=14)
          28	STORE_FAST(arg=11, lineno=14)
          30	LOAD_CONST(arg=2, lineno=15)
          32	STORE_FAST(arg=12, lineno=15)
          34	LOAD_CONST(arg=1, lineno=16)
          36	STORE_FAST(arg=13, lineno=16)
          38	LOAD_CONST(arg=1, lineno=17)
          40	STORE_FAST(arg=14, lineno=17)
          42	LOAD_FAST(arg=2, lineno=19)
          44	LOAD_ATTR(arg=1, lineno=19)
          46	LOAD_CONST(arg=2, lineno=19)
          48	BINARY_SUBSCR(arg=None, lineno=19)
          50	STORE_FAST(arg=15, lineno=19)
          52	LOAD_FAST(arg=0, lineno=20)
          54	LOAD_ATTR(arg=1, lineno=20)
          56	LOAD_CONST(arg=2, lineno=20)
          58	BINARY_SUBSCR(arg=None, lineno=20)
          60	STORE_FAST(arg=16, lineno=20)
          62	LOAD_FAST(arg=1, lineno=21)
          64	LOAD_ATTR(arg=1, lineno=21)
          66	LOAD_CONST(arg=2, lineno=21)
          68	BINARY_SUBSCR(arg=None, lineno=21)
          70	STORE_FAST(arg=17, lineno=21)
          72	LOAD_GLOBAL(arg=2, lineno=23)
          74	LOAD_FAST(arg=17, lineno=23)
          76	CALL_FUNCTION(arg=1, lineno=23)
          78	GET_ITER(arg=None, lineno=23)
>         80	FOR_ITER(arg=148, lineno=23)
          82	STORE_FAST(arg=18, lineno=23)
          84	LOAD_FAST(arg=1, lineno=24)
          86	LOAD_FAST(arg=18, lineno=24)
          88	BINARY_SUBSCR(arg=None, lineno=24)
          90	STORE_FAST(arg=8, lineno=24)
          92	LOAD_GLOBAL(arg=0, lineno=27)
          94	LOAD_FAST(arg=8, lineno=27)
          96	CALL_FUNCTION(arg=1, lineno=27)
          98	STORE_FAST(arg=9, lineno=27)
         100	LOAD_FAST(arg=5, lineno=30)
         102	LOAD_FAST(arg=8, lineno=30)
         104	LOAD_FAST(arg=9, lineno=30)
         106	BINARY_SUBTRACT(arg=None, lineno=30)
         108	BINARY_MULTIPLY(arg=None, lineno=30)
         110	STORE_FAST(arg=10, lineno=30)
         112	LOAD_FAST(arg=10, lineno=33)
         114	LOAD_FAST(arg=4, lineno=33)
         116	BINARY_MULTIPLY(arg=None, lineno=33)
         118	STORE_FAST(arg=11, lineno=33)
         120	LOAD_GLOBAL(arg=0, lineno=34)
         122	LOAD_FAST(arg=11, lineno=34)
         124	CALL_FUNCTION(arg=1, lineno=34)
         126	STORE_FAST(arg=12, lineno=34)
         128	LOAD_FAST(arg=11, lineno=37)
         130	LOAD_FAST(arg=12, lineno=37)
         132	BINARY_SUBTRACT(arg=None, lineno=37)
         134	STORE_FAST(arg=13, lineno=37)
         136	LOAD_GLOBAL(arg=3, lineno=40)
         138	LOAD_FAST(arg=9, lineno=40)
         140	LOAD_CONST(arg=3, lineno=40)
         142	BINARY_ADD(arg=None, lineno=40)
         144	LOAD_FAST(arg=15, lineno=40)
         146	LOAD_FAST(arg=12, lineno=40)
         148	BINARY_SUBTRACT(arg=None, lineno=40)
         150	LOAD_FAST(arg=7, lineno=40)
         152	BINARY_FLOOR_DIVIDE(arg=None, lineno=40)
         154	CALL_FUNCTION(arg=2, lineno=40)
         156	STORE_FAST(arg=19, lineno=40)
         158	LOAD_GLOBAL(arg=4, lineno=41)
         160	LOAD_FAST(arg=19, lineno=41)
         162	CALL_FUNCTION(arg=1, lineno=41)
         164	GET_ITER(arg=None, lineno=41)
>        166	FOR_ITER(arg=34, lineno=41)
         168	STORE_FAST(arg=20, lineno=41)
         170	LOAD_FAST(arg=2, lineno=44)
         172	LOAD_FAST(arg=12, lineno=44)
         174	LOAD_FAST(arg=20, lineno=44)
         176	LOAD_FAST(arg=7, lineno=44)
         178	BINARY_MULTIPLY(arg=None, lineno=44)
         180	BINARY_ADD(arg=None, lineno=44)
         182	BINARY_SUBSCR(arg=None, lineno=44)
         184	LOAD_FAST(arg=13, lineno=45)
         186	LOAD_FAST(arg=3, lineno=45)
         188	LOAD_FAST(arg=12, lineno=45)
         190	LOAD_FAST(arg=20, lineno=45)
         192	LOAD_FAST(arg=7, lineno=45)
         194	BINARY_MULTIPLY(arg=None, lineno=45)
         196	BINARY_ADD(arg=None, lineno=45)
         198	BINARY_SUBSCR(arg=None, lineno=45)
         200	BINARY_MULTIPLY(arg=None, lineno=45)
         202	BINARY_ADD(arg=None, lineno=44)
         204	STORE_FAST(arg=14, lineno=43)
         206	LOAD_FAST(arg=6, lineno=47)
         208	LOAD_FAST(arg=18, lineno=47)
         210	DUP_TOP_TWO(arg=None, lineno=47)
         212	BINARY_SUBSCR(arg=None, lineno=47)
         214	LOAD_FAST(arg=14, lineno=47)
         216	LOAD_FAST(arg=0, lineno=47)
         218	LOAD_FAST(arg=9, lineno=47)
         220	LOAD_FAST(arg=20, lineno=47)
         222	BINARY_SUBTRACT(arg=None, lineno=47)
         224	BINARY_SUBSCR(arg=None, lineno=47)
         226	BINARY_MULTIPLY(arg=None, lineno=47)
         228	INPLACE_ADD(arg=None, lineno=47)
         230	ROT_THREE(arg=None, lineno=47)
         232	STORE_SUBSCR(arg=None, lineno=47)
         234	JUMP_ABSOLUTE(arg=84, lineno=47)
>        236	LOAD_FAST(arg=5, lineno=50)
         238	LOAD_FAST(arg=10, lineno=50)
         240	BINARY_SUBTRACT(arg=None, lineno=50)
         242	STORE_FAST(arg=10, lineno=50)
         244	LOAD_FAST(arg=10, lineno=53)
         246	LOAD_FAST(arg=4, lineno=53)
         248	BINARY_MULTIPLY(arg=None, lineno=53)
         250	STORE_FAST(arg=11, lineno=53)
         252	LOAD_GLOBAL(arg=0, lineno=54)
         254	LOAD_FAST(arg=11, lineno=54)
         256	CALL_FUNCTION(arg=1, lineno=54)
         258	STORE_FAST(arg=12, lineno=54)
         260	LOAD_FAST(arg=11, lineno=57)
         262	LOAD_FAST(arg=12, lineno=57)
         264	BINARY_SUBTRACT(arg=None, lineno=57)
         266	STORE_FAST(arg=13, lineno=57)
         268	LOAD_GLOBAL(arg=3, lineno=60)
         270	LOAD_FAST(arg=16, lineno=60)
         272	LOAD_FAST(arg=9, lineno=60)
         274	BINARY_SUBTRACT(arg=None, lineno=60)
         276	LOAD_CONST(arg=3, lineno=60)
         278	BINARY_SUBTRACT(arg=None, lineno=60)
         280	LOAD_FAST(arg=15, lineno=60)
         282	LOAD_FAST(arg=12, lineno=60)
         284	BINARY_SUBTRACT(arg=None, lineno=60)
         286	LOAD_FAST(arg=7, lineno=60)
         288	BINARY_FLOOR_DIVIDE(arg=None, lineno=60)
         290	CALL_FUNCTION(arg=2, lineno=60)
         292	STORE_FAST(arg=21, lineno=60)
         294	LOAD_GLOBAL(arg=4, lineno=61)
         296	LOAD_FAST(arg=21, lineno=61)
         298	CALL_FUNCTION(arg=1, lineno=61)
         300	GET_ITER(arg=None, lineno=61)
>        302	FOR_ITER(arg=36, lineno=61)
         304	STORE_FAST(arg=22, lineno=61)
         306	LOAD_FAST(arg=2, lineno=63)
         308	LOAD_FAST(arg=12, lineno=63)
         310	LOAD_FAST(arg=22, lineno=63)
         312	LOAD_FAST(arg=7, lineno=63)
         314	BINARY_MULTIPLY(arg=None, lineno=63)
         316	BINARY_ADD(arg=None, lineno=63)
         318	BINARY_SUBSCR(arg=None, lineno=63)
         320	LOAD_FAST(arg=13, lineno=64)
         322	LOAD_FAST(arg=3, lineno=64)
         324	LOAD_FAST(arg=12, lineno=64)
         326	LOAD_FAST(arg=22, lineno=64)
         328	LOAD_FAST(arg=7, lineno=64)
         330	BINARY_MULTIPLY(arg=None, lineno=64)
         332	BINARY_ADD(arg=None, lineno=64)
         334	BINARY_SUBSCR(arg=None, lineno=64)
         336	BINARY_MULTIPLY(arg=None, lineno=64)
         338	BINARY_ADD(arg=None, lineno=63)
         340	STORE_FAST(arg=14, lineno=62)
         342	LOAD_FAST(arg=6, lineno=66)
         344	LOAD_FAST(arg=18, lineno=66)
         346	DUP_TOP_TWO(arg=None, lineno=66)
         348	BINARY_SUBSCR(arg=None, lineno=66)
         350	LOAD_FAST(arg=14, lineno=66)
         352	LOAD_FAST(arg=0, lineno=66)
         354	LOAD_FAST(arg=9, lineno=66)
         356	LOAD_FAST(arg=22, lineno=66)
         358	BINARY_ADD(arg=None, lineno=66)
         360	LOAD_CONST(arg=3, lineno=66)
         362	BINARY_ADD(arg=None, lineno=66)
         364	BINARY_SUBSCR(arg=None, lineno=66)
         366	BINARY_MULTIPLY(arg=None, lineno=66)
         368	INPLACE_ADD(arg=None, lineno=66)
         370	ROT_THREE(arg=None, lineno=66)
         372	STORE_SUBSCR(arg=None, lineno=66)
         374	JUMP_ABSOLUTE(arg=152, lineno=66)
>        376	JUMP_ABSOLUTE(arg=41, lineno=61)
>        378	LOAD_CONST(arg=0, lineno=23)
         380	RETURN_VALUE(arg=None, lineno=23)
2025-02-17 09:50:52,595 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-02-17 09:50:52,595 - numba.core.byteflow - DEBUG - stack: []
2025-02-17 09:50:52,595 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-02-17 09:50:52,596 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=7)
2025-02-17 09:50:52,596 - numba.core.byteflow - DEBUG - stack []
2025-02-17 09:50:52,596 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=9)
2025-02-17 09:50:52,596 - numba.core.byteflow - DEBUG - stack []
2025-02-17 09:50:52,597 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=5, lineno=9)
2025-02-17 09:50:52,597 - numba.core.byteflow - DEBUG - stack ['$2load_global.0']
2025-02-17 09:50:52,597 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=4, lineno=9)
2025-02-17 09:50:52,597 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$scale4.1']
2025-02-17 09:50:52,597 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=BINARY_MULTIPLY(arg=None, lineno=9)
2025-02-17 09:50:52,598 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$scale4.1', '$num_table6.2']
2025-02-17 09:50:52,598 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=CALL_FUNCTION(arg=1, lineno=9)
2025-02-17 09:50:52,598 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$8binary_multiply.3']
2025-02-17 09:50:52,598 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=STORE_FAST(arg=7, lineno=9)
2025-02-17 09:50:52,599 - numba.core.byteflow - DEBUG - stack ['$10call_function.4']
2025-02-17 09:50:52,599 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_CONST(arg=1, lineno=10)
2025-02-17 09:50:52,599 - numba.core.byteflow - DEBUG - stack []
2025-02-17 09:50:52,599 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=8, lineno=10)
2025-02-17 09:50:52,600 - numba.core.byteflow - DEBUG - stack ['$const14.5']
2025-02-17 09:50:52,600 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=2, lineno=12)
2025-02-17 09:50:52,600 - numba.core.byteflow - DEBUG - stack []
2025-02-17 09:50:52,600 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=STORE_FAST(arg=9, lineno=12)
2025-02-17 09:50:52,601 - numba.core.byteflow - DEBUG - stack ['$const18.6']
2025-02-17 09:50:52,601 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_CONST(arg=1, lineno=13)
2025-02-17 09:50:52,601 - numba.core.byteflow - DEBUG - stack []
2025-02-17 09:50:52,601 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=STORE_FAST(arg=10, lineno=13)
2025-02-17 09:50:52,601 - numba.core.byteflow - DEBUG - stack ['$const22.7']
2025-02-17 09:50:52,602 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=14)
2025-02-17 09:50:52,602 - numba.core.byteflow - DEBUG - stack []
2025-02-17 09:50:52,602 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=11, lineno=14)
2025-02-17 09:50:52,602 - numba.core.byteflow - DEBUG - stack ['$const26.8']
2025-02-17 09:50:52,602 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=2, lineno=15)
2025-02-17 09:50:52,603 - numba.core.byteflow - DEBUG - stack []
2025-02-17 09:50:52,603 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=STORE_FAST(arg=12, lineno=15)
2025-02-17 09:50:52,603 - numba.core.byteflow - DEBUG - stack ['$const30.9']
2025-02-17 09:50:52,603 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=16)
2025-02-17 09:50:52,603 - numba.core.byteflow - DEBUG - stack []
2025-02-17 09:50:52,604 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=STORE_FAST(arg=13, lineno=16)
2025-02-17 09:50:52,604 - numba.core.byteflow - DEBUG - stack ['$const34.10']
2025-02-17 09:50:52,604 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=1, lineno=17)
2025-02-17 09:50:52,604 - numba.core.byteflow - DEBUG - stack []
2025-02-17 09:50:52,604 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=STORE_FAST(arg=14, lineno=17)
2025-02-17 09:50:52,604 - numba.core.byteflow - DEBUG - stack ['$const38.11']
2025-02-17 09:50:52,605 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_FAST(arg=2, lineno=19)
2025-02-17 09:50:52,605 - numba.core.byteflow - DEBUG - stack []
2025-02-17 09:50:52,605 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_ATTR(arg=1, lineno=19)
2025-02-17 09:50:52,605 - numba.core.byteflow - DEBUG - stack ['$interp_win42.12']
2025-02-17 09:50:52,605 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=LOAD_CONST(arg=2, lineno=19)
2025-02-17 09:50:52,605 - numba.core.byteflow - DEBUG - stack ['$44load_attr.13']
2025-02-17 09:50:52,606 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=BINARY_SUBSCR(arg=None, lineno=19)
2025-02-17 09:50:52,606 - numba.core.byteflow - DEBUG - stack ['$44load_attr.13', '$const46.14']
2025-02-17 09:50:52,606 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=STORE_FAST(arg=15, lineno=19)
2025-02-17 09:50:52,606 - numba.core.byteflow - DEBUG - stack ['$48binary_subscr.15']
2025-02-17 09:50:52,606 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=20)
2025-02-17 09:50:52,606 - numba.core.byteflow - DEBUG - stack []
2025-02-17 09:50:52,607 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_ATTR(arg=1, lineno=20)
2025-02-17 09:50:52,607 - numba.core.byteflow - DEBUG - stack ['$x52.16']
2025-02-17 09:50:52,607 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=LOAD_CONST(arg=2, lineno=20)
2025-02-17 09:50:52,607 - numba.core.byteflow - DEBUG - stack ['$54load_attr.17']
2025-02-17 09:50:52,607 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=BINARY_SUBSCR(arg=None, lineno=20)
2025-02-17 09:50:52,608 - numba.core.byteflow - DEBUG - stack ['$54load_attr.17', '$const56.18']
2025-02-17 09:50:52,608 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=STORE_FAST(arg=16, lineno=20)
2025-02-17 09:50:52,608 - numba.core.byteflow - DEBUG - stack ['$58binary_subscr.19']
2025-02-17 09:50:52,608 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=21)
2025-02-17 09:50:52,608 - numba.core.byteflow - DEBUG - stack []
2025-02-17 09:50:52,608 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=LOAD_ATTR(arg=1, lineno=21)
2025-02-17 09:50:52,609 - numba.core.byteflow - DEBUG - stack ['$t_out62.20']
2025-02-17 09:50:52,609 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_CONST(arg=2, lineno=21)
2025-02-17 09:50:52,609 - numba.core.byteflow - DEBUG - stack ['$64load_attr.21']
2025-02-17 09:50:52,609 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=BINARY_SUBSCR(arg=None, lineno=21)
2025-02-17 09:50:52,609 - numba.core.byteflow - DEBUG - stack ['$64load_attr.21', '$const66.22']
2025-02-17 09:50:52,610 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=STORE_FAST(arg=17, lineno=21)
2025-02-17 09:50:52,610 - numba.core.byteflow - DEBUG - stack ['$68binary_subscr.23']
2025-02-17 09:50:52,610 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=LOAD_GLOBAL(arg=2, lineno=23)
2025-02-17 09:50:52,610 - numba.core.byteflow - DEBUG - stack []
2025-02-17 09:50:52,610 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=17, lineno=23)
2025-02-17 09:50:52,610 - numba.core.byteflow - DEBUG - stack ['$72load_global.24']
2025-02-17 09:50:52,610 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=CALL_FUNCTION(arg=1, lineno=23)
2025-02-17 09:50:52,610 - numba.core.byteflow - DEBUG - stack ['$72load_global.24', '$n_out74.25']
2025-02-17 09:50:52,610 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=GET_ITER(arg=None, lineno=23)
2025-02-17 09:50:52,610 - numba.core.byteflow - DEBUG - stack ['$76call_function.26']
2025-02-17 09:50:52,610 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$78get_iter.27',), blockstack=(), npush=0)]
2025-02-17 09:50:52,611 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-02-17 09:50:52,611 - numba.core.byteflow - DEBUG - stack: ['$phi80.0']
2025-02-17 09:50:52,611 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-02-17 09:50:52,611 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=FOR_ITER(arg=148, lineno=23)
2025-02-17 09:50:52,611 - numba.core.byteflow - DEBUG - stack ['$phi80.0']
2025-02-17 09:50:52,611 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=378, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
2025-02-17 09:50:52,611 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=378 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
2025-02-17 09:50:52,612 - numba.core.byteflow - DEBUG - stack: []
2025-02-17 09:50:52,612 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=378 nstack_initial=0)
2025-02-17 09:50:52,612 - numba.core.byteflow - DEBUG - dispatch pc=378, inst=LOAD_CONST(arg=0, lineno=23)
2025-02-17 09:50:52,612 - numba.core.byteflow - DEBUG - stack []
2025-02-17 09:50:52,612 - numba.core.byteflow - DEBUG - dispatch pc=380, inst=RETURN_VALUE(arg=None, lineno=23)
2025-02-17 09:50:52,612 - numba.core.byteflow - DEBUG - stack ['$const378.0']
2025-02-17 09:50:52,612 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-02-17 09:50:52,612 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=2)])
2025-02-17 09:50:52,612 - numba.core.byteflow - DEBUG - stack: ['$phi82.0', '$phi82.1']
2025-02-17 09:50:52,613 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=2)
2025-02-17 09:50:52,613 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=STORE_FAST(arg=18, lineno=23)
2025-02-17 09:50:52,613 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$phi82.1']
2025-02-17 09:50:52,613 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_FAST(arg=1, lineno=24)
2025-02-17 09:50:52,613 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-02-17 09:50:52,613 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=18, lineno=24)
2025-02-17 09:50:52,613 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$t_out84.2']
2025-02-17 09:50:52,613 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=BINARY_SUBSCR(arg=None, lineno=24)
2025-02-17 09:50:52,613 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$t_out84.2', '$t86.3']
2025-02-17 09:50:52,614 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=STORE_FAST(arg=8, lineno=24)
2025-02-17 09:50:52,614 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$88binary_subscr.4']
2025-02-17 09:50:52,614 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=LOAD_GLOBAL(arg=0, lineno=27)
2025-02-17 09:50:52,614 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-02-17 09:50:52,614 - numba.core.byteflow - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=8, lineno=27)
2025-02-17 09:50:52,614 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$92load_global.5']
2025-02-17 09:50:52,614 - numba.core.byteflow - DEBUG - dispatch pc=96, inst=CALL_FUNCTION(arg=1, lineno=27)
2025-02-17 09:50:52,614 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$92load_global.5', '$time_register94.6']
2025-02-17 09:50:52,614 - numba.core.byteflow - DEBUG - dispatch pc=98, inst=STORE_FAST(arg=9, lineno=27)
2025-02-17 09:50:52,615 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$96call_function.7']
2025-02-17 09:50:52,615 - numba.core.byteflow - DEBUG - dispatch pc=100, inst=LOAD_FAST(arg=5, lineno=30)
2025-02-17 09:50:52,615 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-02-17 09:50:52,615 - numba.core.byteflow - DEBUG - dispatch pc=102, inst=LOAD_FAST(arg=8, lineno=30)
2025-02-17 09:50:52,615 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$scale100.8']
2025-02-17 09:50:52,615 - numba.core.byteflow - DEBUG - dispatch pc=104, inst=LOAD_FAST(arg=9, lineno=30)
2025-02-17 09:50:52,615 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$scale100.8', '$time_register102.9']
2025-02-17 09:50:52,615 - numba.core.byteflow - DEBUG - dispatch pc=106, inst=BINARY_SUBTRACT(arg=None, lineno=30)
2025-02-17 09:50:52,615 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$scale100.8', '$time_register102.9', '$n104.10']
2025-02-17 09:50:52,616 - numba.core.byteflow - DEBUG - dispatch pc=108, inst=BINARY_MULTIPLY(arg=None, lineno=30)
2025-02-17 09:50:52,616 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$scale100.8', '$106binary_subtract.11']
2025-02-17 09:50:52,616 - numba.core.byteflow - DEBUG - dispatch pc=110, inst=STORE_FAST(arg=10, lineno=30)
2025-02-17 09:50:52,616 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$108binary_multiply.12']
2025-02-17 09:50:52,616 - numba.core.byteflow - DEBUG - dispatch pc=112, inst=LOAD_FAST(arg=10, lineno=33)
2025-02-17 09:50:52,616 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-02-17 09:50:52,616 - numba.core.byteflow - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=4, lineno=33)
2025-02-17 09:50:52,616 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$frac112.13']
2025-02-17 09:50:52,616 - numba.core.byteflow - DEBUG - dispatch pc=116, inst=BINARY_MULTIPLY(arg=None, lineno=33)
2025-02-17 09:50:52,617 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$frac112.13', '$num_table114.14']
2025-02-17 09:50:52,617 - numba.core.byteflow - DEBUG - dispatch pc=118, inst=STORE_FAST(arg=11, lineno=33)
2025-02-17 09:50:52,617 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$116binary_multiply.15']
2025-02-17 09:50:52,617 - numba.core.byteflow - DEBUG - dispatch pc=120, inst=LOAD_GLOBAL(arg=0, lineno=34)
2025-02-17 09:50:52,617 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-02-17 09:50:52,617 - numba.core.byteflow - DEBUG - dispatch pc=122, inst=LOAD_FAST(arg=11, lineno=34)
2025-02-17 09:50:52,617 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$120load_global.16']
2025-02-17 09:50:52,617 - numba.core.byteflow - DEBUG - dispatch pc=124, inst=CALL_FUNCTION(arg=1, lineno=34)
2025-02-17 09:50:52,617 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$120load_global.16', '$index_frac122.17']
2025-02-17 09:50:52,618 - numba.core.byteflow - DEBUG - dispatch pc=126, inst=STORE_FAST(arg=12, lineno=34)
2025-02-17 09:50:52,618 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$124call_function.18']
2025-02-17 09:50:52,618 - numba.core.byteflow - DEBUG - dispatch pc=128, inst=LOAD_FAST(arg=11, lineno=37)
2025-02-17 09:50:52,618 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-02-17 09:50:52,618 - numba.core.byteflow - DEBUG - dispatch pc=130, inst=LOAD_FAST(arg=12, lineno=37)
2025-02-17 09:50:52,618 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$index_frac128.19']
2025-02-17 09:50:52,618 - numba.core.byteflow - DEBUG - dispatch pc=132, inst=BINARY_SUBTRACT(arg=None, lineno=37)
2025-02-17 09:50:52,618 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$index_frac128.19', '$offset130.20']
2025-02-17 09:50:52,618 - numba.core.byteflow - DEBUG - dispatch pc=134, inst=STORE_FAST(arg=13, lineno=37)
2025-02-17 09:50:52,618 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$132binary_subtract.21']
2025-02-17 09:50:52,619 - numba.core.byteflow - DEBUG - dispatch pc=136, inst=LOAD_GLOBAL(arg=3, lineno=40)
2025-02-17 09:50:52,619 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-02-17 09:50:52,619 - numba.core.byteflow - DEBUG - dispatch pc=138, inst=LOAD_FAST(arg=9, lineno=40)
2025-02-17 09:50:52,619 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$136load_global.22']
2025-02-17 09:50:52,619 - numba.core.byteflow - DEBUG - dispatch pc=140, inst=LOAD_CONST(arg=3, lineno=40)
2025-02-17 09:50:52,619 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$136load_global.22', '$n138.23']
2025-02-17 09:50:52,619 - numba.core.byteflow - DEBUG - dispatch pc=142, inst=BINARY_ADD(arg=None, lineno=40)
2025-02-17 09:50:52,619 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$136load_global.22', '$n138.23', '$const140.24']
2025-02-17 09:50:52,619 - numba.core.byteflow - DEBUG - dispatch pc=144, inst=LOAD_FAST(arg=15, lineno=40)
2025-02-17 09:50:52,620 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$136load_global.22', '$142binary_add.25']
2025-02-17 09:50:52,620 - numba.core.byteflow - DEBUG - dispatch pc=146, inst=LOAD_FAST(arg=12, lineno=40)
2025-02-17 09:50:52,620 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$136load_global.22', '$142binary_add.25', '$nwin144.26']
2025-02-17 09:50:52,620 - numba.core.byteflow - DEBUG - dispatch pc=148, inst=BINARY_SUBTRACT(arg=None, lineno=40)
2025-02-17 09:50:52,620 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$136load_global.22', '$142binary_add.25', '$nwin144.26', '$offset146.27']
2025-02-17 09:50:52,620 - numba.core.byteflow - DEBUG - dispatch pc=150, inst=LOAD_FAST(arg=7, lineno=40)
2025-02-17 09:50:52,620 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$136load_global.22', '$142binary_add.25', '$148binary_subtract.28']
2025-02-17 09:50:52,620 - numba.core.byteflow - DEBUG - dispatch pc=152, inst=BINARY_FLOOR_DIVIDE(arg=None, lineno=40)
2025-02-17 09:50:52,620 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$136load_global.22', '$142binary_add.25', '$148binary_subtract.28', '$index_step150.29']
2025-02-17 09:50:52,621 - numba.core.byteflow - DEBUG - dispatch pc=154, inst=CALL_FUNCTION(arg=2, lineno=40)
2025-02-17 09:50:52,621 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$136load_global.22', '$142binary_add.25', '$152binary_floor_divide.30']
2025-02-17 09:50:52,621 - numba.core.byteflow - DEBUG - dispatch pc=156, inst=STORE_FAST(arg=19, lineno=40)
2025-02-17 09:50:52,621 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$154call_function.31']
2025-02-17 09:50:52,621 - numba.core.byteflow - DEBUG - dispatch pc=158, inst=LOAD_GLOBAL(arg=4, lineno=41)
2025-02-17 09:50:52,621 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-02-17 09:50:52,621 - numba.core.byteflow - DEBUG - dispatch pc=160, inst=LOAD_FAST(arg=19, lineno=41)
2025-02-17 09:50:52,621 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$158load_global.32']
2025-02-17 09:50:52,621 - numba.core.byteflow - DEBUG - dispatch pc=162, inst=CALL_FUNCTION(arg=1, lineno=41)
2025-02-17 09:50:52,621 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$158load_global.32', '$i_max160.33']
2025-02-17 09:50:52,621 - numba.core.byteflow - DEBUG - dispatch pc=164, inst=GET_ITER(arg=None, lineno=41)
2025-02-17 09:50:52,621 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$162call_function.34']
2025-02-17 09:50:52,621 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=166, stack=('$phi82.0', '$164get_iter.35'), blockstack=(), npush=0)]
2025-02-17 09:50:52,622 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=166 nstack_initial=2)])
2025-02-17 09:50:52,622 - numba.core.byteflow - DEBUG - stack: ['$phi166.0', '$phi166.1']
2025-02-17 09:50:52,622 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=166 nstack_initial=2)
2025-02-17 09:50:52,623 - numba.core.byteflow - DEBUG - dispatch pc=166, inst=FOR_ITER(arg=34, lineno=41)
2025-02-17 09:50:52,623 - numba.core.byteflow - DEBUG - stack ['$phi166.0', '$phi166.1']
2025-02-17 09:50:52,623 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=236, stack=('$phi166.0',), blockstack=(), npush=0), Edge(pc=168, stack=('$phi166.0', '$phi166.1', '$166for_iter.3'), blockstack=(), npush=0)]
2025-02-17 09:50:52,624 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=236 nstack_initial=1), State(pc_initial=168 nstack_initial=3)])
2025-02-17 09:50:52,624 - numba.core.byteflow - DEBUG - stack: ['$phi236.0']
2025-02-17 09:50:52,624 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=236 nstack_initial=1)
2025-02-17 09:50:52,624 - numba.core.byteflow - DEBUG - dispatch pc=236, inst=LOAD_FAST(arg=5, lineno=50)
2025-02-17 09:50:52,624 - numba.core.byteflow - DEBUG - stack ['$phi236.0']
2025-02-17 09:50:52,625 - numba.core.byteflow - DEBUG - dispatch pc=238, inst=LOAD_FAST(arg=10, lineno=50)
2025-02-17 09:50:52,625 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$scale236.1']
2025-02-17 09:50:52,625 - numba.core.byteflow - DEBUG - dispatch pc=240, inst=BINARY_SUBTRACT(arg=None, lineno=50)
2025-02-17 09:50:52,625 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$scale236.1', '$frac238.2']
2025-02-17 09:50:52,626 - numba.core.byteflow - DEBUG - dispatch pc=242, inst=STORE_FAST(arg=10, lineno=50)
2025-02-17 09:50:52,626 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$240binary_subtract.3']
2025-02-17 09:50:52,626 - numba.core.byteflow - DEBUG - dispatch pc=244, inst=LOAD_FAST(arg=10, lineno=53)
2025-02-17 09:50:52,626 - numba.core.byteflow - DEBUG - stack ['$phi236.0']
2025-02-17 09:50:52,627 - numba.core.byteflow - DEBUG - dispatch pc=246, inst=LOAD_FAST(arg=4, lineno=53)
2025-02-17 09:50:52,627 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$frac244.4']
2025-02-17 09:50:52,627 - numba.core.byteflow - DEBUG - dispatch pc=248, inst=BINARY_MULTIPLY(arg=None, lineno=53)
2025-02-17 09:50:52,627 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$frac244.4', '$num_table246.5']
2025-02-17 09:50:52,627 - numba.core.byteflow - DEBUG - dispatch pc=250, inst=STORE_FAST(arg=11, lineno=53)
2025-02-17 09:50:52,628 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$248binary_multiply.6']
2025-02-17 09:50:52,628 - numba.core.byteflow - DEBUG - dispatch pc=252, inst=LOAD_GLOBAL(arg=0, lineno=54)
2025-02-17 09:50:52,628 - numba.core.byteflow - DEBUG - stack ['$phi236.0']
2025-02-17 09:50:52,628 - numba.core.byteflow - DEBUG - dispatch pc=254, inst=LOAD_FAST(arg=11, lineno=54)
2025-02-17 09:50:52,629 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$252load_global.7']
2025-02-17 09:50:52,629 - numba.core.byteflow - DEBUG - dispatch pc=256, inst=CALL_FUNCTION(arg=1, lineno=54)
2025-02-17 09:50:52,629 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$252load_global.7', '$index_frac254.8']
2025-02-17 09:50:52,629 - numba.core.byteflow - DEBUG - dispatch pc=258, inst=STORE_FAST(arg=12, lineno=54)
2025-02-17 09:50:52,629 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$256call_function.9']
2025-02-17 09:50:52,630 - numba.core.byteflow - DEBUG - dispatch pc=260, inst=LOAD_FAST(arg=11, lineno=57)
2025-02-17 09:50:52,630 - numba.core.byteflow - DEBUG - stack ['$phi236.0']
2025-02-17 09:50:52,630 - numba.core.byteflow - DEBUG - dispatch pc=262, inst=LOAD_FAST(arg=12, lineno=57)
2025-02-17 09:50:52,630 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$index_frac260.10']
2025-02-17 09:50:52,631 - numba.core.byteflow - DEBUG - dispatch pc=264, inst=BINARY_SUBTRACT(arg=None, lineno=57)
2025-02-17 09:50:52,631 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$index_frac260.10', '$offset262.11']
2025-02-17 09:50:52,631 - numba.core.byteflow - DEBUG - dispatch pc=266, inst=STORE_FAST(arg=13, lineno=57)
2025-02-17 09:50:52,631 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$264binary_subtract.12']
2025-02-17 09:50:52,631 - numba.core.byteflow - DEBUG - dispatch pc=268, inst=LOAD_GLOBAL(arg=3, lineno=60)
2025-02-17 09:50:52,632 - numba.core.byteflow - DEBUG - stack ['$phi236.0']
2025-02-17 09:50:52,632 - numba.core.byteflow - DEBUG - dispatch pc=270, inst=LOAD_FAST(arg=16, lineno=60)
2025-02-17 09:50:52,632 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$268load_global.13']
2025-02-17 09:50:52,632 - numba.core.byteflow - DEBUG - dispatch pc=272, inst=LOAD_FAST(arg=9, lineno=60)
2025-02-17 09:50:52,633 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$268load_global.13', '$n_orig270.14']
2025-02-17 09:50:52,633 - numba.core.byteflow - DEBUG - dispatch pc=274, inst=BINARY_SUBTRACT(arg=None, lineno=60)
2025-02-17 09:50:52,633 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$268load_global.13', '$n_orig270.14', '$n272.15']
2025-02-17 09:50:52,633 - numba.core.byteflow - DEBUG - dispatch pc=276, inst=LOAD_CONST(arg=3, lineno=60)
2025-02-17 09:50:52,633 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$268load_global.13', '$274binary_subtract.16']
2025-02-17 09:50:52,634 - numba.core.byteflow - DEBUG - dispatch pc=278, inst=BINARY_SUBTRACT(arg=None, lineno=60)
2025-02-17 09:50:52,634 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$268load_global.13', '$274binary_subtract.16', '$const276.17']
2025-02-17 09:50:52,634 - numba.core.byteflow - DEBUG - dispatch pc=280, inst=LOAD_FAST(arg=15, lineno=60)
2025-02-17 09:50:52,634 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$268load_global.13', '$278binary_subtract.18']
2025-02-17 09:50:52,635 - numba.core.byteflow - DEBUG - dispatch pc=282, inst=LOAD_FAST(arg=12, lineno=60)
2025-02-17 09:50:52,635 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$268load_global.13', '$278binary_subtract.18', '$nwin280.19']
2025-02-17 09:50:52,635 - numba.core.byteflow - DEBUG - dispatch pc=284, inst=BINARY_SUBTRACT(arg=None, lineno=60)
2025-02-17 09:50:52,635 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$268load_global.13', '$278binary_subtract.18', '$nwin280.19', '$offset282.20']
2025-02-17 09:50:52,636 - numba.core.byteflow - DEBUG - dispatch pc=286, inst=LOAD_FAST(arg=7, lineno=60)
2025-02-17 09:50:52,636 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$268load_global.13', '$278binary_subtract.18', '$284binary_subtract.21']
2025-02-17 09:50:52,636 - numba.core.byteflow - DEBUG - dispatch pc=288, inst=BINARY_FLOOR_DIVIDE(arg=None, lineno=60)
2025-02-17 09:50:52,636 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$268load_global.13', '$278binary_subtract.18', '$284binary_subtract.21', '$index_step286.22']
2025-02-17 09:50:52,636 - numba.core.byteflow - DEBUG - dispatch pc=290, inst=CALL_FUNCTION(arg=2, lineno=60)
2025-02-17 09:50:52,637 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$268load_global.13', '$278binary_subtract.18', '$288binary_floor_divide.23']
2025-02-17 09:50:52,637 - numba.core.byteflow - DEBUG - dispatch pc=292, inst=STORE_FAST(arg=21, lineno=60)
2025-02-17 09:50:52,637 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$290call_function.24']
2025-02-17 09:50:52,637 - numba.core.byteflow - DEBUG - dispatch pc=294, inst=LOAD_GLOBAL(arg=4, lineno=61)
2025-02-17 09:50:52,638 - numba.core.byteflow - DEBUG - stack ['$phi236.0']
2025-02-17 09:50:52,638 - numba.core.byteflow - DEBUG - dispatch pc=296, inst=LOAD_FAST(arg=21, lineno=61)
2025-02-17 09:50:52,638 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$294load_global.25']
2025-02-17 09:50:52,638 - numba.core.byteflow - DEBUG - dispatch pc=298, inst=CALL_FUNCTION(arg=1, lineno=61)
2025-02-17 09:50:52,638 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$294load_global.25', '$k_max296.26']
2025-02-17 09:50:52,639 - numba.core.byteflow - DEBUG - dispatch pc=300, inst=GET_ITER(arg=None, lineno=61)
2025-02-17 09:50:52,639 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$298call_function.27']
2025-02-17 09:50:52,639 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=302, stack=('$phi236.0', '$300get_iter.28'), blockstack=(), npush=0)]
2025-02-17 09:50:52,639 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=168 nstack_initial=3), State(pc_initial=302 nstack_initial=2)])
2025-02-17 09:50:52,640 - numba.core.byteflow - DEBUG - stack: ['$phi168.0', '$phi168.1', '$phi168.2']
2025-02-17 09:50:52,640 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=168 nstack_initial=3)
2025-02-17 09:50:52,640 - numba.core.byteflow - DEBUG - dispatch pc=168, inst=STORE_FAST(arg=20, lineno=41)
2025-02-17 09:50:52,640 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$phi168.2']
2025-02-17 09:50:52,641 - numba.core.byteflow - DEBUG - dispatch pc=170, inst=LOAD_FAST(arg=2, lineno=44)
2025-02-17 09:50:52,641 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1']
2025-02-17 09:50:52,641 - numba.core.byteflow - DEBUG - dispatch pc=172, inst=LOAD_FAST(arg=12, lineno=44)
2025-02-17 09:50:52,641 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$interp_win170.3']
2025-02-17 09:50:52,641 - numba.core.byteflow - DEBUG - dispatch pc=174, inst=LOAD_FAST(arg=20, lineno=44)
2025-02-17 09:50:52,642 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$interp_win170.3', '$offset172.4']
2025-02-17 09:50:52,642 - numba.core.byteflow - DEBUG - dispatch pc=176, inst=LOAD_FAST(arg=7, lineno=44)
2025-02-17 09:50:52,642 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$interp_win170.3', '$offset172.4', '$i174.5']
2025-02-17 09:50:52,642 - numba.core.byteflow - DEBUG - dispatch pc=178, inst=BINARY_MULTIPLY(arg=None, lineno=44)
2025-02-17 09:50:52,642 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$interp_win170.3', '$offset172.4', '$i174.5', '$index_step176.6']
2025-02-17 09:50:52,642 - numba.core.byteflow - DEBUG - dispatch pc=180, inst=BINARY_ADD(arg=None, lineno=44)
2025-02-17 09:50:52,643 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$interp_win170.3', '$offset172.4', '$178binary_multiply.7']
2025-02-17 09:50:52,643 - numba.core.byteflow - DEBUG - dispatch pc=182, inst=BINARY_SUBSCR(arg=None, lineno=44)
2025-02-17 09:50:52,643 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$interp_win170.3', '$180binary_add.8']
2025-02-17 09:50:52,643 - numba.core.byteflow - DEBUG - dispatch pc=184, inst=LOAD_FAST(arg=13, lineno=45)
2025-02-17 09:50:52,643 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$182binary_subscr.9']
2025-02-17 09:50:52,644 - numba.core.byteflow - DEBUG - dispatch pc=186, inst=LOAD_FAST(arg=3, lineno=45)
2025-02-17 09:50:52,644 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$182binary_subscr.9', '$eta184.10']
2025-02-17 09:50:52,644 - numba.core.byteflow - DEBUG - dispatch pc=188, inst=LOAD_FAST(arg=12, lineno=45)
2025-02-17 09:50:52,644 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$182binary_subscr.9', '$eta184.10', '$interp_delta186.11']
2025-02-17 09:50:52,644 - numba.core.byteflow - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=20, lineno=45)
2025-02-17 09:50:52,644 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$182binary_subscr.9', '$eta184.10', '$interp_delta186.11', '$offset188.12']
2025-02-17 09:50:52,645 - numba.core.byteflow - DEBUG - dispatch pc=192, inst=LOAD_FAST(arg=7, lineno=45)
2025-02-17 09:50:52,645 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$182binary_subscr.9', '$eta184.10', '$interp_delta186.11', '$offset188.12', '$i190.13']
2025-02-17 09:50:52,645 - numba.core.byteflow - DEBUG - dispatch pc=194, inst=BINARY_MULTIPLY(arg=None, lineno=45)
2025-02-17 09:50:52,645 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$182binary_subscr.9', '$eta184.10', '$interp_delta186.11', '$offset188.12', '$i190.13', '$index_step192.14']
2025-02-17 09:50:52,645 - numba.core.byteflow - DEBUG - dispatch pc=196, inst=BINARY_ADD(arg=None, lineno=45)
2025-02-17 09:50:52,645 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$182binary_subscr.9', '$eta184.10', '$interp_delta186.11', '$offset188.12', '$194binary_multiply.15']
2025-02-17 09:50:52,646 - numba.core.byteflow - DEBUG - dispatch pc=198, inst=BINARY_SUBSCR(arg=None, lineno=45)
2025-02-17 09:50:52,646 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$182binary_subscr.9', '$eta184.10', '$interp_delta186.11', '$196binary_add.16']
2025-02-17 09:50:52,646 - numba.core.byteflow - DEBUG - dispatch pc=200, inst=BINARY_MULTIPLY(arg=None, lineno=45)
2025-02-17 09:50:52,646 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$182binary_subscr.9', '$eta184.10', '$198binary_subscr.17']
2025-02-17 09:50:52,646 - numba.core.byteflow - DEBUG - dispatch pc=202, inst=BINARY_ADD(arg=None, lineno=44)
2025-02-17 09:50:52,647 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$182binary_subscr.9', '$200binary_multiply.18']
2025-02-17 09:50:52,647 - numba.core.byteflow - DEBUG - dispatch pc=204, inst=STORE_FAST(arg=14, lineno=43)
2025-02-17 09:50:52,647 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$202binary_add.19']
2025-02-17 09:50:52,647 - numba.core.byteflow - DEBUG - dispatch pc=206, inst=LOAD_FAST(arg=6, lineno=47)
2025-02-17 09:50:52,647 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1']
2025-02-17 09:50:52,647 - numba.core.byteflow - DEBUG - dispatch pc=208, inst=LOAD_FAST(arg=18, lineno=47)
2025-02-17 09:50:52,648 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$y206.20']
2025-02-17 09:50:52,648 - numba.core.byteflow - DEBUG - dispatch pc=210, inst=DUP_TOP_TWO(arg=None, lineno=47)
2025-02-17 09:50:52,648 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$y206.20', '$t208.21']
2025-02-17 09:50:52,648 - numba.core.byteflow - DEBUG - dispatch pc=212, inst=BINARY_SUBSCR(arg=None, lineno=47)
2025-02-17 09:50:52,648 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$y206.20', '$t208.21', '$210dup_top_two.22', '$210dup_top_two.23']
2025-02-17 09:50:52,649 - numba.core.byteflow - DEBUG - dispatch pc=214, inst=LOAD_FAST(arg=14, lineno=47)
2025-02-17 09:50:52,649 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$y206.20', '$t208.21', '$212binary_subscr.24']
2025-02-17 09:50:52,649 - numba.core.byteflow - DEBUG - dispatch pc=216, inst=LOAD_FAST(arg=0, lineno=47)
2025-02-17 09:50:52,649 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$y206.20', '$t208.21', '$212binary_subscr.24', '$weight214.25']
2025-02-17 09:50:52,649 - numba.core.byteflow - DEBUG - dispatch pc=218, inst=LOAD_FAST(arg=9, lineno=47)
2025-02-17 09:50:52,649 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$y206.20', '$t208.21', '$212binary_subscr.24', '$weight214.25', '$x216.26']
2025-02-17 09:50:52,650 - numba.core.byteflow - DEBUG - dispatch pc=220, inst=LOAD_FAST(arg=20, lineno=47)
2025-02-17 09:50:52,650 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$y206.20', '$t208.21', '$212binary_subscr.24', '$weight214.25', '$x216.26', '$n218.27']
2025-02-17 09:50:52,650 - numba.core.byteflow - DEBUG - dispatch pc=222, inst=BINARY_SUBTRACT(arg=None, lineno=47)
2025-02-17 09:50:52,650 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$y206.20', '$t208.21', '$212binary_subscr.24', '$weight214.25', '$x216.26', '$n218.27', '$i220.28']
2025-02-17 09:50:52,650 - numba.core.byteflow - DEBUG - dispatch pc=224, inst=BINARY_SUBSCR(arg=None, lineno=47)
2025-02-17 09:50:52,650 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$y206.20', '$t208.21', '$212binary_subscr.24', '$weight214.25', '$x216.26', '$222binary_subtract.29']
2025-02-17 09:50:52,651 - numba.core.byteflow - DEBUG - dispatch pc=226, inst=BINARY_MULTIPLY(arg=None, lineno=47)
2025-02-17 09:50:52,651 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$y206.20', '$t208.21', '$212binary_subscr.24', '$weight214.25', '$224binary_subscr.30']
2025-02-17 09:50:52,651 - numba.core.byteflow - DEBUG - dispatch pc=228, inst=INPLACE_ADD(arg=None, lineno=47)
2025-02-17 09:50:52,651 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$y206.20', '$t208.21', '$212binary_subscr.24', '$226binary_multiply.31']
2025-02-17 09:50:52,651 - numba.core.byteflow - DEBUG - dispatch pc=230, inst=ROT_THREE(arg=None, lineno=47)
2025-02-17 09:50:52,651 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$y206.20', '$t208.21', '$228inplace_add.32']
2025-02-17 09:50:52,651 - numba.core.byteflow - DEBUG - dispatch pc=232, inst=STORE_SUBSCR(arg=None, lineno=47)
2025-02-17 09:50:52,652 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$228inplace_add.32', '$y206.20', '$t208.21']
2025-02-17 09:50:52,652 - numba.core.byteflow - DEBUG - dispatch pc=234, inst=JUMP_ABSOLUTE(arg=84, lineno=47)
2025-02-17 09:50:52,652 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1']
2025-02-17 09:50:52,652 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=166, stack=('$phi168.0', '$phi168.1'), blockstack=(), npush=0)]
2025-02-17 09:50:52,652 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=302 nstack_initial=2), State(pc_initial=166 nstack_initial=2)])
2025-02-17 09:50:52,652 - numba.core.byteflow - DEBUG - stack: ['$phi302.0', '$phi302.1']
2025-02-17 09:50:52,652 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=302 nstack_initial=2)
2025-02-17 09:50:52,652 - numba.core.byteflow - DEBUG - dispatch pc=302, inst=FOR_ITER(arg=36, lineno=61)
2025-02-17 09:50:52,652 - numba.core.byteflow - DEBUG - stack ['$phi302.0', '$phi302.1']
2025-02-17 09:50:52,653 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=376, stack=('$phi302.0',), blockstack=(), npush=0), Edge(pc=304, stack=('$phi302.0', '$phi302.1', '$302for_iter.3'), blockstack=(), npush=0)]
2025-02-17 09:50:52,653 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=166 nstack_initial=2), State(pc_initial=376 nstack_initial=1), State(pc_initial=304 nstack_initial=3)])
2025-02-17 09:50:52,653 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=376 nstack_initial=1), State(pc_initial=304 nstack_initial=3)])
2025-02-17 09:50:52,653 - numba.core.byteflow - DEBUG - stack: ['$phi376.0']
2025-02-17 09:50:52,653 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=376 nstack_initial=1)
2025-02-17 09:50:52,653 - numba.core.byteflow - DEBUG - dispatch pc=376, inst=JUMP_ABSOLUTE(arg=41, lineno=61)
2025-02-17 09:50:52,653 - numba.core.byteflow - DEBUG - stack ['$phi376.0']
2025-02-17 09:50:52,653 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$phi376.0',), blockstack=(), npush=0)]
2025-02-17 09:50:52,654 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=304 nstack_initial=3), State(pc_initial=80 nstack_initial=1)])
2025-02-17 09:50:52,654 - numba.core.byteflow - DEBUG - stack: ['$phi304.0', '$phi304.1', '$phi304.2']
2025-02-17 09:50:52,654 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=304 nstack_initial=3)
2025-02-17 09:50:52,654 - numba.core.byteflow - DEBUG - dispatch pc=304, inst=STORE_FAST(arg=22, lineno=61)
2025-02-17 09:50:52,654 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$phi304.2']
2025-02-17 09:50:52,654 - numba.core.byteflow - DEBUG - dispatch pc=306, inst=LOAD_FAST(arg=2, lineno=63)
2025-02-17 09:50:52,654 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1']
2025-02-17 09:50:52,654 - numba.core.byteflow - DEBUG - dispatch pc=308, inst=LOAD_FAST(arg=12, lineno=63)
2025-02-17 09:50:52,654 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$interp_win306.3']
2025-02-17 09:50:52,654 - numba.core.byteflow - DEBUG - dispatch pc=310, inst=LOAD_FAST(arg=22, lineno=63)
2025-02-17 09:50:52,654 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$interp_win306.3', '$offset308.4']
2025-02-17 09:50:52,654 - numba.core.byteflow - DEBUG - dispatch pc=312, inst=LOAD_FAST(arg=7, lineno=63)
2025-02-17 09:50:52,654 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$interp_win306.3', '$offset308.4', '$k310.5']
2025-02-17 09:50:52,655 - numba.core.byteflow - DEBUG - dispatch pc=314, inst=BINARY_MULTIPLY(arg=None, lineno=63)
2025-02-17 09:50:52,655 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$interp_win306.3', '$offset308.4', '$k310.5', '$index_step312.6']
2025-02-17 09:50:52,655 - numba.core.byteflow - DEBUG - dispatch pc=316, inst=BINARY_ADD(arg=None, lineno=63)
2025-02-17 09:50:52,655 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$interp_win306.3', '$offset308.4', '$314binary_multiply.7']
2025-02-17 09:50:52,655 - numba.core.byteflow - DEBUG - dispatch pc=318, inst=BINARY_SUBSCR(arg=None, lineno=63)
2025-02-17 09:50:52,655 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$interp_win306.3', '$316binary_add.8']
2025-02-17 09:50:52,655 - numba.core.byteflow - DEBUG - dispatch pc=320, inst=LOAD_FAST(arg=13, lineno=64)
2025-02-17 09:50:52,655 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$318binary_subscr.9']
2025-02-17 09:50:52,655 - numba.core.byteflow - DEBUG - dispatch pc=322, inst=LOAD_FAST(arg=3, lineno=64)
2025-02-17 09:50:52,655 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$318binary_subscr.9', '$eta320.10']
2025-02-17 09:50:52,655 - numba.core.byteflow - DEBUG - dispatch pc=324, inst=LOAD_FAST(arg=12, lineno=64)
2025-02-17 09:50:52,655 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$318binary_subscr.9', '$eta320.10', '$interp_delta322.11']
2025-02-17 09:50:52,655 - numba.core.byteflow - DEBUG - dispatch pc=326, inst=LOAD_FAST(arg=22, lineno=64)
2025-02-17 09:50:52,655 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$318binary_subscr.9', '$eta320.10', '$interp_delta322.11', '$offset324.12']
2025-02-17 09:50:52,655 - numba.core.byteflow - DEBUG - dispatch pc=328, inst=LOAD_FAST(arg=7, lineno=64)
2025-02-17 09:50:52,655 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$318binary_subscr.9', '$eta320.10', '$interp_delta322.11', '$offset324.12', '$k326.13']
2025-02-17 09:50:52,656 - numba.core.byteflow - DEBUG - dispatch pc=330, inst=BINARY_MULTIPLY(arg=None, lineno=64)
2025-02-17 09:50:52,656 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$318binary_subscr.9', '$eta320.10', '$interp_delta322.11', '$offset324.12', '$k326.13', '$index_step328.14']
2025-02-17 09:50:52,656 - numba.core.byteflow - DEBUG - dispatch pc=332, inst=BINARY_ADD(arg=None, lineno=64)
2025-02-17 09:50:52,656 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$318binary_subscr.9', '$eta320.10', '$interp_delta322.11', '$offset324.12', '$330binary_multiply.15']
2025-02-17 09:50:52,656 - numba.core.byteflow - DEBUG - dispatch pc=334, inst=BINARY_SUBSCR(arg=None, lineno=64)
2025-02-17 09:50:52,656 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$318binary_subscr.9', '$eta320.10', '$interp_delta322.11', '$332binary_add.16']
2025-02-17 09:50:52,656 - numba.core.byteflow - DEBUG - dispatch pc=336, inst=BINARY_MULTIPLY(arg=None, lineno=64)
2025-02-17 09:50:52,656 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$318binary_subscr.9', '$eta320.10', '$334binary_subscr.17']
2025-02-17 09:50:52,656 - numba.core.byteflow - DEBUG - dispatch pc=338, inst=BINARY_ADD(arg=None, lineno=63)
2025-02-17 09:50:52,656 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$318binary_subscr.9', '$336binary_multiply.18']
2025-02-17 09:50:52,656 - numba.core.byteflow - DEBUG - dispatch pc=340, inst=STORE_FAST(arg=14, lineno=62)
2025-02-17 09:50:52,656 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$338binary_add.19']
2025-02-17 09:50:52,656 - numba.core.byteflow - DEBUG - dispatch pc=342, inst=LOAD_FAST(arg=6, lineno=66)
2025-02-17 09:50:52,656 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1']
2025-02-17 09:50:52,656 - numba.core.byteflow - DEBUG - dispatch pc=344, inst=LOAD_FAST(arg=18, lineno=66)
2025-02-17 09:50:52,656 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20']
2025-02-17 09:50:52,657 - numba.core.byteflow - DEBUG - dispatch pc=346, inst=DUP_TOP_TWO(arg=None, lineno=66)
2025-02-17 09:50:52,657 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21']
2025-02-17 09:50:52,657 - numba.core.byteflow - DEBUG - dispatch pc=348, inst=BINARY_SUBSCR(arg=None, lineno=66)
2025-02-17 09:50:52,657 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21', '$346dup_top_two.22', '$346dup_top_two.23']
2025-02-17 09:50:52,657 - numba.core.byteflow - DEBUG - dispatch pc=350, inst=LOAD_FAST(arg=14, lineno=66)
2025-02-17 09:50:52,657 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21', '$348binary_subscr.24']
2025-02-17 09:50:52,657 - numba.core.byteflow - DEBUG - dispatch pc=352, inst=LOAD_FAST(arg=0, lineno=66)
2025-02-17 09:50:52,657 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21', '$348binary_subscr.24', '$weight350.25']
2025-02-17 09:50:52,657 - numba.core.byteflow - DEBUG - dispatch pc=354, inst=LOAD_FAST(arg=9, lineno=66)
2025-02-17 09:50:52,657 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21', '$348binary_subscr.24', '$weight350.25', '$x352.26']
2025-02-17 09:50:52,657 - numba.core.byteflow - DEBUG - dispatch pc=356, inst=LOAD_FAST(arg=22, lineno=66)
2025-02-17 09:50:52,657 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21', '$348binary_subscr.24', '$weight350.25', '$x352.26', '$n354.27']
2025-02-17 09:50:52,657 - numba.core.byteflow - DEBUG - dispatch pc=358, inst=BINARY_ADD(arg=None, lineno=66)
2025-02-17 09:50:52,657 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21', '$348binary_subscr.24', '$weight350.25', '$x352.26', '$n354.27', '$k356.28']
2025-02-17 09:50:52,657 - numba.core.byteflow - DEBUG - dispatch pc=360, inst=LOAD_CONST(arg=3, lineno=66)
2025-02-17 09:50:52,658 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21', '$348binary_subscr.24', '$weight350.25', '$x352.26', '$358binary_add.29']
2025-02-17 09:50:52,658 - numba.core.byteflow - DEBUG - dispatch pc=362, inst=BINARY_ADD(arg=None, lineno=66)
2025-02-17 09:50:52,658 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21', '$348binary_subscr.24', '$weight350.25', '$x352.26', '$358binary_add.29', '$const360.30']
2025-02-17 09:50:52,658 - numba.core.byteflow - DEBUG - dispatch pc=364, inst=BINARY_SUBSCR(arg=None, lineno=66)
2025-02-17 09:50:52,658 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21', '$348binary_subscr.24', '$weight350.25', '$x352.26', '$362binary_add.31']
2025-02-17 09:50:52,658 - numba.core.byteflow - DEBUG - dispatch pc=366, inst=BINARY_MULTIPLY(arg=None, lineno=66)
2025-02-17 09:50:52,658 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21', '$348binary_subscr.24', '$weight350.25', '$364binary_subscr.32']
2025-02-17 09:50:52,658 - numba.core.byteflow - DEBUG - dispatch pc=368, inst=INPLACE_ADD(arg=None, lineno=66)
2025-02-17 09:50:52,658 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21', '$348binary_subscr.24', '$366binary_multiply.33']
2025-02-17 09:50:52,658 - numba.core.byteflow - DEBUG - dispatch pc=370, inst=ROT_THREE(arg=None, lineno=66)
2025-02-17 09:50:52,658 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21', '$368inplace_add.34']
2025-02-17 09:50:52,658 - numba.core.byteflow - DEBUG - dispatch pc=372, inst=STORE_SUBSCR(arg=None, lineno=66)
2025-02-17 09:50:52,658 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$368inplace_add.34', '$y342.20', '$t344.21']
2025-02-17 09:50:52,658 - numba.core.byteflow - DEBUG - dispatch pc=374, inst=JUMP_ABSOLUTE(arg=152, lineno=66)
2025-02-17 09:50:52,658 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1']
2025-02-17 09:50:52,658 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=302, stack=('$phi304.0', '$phi304.1'), blockstack=(), npush=0)]
2025-02-17 09:50:52,659 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1), State(pc_initial=302 nstack_initial=2)])
2025-02-17 09:50:52,659 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=302 nstack_initial=2)])
2025-02-17 09:50:52,659 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-02-17 09:50:52,659 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=166 nstack_initial=2): {'$phi166.1'},
             State(pc_initial=168 nstack_initial=3): {'$phi168.2'},
             State(pc_initial=236 nstack_initial=1): set(),
             State(pc_initial=302 nstack_initial=2): {'$phi302.1'},
             State(pc_initial=304 nstack_initial=3): {'$phi304.2'},
             State(pc_initial=376 nstack_initial=1): set(),
             State(pc_initial=378 nstack_initial=0): set()})
2025-02-17 09:50:52,659 - numba.core.byteflow - DEBUG - defmap: {'$phi166.1': State(pc_initial=82 nstack_initial=2),
 '$phi168.2': State(pc_initial=166 nstack_initial=2),
 '$phi302.1': State(pc_initial=236 nstack_initial=1),
 '$phi304.2': State(pc_initial=302 nstack_initial=2),
 '$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
2025-02-17 09:50:52,659 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi166.0': {('$phi168.0',
                            State(pc_initial=168 nstack_initial=3)),
                           ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi166.1': {('$164get_iter.35',
                            State(pc_initial=82 nstack_initial=2)),
                           ('$phi168.1',
                            State(pc_initial=168 nstack_initial=3))},
             '$phi168.0': {('$phi166.0',
                            State(pc_initial=166 nstack_initial=2))},
             '$phi168.1': {('$phi166.1',
                            State(pc_initial=166 nstack_initial=2))},
             '$phi168.2': {('$166for_iter.3',
                            State(pc_initial=166 nstack_initial=2))},
             '$phi236.0': {('$phi166.0',
                            State(pc_initial=166 nstack_initial=2))},
             '$phi302.0': {('$phi236.0',
                            State(pc_initial=236 nstack_initial=1)),
                           ('$phi304.0',
                            State(pc_initial=304 nstack_initial=3))},
             '$phi302.1': {('$300get_iter.28',
                            State(pc_initial=236 nstack_initial=1)),
                           ('$phi304.1',
                            State(pc_initial=304 nstack_initial=3))},
             '$phi304.0': {('$phi302.0',
                            State(pc_initial=302 nstack_initial=2))},
             '$phi304.1': {('$phi302.1',
                            State(pc_initial=302 nstack_initial=2))},
             '$phi304.2': {('$302for_iter.3',
                            State(pc_initial=302 nstack_initial=2))},
             '$phi376.0': {('$phi302.0',
                            State(pc_initial=302 nstack_initial=2))},
             '$phi80.0': {('$78get_iter.27',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi376.0',
                           State(pc_initial=376 nstack_initial=1))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-02-17 09:50:52,660 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi166.0': {('$phi166.0',
                            State(pc_initial=166 nstack_initial=2)),
                           ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi166.1': {('$164get_iter.35',
                            State(pc_initial=82 nstack_initial=2)),
                           ('$phi166.1',
                            State(pc_initial=166 nstack_initial=2))},
             '$phi168.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi168.1': {('$164get_iter.35',
                            State(pc_initial=82 nstack_initial=2))},
             '$phi168.2': {('$166for_iter.3',
                            State(pc_initial=166 nstack_initial=2))},
             '$phi236.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi302.0': {('$phi302.0',
                            State(pc_initial=302 nstack_initial=2)),
                           ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi302.1': {('$300get_iter.28',
                            State(pc_initial=236 nstack_initial=1)),
                           ('$phi302.1',
                            State(pc_initial=302 nstack_initial=2))},
             '$phi304.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi304.1': {('$300get_iter.28',
                            State(pc_initial=236 nstack_initial=1))},
             '$phi304.2': {('$302for_iter.3',
                            State(pc_initial=302 nstack_initial=2))},
             '$phi376.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi80.0': {('$78get_iter.27',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.27',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-02-17 09:50:52,661 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi166.0': {('$78get_iter.27',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi166.1': {('$164get_iter.35',
                            State(pc_initial=82 nstack_initial=2))},
             '$phi168.0': {('$78get_iter.27',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi168.1': {('$164get_iter.35',
                            State(pc_initial=82 nstack_initial=2))},
             '$phi168.2': {('$166for_iter.3',
                            State(pc_initial=166 nstack_initial=2))},
             '$phi236.0': {('$78get_iter.27',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi302.0': {('$78get_iter.27',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi302.1': {('$300get_iter.28',
                            State(pc_initial=236 nstack_initial=1))},
             '$phi304.0': {('$78get_iter.27',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi304.1': {('$300get_iter.28',
                            State(pc_initial=236 nstack_initial=1))},
             '$phi304.2': {('$302for_iter.3',
                            State(pc_initial=302 nstack_initial=2))},
             '$phi376.0': {('$78get_iter.27',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$78get_iter.27',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.27',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-02-17 09:50:52,661 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi166.0': {('$78get_iter.27',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi166.1': {('$164get_iter.35',
                            State(pc_initial=82 nstack_initial=2))},
             '$phi168.0': {('$78get_iter.27',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi168.1': {('$164get_iter.35',
                            State(pc_initial=82 nstack_initial=2))},
             '$phi168.2': {('$166for_iter.3',
                            State(pc_initial=166 nstack_initial=2))},
             '$phi236.0': {('$78get_iter.27',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi302.0': {('$78get_iter.27',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi302.1': {('$300get_iter.28',
                            State(pc_initial=236 nstack_initial=1))},
             '$phi304.0': {('$78get_iter.27',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi304.1': {('$300get_iter.28',
                            State(pc_initial=236 nstack_initial=1))},
             '$phi304.2': {('$302for_iter.3',
                            State(pc_initial=302 nstack_initial=2))},
             '$phi376.0': {('$78get_iter.27',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$78get_iter.27',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.27',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-02-17 09:50:52,662 - numba.core.byteflow - DEBUG - keep phismap: {'$phi166.1': {('$164get_iter.35', State(pc_initial=82 nstack_initial=2))},
 '$phi168.2': {('$166for_iter.3', State(pc_initial=166 nstack_initial=2))},
 '$phi302.1': {('$300get_iter.28', State(pc_initial=236 nstack_initial=1))},
 '$phi304.2': {('$302for_iter.3', State(pc_initial=302 nstack_initial=2))},
 '$phi80.0': {('$78get_iter.27', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
2025-02-17 09:50:52,662 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.27'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'},
             State(pc_initial=82 nstack_initial=2): {'$phi166.1': '$164get_iter.35'},
             State(pc_initial=166 nstack_initial=2): {'$phi168.2': '$166for_iter.3'},
             State(pc_initial=236 nstack_initial=1): {'$phi302.1': '$300get_iter.28'},
             State(pc_initial=302 nstack_initial=2): {'$phi304.2': '$302for_iter.3'}})
2025-02-17 09:50:52,663 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-02-17 09:50:52,663 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$scale4.1'}), (6, {'res': '$num_table6.2'}), (8, {'lhs': '$scale4.1', 'rhs': '$num_table6.2', 'res': '$8binary_multiply.3'}), (10, {'func': '$2load_global.0', 'args': ['$8binary_multiply.3'], 'res': '$10call_function.4'}), (12, {'value': '$10call_function.4'}), (14, {'res': '$const14.5'}), (16, {'value': '$const14.5'}), (18, {'res': '$const18.6'}), (20, {'value': '$const18.6'}), (22, {'res': '$const22.7'}), (24, {'value': '$const22.7'}), (26, {'res': '$const26.8'}), (28, {'value': '$const26.8'}), (30, {'res': '$const30.9'}), (32, {'value': '$const30.9'}), (34, {'res': '$const34.10'}), (36, {'value': '$const34.10'}), (38, {'res': '$const38.11'}), (40, {'value': '$const38.11'}), (42, {'res': '$interp_win42.12'}), (44, {'item': '$interp_win42.12', 'res': '$44load_attr.13'}), (46, {'res': '$const46.14'}), (48, {'index': '$const46.14', 'target': '$44load_attr.13', 'res': '$48binary_subscr.15'}), (50, {'value': '$48binary_subscr.15'}), (52, {'res': '$x52.16'}), (54, {'item': '$x52.16', 'res': '$54load_attr.17'}), (56, {'res': '$const56.18'}), (58, {'index': '$const56.18', 'target': '$54load_attr.17', 'res': '$58binary_subscr.19'}), (60, {'value': '$58binary_subscr.19'}), (62, {'res': '$t_out62.20'}), (64, {'item': '$t_out62.20', 'res': '$64load_attr.21'}), (66, {'res': '$const66.22'}), (68, {'index': '$const66.22', 'target': '$64load_attr.21', 'res': '$68binary_subscr.23'}), (70, {'value': '$68binary_subscr.23'}), (72, {'res': '$72load_global.24'}), (74, {'res': '$n_out74.25'}), (76, {'func': '$72load_global.24', 'args': ['$n_out74.25'], 'res': '$76call_function.26'}), (78, {'value': '$76call_function.26', 'res': '$78get_iter.27'})), outgoing_phis={'$phi80.0': '$78get_iter.27'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.27',)})
2025-02-17 09:50:52,663 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={378: (), 82: ('$phi80.0', '$80for_iter.2')})
2025-02-17 09:50:52,663 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$t_out84.2'}), (86, {'res': '$t86.3'}), (88, {'index': '$t86.3', 'target': '$t_out84.2', 'res': '$88binary_subscr.4'}), (90, {'value': '$88binary_subscr.4'}), (92, {'res': '$92load_global.5'}), (94, {'res': '$time_register94.6'}), (96, {'func': '$92load_global.5', 'args': ['$time_register94.6'], 'res': '$96call_function.7'}), (98, {'value': '$96call_function.7'}), (100, {'res': '$scale100.8'}), (102, {'res': '$time_register102.9'}), (104, {'res': '$n104.10'}), (106, {'lhs': '$time_register102.9', 'rhs': '$n104.10', 'res': '$106binary_subtract.11'}), (108, {'lhs': '$scale100.8', 'rhs': '$106binary_subtract.11', 'res': '$108binary_multiply.12'}), (110, {'value': '$108binary_multiply.12'}), (112, {'res': '$frac112.13'}), (114, {'res': '$num_table114.14'}), (116, {'lhs': '$frac112.13', 'rhs': '$num_table114.14', 'res': '$116binary_multiply.15'}), (118, {'value': '$116binary_multiply.15'}), (120, {'res': '$120load_global.16'}), (122, {'res': '$index_frac122.17'}), (124, {'func': '$120load_global.16', 'args': ['$index_frac122.17'], 'res': '$124call_function.18'}), (126, {'value': '$124call_function.18'}), (128, {'res': '$index_frac128.19'}), (130, {'res': '$offset130.20'}), (132, {'lhs': '$index_frac128.19', 'rhs': '$offset130.20', 'res': '$132binary_subtract.21'}), (134, {'value': '$132binary_subtract.21'}), (136, {'res': '$136load_global.22'}), (138, {'res': '$n138.23'}), (140, {'res': '$const140.24'}), (142, {'lhs': '$n138.23', 'rhs': '$const140.24', 'res': '$142binary_add.25'}), (144, {'res': '$nwin144.26'}), (146, {'res': '$offset146.27'}), (148, {'lhs': '$nwin144.26', 'rhs': '$offset146.27', 'res': '$148binary_subtract.28'}), (150, {'res': '$index_step150.29'}), (152, {'lhs': '$148binary_subtract.28', 'rhs': '$index_step150.29', 'res': '$152binary_floor_divide.30'}), (154, {'func': '$136load_global.22', 'args': ['$142binary_add.25', '$152binary_floor_divide.30'], 'res': '$154call_function.31'}), (156, {'value': '$154call_function.31'}), (158, {'res': '$158load_global.32'}), (160, {'res': '$i_max160.33'}), (162, {'func': '$158load_global.32', 'args': ['$i_max160.33'], 'res': '$162call_function.34'}), (164, {'value': '$162call_function.34', 'res': '$164get_iter.35'})), outgoing_phis={'$phi166.1': '$164get_iter.35'}, blockstack=(), active_try_block=None, outgoing_edgepushed={166: ('$phi82.0', '$164get_iter.35')})
2025-02-17 09:50:52,663 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=166 nstack_initial=2):
AdaptBlockInfo(insts=((166, {'iterator': '$phi166.1', 'pair': '$166for_iter.2', 'indval': '$166for_iter.3', 'pred': '$166for_iter.4'}),), outgoing_phis={'$phi168.2': '$166for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={236: ('$phi166.0',), 168: ('$phi166.0', '$phi166.1', '$166for_iter.3')})
2025-02-17 09:50:52,663 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=168 nstack_initial=3):
AdaptBlockInfo(insts=((168, {'value': '$phi168.2'}), (170, {'res': '$interp_win170.3'}), (172, {'res': '$offset172.4'}), (174, {'res': '$i174.5'}), (176, {'res': '$index_step176.6'}), (178, {'lhs': '$i174.5', 'rhs': '$index_step176.6', 'res': '$178binary_multiply.7'}), (180, {'lhs': '$offset172.4', 'rhs': '$178binary_multiply.7', 'res': '$180binary_add.8'}), (182, {'index': '$180binary_add.8', 'target': '$interp_win170.3', 'res': '$182binary_subscr.9'}), (184, {'res': '$eta184.10'}), (186, {'res': '$interp_delta186.11'}), (188, {'res': '$offset188.12'}), (190, {'res': '$i190.13'}), (192, {'res': '$index_step192.14'}), (194, {'lhs': '$i190.13', 'rhs': '$index_step192.14', 'res': '$194binary_multiply.15'}), (196, {'lhs': '$offset188.12', 'rhs': '$194binary_multiply.15', 'res': '$196binary_add.16'}), (198, {'index': '$196binary_add.16', 'target': '$interp_delta186.11', 'res': '$198binary_subscr.17'}), (200, {'lhs': '$eta184.10', 'rhs': '$198binary_subscr.17', 'res': '$200binary_multiply.18'}), (202, {'lhs': '$182binary_subscr.9', 'rhs': '$200binary_multiply.18', 'res': '$202binary_add.19'}), (204, {'value': '$202binary_add.19'}), (206, {'res': '$y206.20'}), (208, {'res': '$t208.21'}), (210, {'orig': ['$y206.20', '$t208.21'], 'duped': ['$210dup_top_two.22', '$210dup_top_two.23']}), (212, {'index': '$210dup_top_two.23', 'target': '$210dup_top_two.22', 'res': '$212binary_subscr.24'}), (214, {'res': '$weight214.25'}), (216, {'res': '$x216.26'}), (218, {'res': '$n218.27'}), (220, {'res': '$i220.28'}), (222, {'lhs': '$n218.27', 'rhs': '$i220.28', 'res': '$222binary_subtract.29'}), (224, {'index': '$222binary_subtract.29', 'target': '$x216.26', 'res': '$224binary_subscr.30'}), (226, {'lhs': '$weight214.25', 'rhs': '$224binary_subscr.30', 'res': '$226binary_multiply.31'}), (228, {'lhs': '$212binary_subscr.24', 'rhs': '$226binary_multiply.31', 'res': '$228inplace_add.32'}), (232, {'target': '$y206.20', 'index': '$t208.21', 'value': '$228inplace_add.32'}), (234, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={166: ('$phi168.0', '$phi168.1')})
2025-02-17 09:50:52,663 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=236 nstack_initial=1):
AdaptBlockInfo(insts=((236, {'res': '$scale236.1'}), (238, {'res': '$frac238.2'}), (240, {'lhs': '$scale236.1', 'rhs': '$frac238.2', 'res': '$240binary_subtract.3'}), (242, {'value': '$240binary_subtract.3'}), (244, {'res': '$frac244.4'}), (246, {'res': '$num_table246.5'}), (248, {'lhs': '$frac244.4', 'rhs': '$num_table246.5', 'res': '$248binary_multiply.6'}), (250, {'value': '$248binary_multiply.6'}), (252, {'res': '$252load_global.7'}), (254, {'res': '$index_frac254.8'}), (256, {'func': '$252load_global.7', 'args': ['$index_frac254.8'], 'res': '$256call_function.9'}), (258, {'value': '$256call_function.9'}), (260, {'res': '$index_frac260.10'}), (262, {'res': '$offset262.11'}), (264, {'lhs': '$index_frac260.10', 'rhs': '$offset262.11', 'res': '$264binary_subtract.12'}), (266, {'value': '$264binary_subtract.12'}), (268, {'res': '$268load_global.13'}), (270, {'res': '$n_orig270.14'}), (272, {'res': '$n272.15'}), (274, {'lhs': '$n_orig270.14', 'rhs': '$n272.15', 'res': '$274binary_subtract.16'}), (276, {'res': '$const276.17'}), (278, {'lhs': '$274binary_subtract.16', 'rhs': '$const276.17', 'res': '$278binary_subtract.18'}), (280, {'res': '$nwin280.19'}), (282, {'res': '$offset282.20'}), (284, {'lhs': '$nwin280.19', 'rhs': '$offset282.20', 'res': '$284binary_subtract.21'}), (286, {'res': '$index_step286.22'}), (288, {'lhs': '$284binary_subtract.21', 'rhs': '$index_step286.22', 'res': '$288binary_floor_divide.23'}), (290, {'func': '$268load_global.13', 'args': ['$278binary_subtract.18', '$288binary_floor_divide.23'], 'res': '$290call_function.24'}), (292, {'value': '$290call_function.24'}), (294, {'res': '$294load_global.25'}), (296, {'res': '$k_max296.26'}), (298, {'func': '$294load_global.25', 'args': ['$k_max296.26'], 'res': '$298call_function.27'}), (300, {'value': '$298call_function.27', 'res': '$300get_iter.28'})), outgoing_phis={'$phi302.1': '$300get_iter.28'}, blockstack=(), active_try_block=None, outgoing_edgepushed={302: ('$phi236.0', '$300get_iter.28')})
2025-02-17 09:50:52,663 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=302 nstack_initial=2):
AdaptBlockInfo(insts=((302, {'iterator': '$phi302.1', 'pair': '$302for_iter.2', 'indval': '$302for_iter.3', 'pred': '$302for_iter.4'}),), outgoing_phis={'$phi304.2': '$302for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={376: ('$phi302.0',), 304: ('$phi302.0', '$phi302.1', '$302for_iter.3')})
2025-02-17 09:50:52,664 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=304 nstack_initial=3):
AdaptBlockInfo(insts=((304, {'value': '$phi304.2'}), (306, {'res': '$interp_win306.3'}), (308, {'res': '$offset308.4'}), (310, {'res': '$k310.5'}), (312, {'res': '$index_step312.6'}), (314, {'lhs': '$k310.5', 'rhs': '$index_step312.6', 'res': '$314binary_multiply.7'}), (316, {'lhs': '$offset308.4', 'rhs': '$314binary_multiply.7', 'res': '$316binary_add.8'}), (318, {'index': '$316binary_add.8', 'target': '$interp_win306.3', 'res': '$318binary_subscr.9'}), (320, {'res': '$eta320.10'}), (322, {'res': '$interp_delta322.11'}), (324, {'res': '$offset324.12'}), (326, {'res': '$k326.13'}), (328, {'res': '$index_step328.14'}), (330, {'lhs': '$k326.13', 'rhs': '$index_step328.14', 'res': '$330binary_multiply.15'}), (332, {'lhs': '$offset324.12', 'rhs': '$330binary_multiply.15', 'res': '$332binary_add.16'}), (334, {'index': '$332binary_add.16', 'target': '$interp_delta322.11', 'res': '$334binary_subscr.17'}), (336, {'lhs': '$eta320.10', 'rhs': '$334binary_subscr.17', 'res': '$336binary_multiply.18'}), (338, {'lhs': '$318binary_subscr.9', 'rhs': '$336binary_multiply.18', 'res': '$338binary_add.19'}), (340, {'value': '$338binary_add.19'}), (342, {'res': '$y342.20'}), (344, {'res': '$t344.21'}), (346, {'orig': ['$y342.20', '$t344.21'], 'duped': ['$346dup_top_two.22', '$346dup_top_two.23']}), (348, {'index': '$346dup_top_two.23', 'target': '$346dup_top_two.22', 'res': '$348binary_subscr.24'}), (350, {'res': '$weight350.25'}), (352, {'res': '$x352.26'}), (354, {'res': '$n354.27'}), (356, {'res': '$k356.28'}), (358, {'lhs': '$n354.27', 'rhs': '$k356.28', 'res': '$358binary_add.29'}), (360, {'res': '$const360.30'}), (362, {'lhs': '$358binary_add.29', 'rhs': '$const360.30', 'res': '$362binary_add.31'}), (364, {'index': '$362binary_add.31', 'target': '$x352.26', 'res': '$364binary_subscr.32'}), (366, {'lhs': '$weight350.25', 'rhs': '$364binary_subscr.32', 'res': '$366binary_multiply.33'}), (368, {'lhs': '$348binary_subscr.24', 'rhs': '$366binary_multiply.33', 'res': '$368inplace_add.34'}), (372, {'target': '$y342.20', 'index': '$t344.21', 'value': '$368inplace_add.34'}), (374, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={302: ('$phi304.0', '$phi304.1')})
2025-02-17 09:50:52,664 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=376 nstack_initial=1):
AdaptBlockInfo(insts=((376, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi376.0',)})
2025-02-17 09:50:52,664 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=378 nstack_initial=0):
AdaptBlockInfo(insts=((378, {'res': '$const378.0'}), (380, {'retval': '$const378.0', 'castval': '$380return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-02-17 09:50:52,669 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $2load_global.0 = global(int: <class 'int'>) ['$2load_global.0']
    $8binary_multiply.3 = scale * num_table  ['$8binary_multiply.3', 'num_table', 'scale']
    index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8binary_multiply.3', 'index_step']
    time_register = const(float, 0.0)        ['time_register']
    n = const(int, 0)                        ['n']
    frac = const(float, 0.0)                 ['frac']
    index_frac = const(float, 0.0)           ['index_frac']
    offset = const(int, 0)                   ['offset']
    eta = const(float, 0.0)                  ['eta']
    weight = const(float, 0.0)               ['weight']
    $44load_attr.13 = getattr(value=interp_win, attr=shape) ['$44load_attr.13', 'interp_win']
    $const46.14 = const(int, 0)              ['$const46.14']
    nwin = getitem(value=$44load_attr.13, index=$const46.14, fn=<built-in function getitem>) ['$44load_attr.13', '$const46.14', 'nwin']
    $54load_attr.17 = getattr(value=x, attr=shape) ['$54load_attr.17', 'x']
    $const56.18 = const(int, 0)              ['$const56.18']
    n_orig = getitem(value=$54load_attr.17, index=$const56.18, fn=<built-in function getitem>) ['$54load_attr.17', '$const56.18', 'n_orig']
    $64load_attr.21 = getattr(value=t_out, attr=shape) ['$64load_attr.21', 't_out']
    $const66.22 = const(int, 0)              ['$const66.22']
    n_out = getitem(value=$64load_attr.21, index=$const66.22, fn=<built-in function getitem>) ['$64load_attr.21', '$const66.22', 'n_out']
    $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>) ['$72load_global.24']
    $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_global.24', '$76call_function.26', 'n_out']
    $78get_iter.27 = getiter(value=$76call_function.26) ['$76call_function.26', '$78get_iter.27']
    $phi80.0 = $78get_iter.27                ['$78get_iter.27', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 378            ['$80for_iter.3']
label 82:
    t = $phi82.1                             ['$phi82.1', 't']
    time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>) ['t', 't_out', 'time_register']
    $92load_global.5 = global(int: <class 'int'>) ['$92load_global.5']
    n = call $92load_global.5(time_register, func=$92load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_global.5', 'n', 'time_register']
    $106binary_subtract.11 = time_register - n ['$106binary_subtract.11', 'n', 'time_register']
    frac = scale * $106binary_subtract.11    ['$106binary_subtract.11', 'frac', 'scale']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $120load_global.16 = global(int: <class 'int'>) ['$120load_global.16']
    offset = call $120load_global.16(index_frac, func=$120load_global.16, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.16', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $136load_global.22 = global(min: <built-in function min>) ['$136load_global.22']
    $const140.24 = const(int, 1)             ['$const140.24']
    $142binary_add.25 = n + $const140.24     ['$142binary_add.25', '$const140.24', 'n']
    $148binary_subtract.28 = nwin - offset   ['$148binary_subtract.28', 'nwin', 'offset']
    $152binary_floor_divide.30 = $148binary_subtract.28 // index_step ['$148binary_subtract.28', '$152binary_floor_divide.30', 'index_step']
    i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_global.22', '$142binary_add.25', '$152binary_floor_divide.30', 'i_max']
    $158load_global.32 = global(range: <class 'range'>) ['$158load_global.32']
    $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$158load_global.32', '$162call_function.34', 'i_max']
    $164get_iter.35 = getiter(value=$162call_function.34) ['$162call_function.34', '$164get_iter.35']
    $phi166.1 = $164get_iter.35              ['$164get_iter.35', '$phi166.1']
    jump 166                                 []
label 166:
    $166for_iter.2 = iternext(value=$phi166.1) ['$166for_iter.2', '$phi166.1']
    $166for_iter.3 = pair_first(value=$166for_iter.2) ['$166for_iter.2', '$166for_iter.3']
    $166for_iter.4 = pair_second(value=$166for_iter.2) ['$166for_iter.2', '$166for_iter.4']
    $phi168.2 = $166for_iter.3               ['$166for_iter.3', '$phi168.2']
    branch $166for_iter.4, 168, 236          ['$166for_iter.4']
label 168:
    i = $phi168.2                            ['$phi168.2', 'i']
    $178binary_multiply.7 = i * index_step   ['$178binary_multiply.7', 'i', 'index_step']
    $180binary_add.8 = offset + $178binary_multiply.7 ['$178binary_multiply.7', '$180binary_add.8', 'offset']
    $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>) ['$180binary_add.8', '$182binary_subscr.9', 'interp_win']
    $194binary_multiply.15 = i * index_step  ['$194binary_multiply.15', 'i', 'index_step']
    $196binary_add.16 = offset + $194binary_multiply.15 ['$194binary_multiply.15', '$196binary_add.16', 'offset']
    $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>) ['$196binary_add.16', '$198binary_subscr.17', 'interp_delta']
    $200binary_multiply.18 = eta * $198binary_subscr.17 ['$198binary_subscr.17', '$200binary_multiply.18', 'eta']
    weight = $182binary_subscr.9 + $200binary_multiply.18 ['$182binary_subscr.9', '$200binary_multiply.18', 'weight']
    $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$212binary_subscr.24', 't', 'y']
    $222binary_subtract.29 = n - i           ['$222binary_subtract.29', 'i', 'n']
    $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>) ['$222binary_subtract.29', '$224binary_subscr.30', 'x']
    $226binary_multiply.31 = weight * $224binary_subscr.30 ['$224binary_subscr.30', '$226binary_multiply.31', 'weight']
    $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined) ['$212binary_subscr.24', '$226binary_multiply.31', '$228inplace_add.32']
    y[t] = $228inplace_add.32                ['$228inplace_add.32', 't', 'y']
    jump 166                                 []
label 236:
    $240binary_subtract.3 = scale - frac     ['$240binary_subtract.3', 'frac', 'scale']
    frac = $240binary_subtract.3             ['$240binary_subtract.3', 'frac']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $252load_global.7 = global(int: <class 'int'>) ['$252load_global.7']
    offset = call $252load_global.7(index_frac, func=$252load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$252load_global.7', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $268load_global.13 = global(min: <built-in function min>) ['$268load_global.13']
    $274binary_subtract.16 = n_orig - n      ['$274binary_subtract.16', 'n', 'n_orig']
    $const276.17 = const(int, 1)             ['$const276.17']
    $278binary_subtract.18 = $274binary_subtract.16 - $const276.17 ['$274binary_subtract.16', '$278binary_subtract.18', '$const276.17']
    $284binary_subtract.21 = nwin - offset   ['$284binary_subtract.21', 'nwin', 'offset']
    $288binary_floor_divide.23 = $284binary_subtract.21 // index_step ['$284binary_subtract.21', '$288binary_floor_divide.23', 'index_step']
    k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$268load_global.13', '$278binary_subtract.18', '$288binary_floor_divide.23', 'k_max']
    $294load_global.25 = global(range: <class 'range'>) ['$294load_global.25']
    $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$294load_global.25', '$298call_function.27', 'k_max']
    $300get_iter.28 = getiter(value=$298call_function.27) ['$298call_function.27', '$300get_iter.28']
    $phi302.1 = $300get_iter.28              ['$300get_iter.28', '$phi302.1']
    jump 302                                 []
label 302:
    $302for_iter.2 = iternext(value=$phi302.1) ['$302for_iter.2', '$phi302.1']
    $302for_iter.3 = pair_first(value=$302for_iter.2) ['$302for_iter.2', '$302for_iter.3']
    $302for_iter.4 = pair_second(value=$302for_iter.2) ['$302for_iter.2', '$302for_iter.4']
    $phi304.2 = $302for_iter.3               ['$302for_iter.3', '$phi304.2']
    branch $302for_iter.4, 304, 376          ['$302for_iter.4']
label 304:
    k = $phi304.2                            ['$phi304.2', 'k']
    $314binary_multiply.7 = k * index_step   ['$314binary_multiply.7', 'index_step', 'k']
    $316binary_add.8 = offset + $314binary_multiply.7 ['$314binary_multiply.7', '$316binary_add.8', 'offset']
    $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>) ['$316binary_add.8', '$318binary_subscr.9', 'interp_win']
    $330binary_multiply.15 = k * index_step  ['$330binary_multiply.15', 'index_step', 'k']
    $332binary_add.16 = offset + $330binary_multiply.15 ['$330binary_multiply.15', '$332binary_add.16', 'offset']
    $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>) ['$332binary_add.16', '$334binary_subscr.17', 'interp_delta']
    $336binary_multiply.18 = eta * $334binary_subscr.17 ['$334binary_subscr.17', '$336binary_multiply.18', 'eta']
    weight = $318binary_subscr.9 + $336binary_multiply.18 ['$318binary_subscr.9', '$336binary_multiply.18', 'weight']
    $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$348binary_subscr.24', 't', 'y']
    $358binary_add.29 = n + k                ['$358binary_add.29', 'k', 'n']
    $const360.30 = const(int, 1)             ['$const360.30']
    $362binary_add.31 = $358binary_add.29 + $const360.30 ['$358binary_add.29', '$362binary_add.31', '$const360.30']
    $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>) ['$362binary_add.31', '$364binary_subscr.32', 'x']
    $366binary_multiply.33 = weight * $364binary_subscr.32 ['$364binary_subscr.32', '$366binary_multiply.33', 'weight']
    $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined) ['$348binary_subscr.24', '$366binary_multiply.33', '$368inplace_add.34']
    y[t] = $368inplace_add.34                ['$368inplace_add.34', 't', 'y']
    jump 302                                 []
label 376:
    jump 80                                  []
label 378:
    $const378.0 = const(NoneType, None)      ['$const378.0']
    $380return_value.1 = cast(value=$const378.0) ['$380return_value.1', '$const378.0']
    return $380return_value.1                ['$380return_value.1']

2025-02-17 09:50:52,706 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-02-17 09:50:52,706 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x00000293E4D73FD0>
2025-02-17 09:50:52,706 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-02-17 09:50:52,706 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-02-17 09:50:52,706 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-02-17 09:50:52,706 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-02-17 09:50:52,706 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-02-17 09:50:52,706 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-02-17 09:50:52,706 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-02-17 09:50:52,706 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-02-17 09:50:52,706 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-02-17 09:50:52,706 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,707 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-02-17 09:50:52,707 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-02-17 09:50:52,707 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-02-17 09:50:52,707 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-02-17 09:50:52,707 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-02-17 09:50:52,707 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-02-17 09:50:52,707 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-02-17 09:50:52,707 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-02-17 09:50:52,707 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-02-17 09:50:52,707 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-02-17 09:50:52,707 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-02-17 09:50:52,707 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-02-17 09:50:52,707 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-02-17 09:50:52,707 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-02-17 09:50:52,707 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-02-17 09:50:52,707 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-02-17 09:50:52,707 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-02-17 09:50:52,707 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,707 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-02-17 09:50:52,707 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-02-17 09:50:52,708 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:50:52,708 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 80
2025-02-17 09:50:52,708 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x00000293E4D73FD0>
2025-02-17 09:50:52,708 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-02-17 09:50:52,708 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-02-17 09:50:52,708 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-02-17 09:50:52,708 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-02-17 09:50:52,708 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-02-17 09:50:52,708 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 82
2025-02-17 09:50:52,708 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x00000293E4D73FD0>
2025-02-17 09:50:52,708 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-02-17 09:50:52,708 - numba.core.ssa - DEBUG - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,708 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-02-17 09:50:52,708 - numba.core.ssa - DEBUG - on stmt: n = call $92load_global.5(time_register, func=$92load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,708 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register - n
2025-02-17 09:50:52,708 - numba.core.ssa - DEBUG - on stmt: frac = scale * $106binary_subtract.11
2025-02-17 09:50:52,708 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-02-17 09:50:52,708 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-02-17 09:50:52,708 - numba.core.ssa - DEBUG - on stmt: offset = call $120load_global.16(index_frac, func=$120load_global.16, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,709 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-02-17 09:50:52,709 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-02-17 09:50:52,709 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-02-17 09:50:52,709 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n + $const140.24
2025-02-17 09:50:52,709 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset
2025-02-17 09:50:52,709 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-02-17 09:50:52,709 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,709 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-02-17 09:50:52,709 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,709 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-02-17 09:50:52,709 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-02-17 09:50:52,709 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:50:52,709 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 166
2025-02-17 09:50:52,709 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x00000293E4D73FD0>
2025-02-17 09:50:52,709 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-02-17 09:50:52,709 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-02-17 09:50:52,709 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-02-17 09:50:52,709 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-02-17 09:50:52,709 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-02-17 09:50:52,709 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 168
2025-02-17 09:50:52,709 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x00000293E4D73FD0>
2025-02-17 09:50:52,710 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-02-17 09:50:52,710 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-02-17 09:50:52,710 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset + $178binary_multiply.7
2025-02-17 09:50:52,710 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:50:52,710 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-02-17 09:50:52,710 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset + $194binary_multiply.15
2025-02-17 09:50:52,710 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:50:52,710 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-02-17 09:50:52,710 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-02-17 09:50:52,710 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,710 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n - i
2025-02-17 09:50:52,710 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-02-17 09:50:52,710 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-02-17 09:50:52,710 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:50:52,710 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-02-17 09:50:52,710 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:50:52,710 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 236
2025-02-17 09:50:52,710 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x00000293E4D73FD0>
2025-02-17 09:50:52,710 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac
2025-02-17 09:50:52,711 - numba.core.ssa - DEBUG - on stmt: frac = $240binary_subtract.3
2025-02-17 09:50:52,711 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-02-17 09:50:52,711 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-02-17 09:50:52,711 - numba.core.ssa - DEBUG - on stmt: offset = call $252load_global.7(index_frac, func=$252load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,711 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-02-17 09:50:52,711 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-02-17 09:50:52,711 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n
2025-02-17 09:50:52,711 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-02-17 09:50:52,711 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-02-17 09:50:52,711 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset
2025-02-17 09:50:52,711 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-02-17 09:50:52,711 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,711 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-02-17 09:50:52,711 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,711 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-02-17 09:50:52,711 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-02-17 09:50:52,711 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:50:52,711 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 302
2025-02-17 09:50:52,711 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x00000293E4D73FD0>
2025-02-17 09:50:52,711 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-02-17 09:50:52,712 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-02-17 09:50:52,712 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-02-17 09:50:52,712 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-02-17 09:50:52,712 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-02-17 09:50:52,712 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 304
2025-02-17 09:50:52,712 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x00000293E4D73FD0>
2025-02-17 09:50:52,712 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-02-17 09:50:52,712 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-02-17 09:50:52,712 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset + $314binary_multiply.7
2025-02-17 09:50:52,712 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:50:52,712 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-02-17 09:50:52,712 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset + $330binary_multiply.15
2025-02-17 09:50:52,712 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:50:52,712 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-02-17 09:50:52,712 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-02-17 09:50:52,712 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,712 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n + k
2025-02-17 09:50:52,712 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-02-17 09:50:52,712 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-02-17 09:50:52,712 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-02-17 09:50:52,712 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-02-17 09:50:52,713 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:50:52,713 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-02-17 09:50:52,713 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:50:52,713 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 376
2025-02-17 09:50:52,713 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x00000293E4D73FD0>
2025-02-17 09:50:52,713 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:50:52,713 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 378
2025-02-17 09:50:52,713 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x00000293E4D73FD0>
2025-02-17 09:50:52,713 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-02-17 09:50:52,713 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-02-17 09:50:52,713 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-02-17 09:50:52,716 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$106binary_subtract.11': [(<numba.core.ir.Assign object at 0x00000293E4D61D50>,
                                         82)],
             '$120load_global.16': [(<numba.core.ir.Assign object at 0x00000293E4D62560>,
                                     82)],
             '$136load_global.22': [(<numba.core.ir.Assign object at 0x00000293E4D62EC0>,
                                     82)],
             '$142binary_add.25': [(<numba.core.ir.Assign object at 0x00000293E4D63310>,
                                    82)],
             '$148binary_subtract.28': [(<numba.core.ir.Assign object at 0x00000293E4D636D0>,
                                         82)],
             '$152binary_floor_divide.30': [(<numba.core.ir.Assign object at 0x00000293E4D63970>,
                                             82)],
             '$158load_global.32': [(<numba.core.ir.Assign object at 0x00000293E4D63D60>,
                                     82)],
             '$162call_function.34': [(<numba.core.ir.Assign object at 0x00000293E4D680A0>,
                                       82)],
             '$164get_iter.35': [(<numba.core.ir.Assign object at 0x00000293E4D681C0>,
                                  82)],
             '$166for_iter.2': [(<numba.core.ir.Assign object at 0x00000293E4D61B10>,
                                 166)],
             '$166for_iter.3': [(<numba.core.ir.Assign object at 0x00000293E4D61F30>,
                                 166)],
             '$166for_iter.4': [(<numba.core.ir.Assign object at 0x00000293E4D62470>,
                                 166)],
             '$178binary_multiply.7': [(<numba.core.ir.Assign object at 0x00000293E4D685B0>,
                                        168)],
             '$180binary_add.8': [(<numba.core.ir.Assign object at 0x00000293E4D68730>,
                                   168)],
             '$182binary_subscr.9': [(<numba.core.ir.Assign object at 0x00000293E4D688B0>,
                                      168)],
             '$194binary_multiply.15': [(<numba.core.ir.Assign object at 0x00000293E4D68FD0>,
                                         168)],
             '$196binary_add.16': [(<numba.core.ir.Assign object at 0x00000293E4D69150>,
                                    168)],
             '$198binary_subscr.17': [(<numba.core.ir.Assign object at 0x00000293E4D692D0>,
                                       168)],
             '$200binary_multiply.18': [(<numba.core.ir.Assign object at 0x00000293E4D69450>,
                                         168)],
             '$212binary_subscr.24': [(<numba.core.ir.Assign object at 0x00000293E4D69C30>,
                                       168)],
             '$222binary_subtract.29': [(<numba.core.ir.Assign object at 0x00000293E4D6A230>,
                                         168)],
             '$224binary_subscr.30': [(<numba.core.ir.Assign object at 0x00000293E4D6A3B0>,
                                       168)],
             '$226binary_multiply.31': [(<numba.core.ir.Assign object at 0x00000293E4D6A530>,
                                         168)],
             '$228inplace_add.32': [(<numba.core.ir.Assign object at 0x00000293E4D6A6B0>,
                                     168)],
             '$240binary_subtract.3': [(<numba.core.ir.Assign object at 0x00000293E4D69780>,
                                        236)],
             '$252load_global.7': [(<numba.core.ir.Assign object at 0x00000293E4D6AC20>,
                                    236)],
             '$268load_global.13': [(<numba.core.ir.Assign object at 0x00000293E4D6B580>,
                                     236)],
             '$274binary_subtract.16': [(<numba.core.ir.Assign object at 0x00000293E4D6B970>,
                                         236)],
             '$278binary_subtract.18': [(<numba.core.ir.Assign object at 0x00000293E4D6BC70>,
                                         236)],
             '$284binary_subtract.21': [(<numba.core.ir.Assign object at 0x00000293E4D70070>,
                                         236)],
             '$288binary_floor_divide.23': [(<numba.core.ir.Assign object at 0x00000293E4D70310>,
                                             236)],
             '$294load_global.25': [(<numba.core.ir.Assign object at 0x00000293E4D70700>,
                                     236)],
             '$298call_function.27': [(<numba.core.ir.Assign object at 0x00000293E4D70A00>,
                                       236)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x00000293E4D2D9C0>,
                                  0)],
             '$300get_iter.28': [(<numba.core.ir.Assign object at 0x00000293E4D70B20>,
                                  236)],
             '$302for_iter.2': [(<numba.core.ir.Assign object at 0x00000293E4D6AE60>,
                                 302)],
             '$302for_iter.3': [(<numba.core.ir.Assign object at 0x00000293E4D6B490>,
                                 302)],
             '$302for_iter.4': [(<numba.core.ir.Assign object at 0x00000293E4D6B850>,
                                 302)],
             '$314binary_multiply.7': [(<numba.core.ir.Assign object at 0x00000293E4D71270>,
                                        304)],
             '$316binary_add.8': [(<numba.core.ir.Assign object at 0x00000293E4D713F0>,
                                   304)],
             '$318binary_subscr.9': [(<numba.core.ir.Assign object at 0x00000293E4D71570>,
                                      304)],
             '$330binary_multiply.15': [(<numba.core.ir.Assign object at 0x00000293E4D71C90>,
                                         304)],
             '$332binary_add.16': [(<numba.core.ir.Assign object at 0x00000293E4D71E10>,
                                    304)],
             '$334binary_subscr.17': [(<numba.core.ir.Assign object at 0x00000293E4D71F90>,
                                       304)],
             '$336binary_multiply.18': [(<numba.core.ir.Assign object at 0x00000293E4D72110>,
                                         304)],
             '$348binary_subscr.24': [(<numba.core.ir.Assign object at 0x00000293E4D728F0>,
                                       304)],
             '$358binary_add.29': [(<numba.core.ir.Assign object at 0x00000293E4D72EF0>,
                                    304)],
             '$362binary_add.31': [(<numba.core.ir.Assign object at 0x00000293E4D731F0>,
                                    304)],
             '$364binary_subscr.32': [(<numba.core.ir.Assign object at 0x00000293E4D73370>,
                                       304)],
             '$366binary_multiply.33': [(<numba.core.ir.Assign object at 0x00000293E4D734F0>,
                                         304)],
             '$368inplace_add.34': [(<numba.core.ir.Assign object at 0x00000293E4D73670>,
                                     304)],
             '$380return_value.1': [(<numba.core.ir.Assign object at 0x00000293E4D725F0>,
                                     378)],
             '$44load_attr.13': [(<numba.core.ir.Assign object at 0x00000293E4D2F520>,
                                  0)],
             '$54load_attr.17': [(<numba.core.ir.Assign object at 0x00000293E4D2FBE0>,
                                  0)],
             '$64load_attr.21': [(<numba.core.ir.Assign object at 0x00000293E4D602E0>,
                                  0)],
             '$72load_global.24': [(<numba.core.ir.Assign object at 0x00000293E4D60880>,
                                    0)],
             '$76call_function.26': [(<numba.core.ir.Assign object at 0x00000293E4D60B80>,
                                      0)],
             '$78get_iter.27': [(<numba.core.ir.Assign object at 0x00000293E4D60CA0>,
                                 0)],
             '$80for_iter.1': [(<numba.core.ir.Assign object at 0x00000293E4D2F070>,
                                80)],
             '$80for_iter.2': [(<numba.core.ir.Assign object at 0x00000293E4D2F9D0>,
                                80)],
             '$80for_iter.3': [(<numba.core.ir.Assign object at 0x00000293E4D60160>,
                                80)],
             '$8binary_multiply.3': [(<numba.core.ir.Assign object at 0x00000293E4D2DDB0>,
                                      0)],
             '$92load_global.5': [(<numba.core.ir.Assign object at 0x00000293E4D614E0>,
                                   82)],
             '$const140.24': [(<numba.core.ir.Assign object at 0x00000293E4D63160>,
                               82)],
             '$const276.17': [(<numba.core.ir.Assign object at 0x00000293E4D6BAC0>,
                               236)],
             '$const360.30': [(<numba.core.ir.Assign object at 0x00000293E4D73040>,
                               304)],
             '$const378.0': [(<numba.core.ir.Assign object at 0x00000293E4D71B70>,
                              378)],
             '$const46.14': [(<numba.core.ir.Assign object at 0x00000293E4D2F6A0>,
                              0)],
             '$const56.18': [(<numba.core.ir.Assign object at 0x00000293E4D2FD60>,
                              0)],
             '$const66.22': [(<numba.core.ir.Assign object at 0x00000293E4D60460>,
                              0)],
             '$phi166.1': [(<numba.core.ir.Assign object at 0x00000293E4D61090>,
                            82)],
             '$phi168.2': [(<numba.core.ir.Assign object at 0x00000293E4D61720>,
                            166)],
             '$phi302.1': [(<numba.core.ir.Assign object at 0x00000293E4D68AC0>,
                            236)],
             '$phi304.2': [(<numba.core.ir.Assign object at 0x00000293E4D6ADD0>,
                            302)],
             '$phi80.0': [(<numba.core.ir.Assign object at 0x00000293E4D2DB70>,
                           0)],
             '$phi82.1': [(<numba.core.ir.Assign object at 0x00000293E4D2EB30>,
                           80)],
             'eta': [(<numba.core.ir.Assign object at 0x00000293E4D2EEC0>, 0),
                     (<numba.core.ir.Assign object at 0x00000293E4D62CB0>, 82),
                     (<numba.core.ir.Assign object at 0x00000293E4D6B370>,
                      236)],
             'frac': [(<numba.core.ir.Assign object at 0x00000293E4D2E6E0>, 0),
                      (<numba.core.ir.Assign object at 0x00000293E4D61ED0>, 82),
                      (<numba.core.ir.Assign object at 0x00000293E4D69A20>,
                       236)],
             'i': [(<numba.core.ir.Assign object at 0x00000293E4D62BF0>, 168)],
             'i_max': [(<numba.core.ir.Assign object at 0x00000293E4D63B20>,
                        82)],
             'index_frac': [(<numba.core.ir.Assign object at 0x00000293E4D2E980>,
                             0),
                            (<numba.core.ir.Assign object at 0x00000293E4D62350>,
                             82),
                            (<numba.core.ir.Assign object at 0x00000293E4D6AA10>,
                             236)],
             'index_step': [(<numba.core.ir.Assign object at 0x00000293E4D2DF60>,
                             0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x00000293E4D2CB80>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x00000293E4D2D2A0>,
                             0)],
             'k': [(<numba.core.ir.Assign object at 0x00000293E4D70C40>, 304)],
             'k_max': [(<numba.core.ir.Assign object at 0x00000293E4D704C0>,
                        236)],
             'n': [(<numba.core.ir.Assign object at 0x00000293E4D2E440>, 0),
                   (<numba.core.ir.Assign object at 0x00000293E4D617E0>, 82)],
             'n_orig': [(<numba.core.ir.Assign object at 0x00000293E4D7EEC0>,
                         0)],
             'n_out': [(<numba.core.ir.Assign object at 0x00000293E4D7EF80>,
                        0)],
             'num_table': [(<numba.core.ir.Assign object at 0x00000293E4D2CE20>,
                            0)],
             'nwin': [(<numba.core.ir.Assign object at 0x00000293E4D7EE00>, 0)],
             'offset': [(<numba.core.ir.Assign object at 0x00000293E4D2EC20>,
                         0),
                        (<numba.core.ir.Assign object at 0x00000293E4D62860>,
                         82),
                        (<numba.core.ir.Assign object at 0x00000293E4D6AF20>,
                         236)],
             'scale': [(<numba.core.ir.Assign object at 0x00000293E4D2D720>,
                        0)],
             't': [(<numba.core.ir.Assign object at 0x00000293E4D60EE0>, 82)],
             't_out': [(<numba.core.ir.Assign object at 0x00000293E4D2D5A0>,
                        0)],
             'time_register': [(<numba.core.ir.Assign object at 0x00000293E4D2E1A0>,
                                0),
                               (<numba.core.ir.Assign object at 0x00000293E4D612D0>,
                                82)],
             'weight': [(<numba.core.ir.Assign object at 0x00000293E4D2F160>,
                         0),
                        (<numba.core.ir.Assign object at 0x00000293E4D695D0>,
                         168),
                        (<numba.core.ir.Assign object at 0x00000293E4D72290>,
                         304)],
             'x': [(<numba.core.ir.Assign object at 0x00000293E4D2D4E0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x00000293E4D2D840>, 0)]})
2025-02-17 09:50:52,716 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x00000293E4D2CD30>
2025-02-17 09:50:52,716 - numba.core.ssa - DEBUG - Fix SSA violator on var time_register
2025-02-17 09:50:52,717 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-02-17 09:50:52,717 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CBE0>
2025-02-17 09:50:52,717 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-02-17 09:50:52,717 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-02-17 09:50:52,717 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-02-17 09:50:52,717 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-02-17 09:50:52,717 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-02-17 09:50:52,717 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-02-17 09:50:52,717 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-02-17 09:50:52,717 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-02-17 09:50:52,717 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-02-17 09:50:52,717 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,717 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-02-17 09:50:52,717 - numba.core.ssa - DEBUG - first assign: time_register
2025-02-17 09:50:52,717 - numba.core.ssa - DEBUG - replaced with: time_register = const(float, 0.0)
2025-02-17 09:50:52,717 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-02-17 09:50:52,717 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-02-17 09:50:52,717 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-02-17 09:50:52,717 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-02-17 09:50:52,717 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-02-17 09:50:52,717 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-02-17 09:50:52,718 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-02-17 09:50:52,718 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-02-17 09:50:52,718 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-02-17 09:50:52,718 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-02-17 09:50:52,718 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-02-17 09:50:52,718 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-02-17 09:50:52,718 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-02-17 09:50:52,718 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-02-17 09:50:52,718 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-02-17 09:50:52,718 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-02-17 09:50:52,718 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,718 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-02-17 09:50:52,718 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-02-17 09:50:52,718 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:50:52,718 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-02-17 09:50:52,718 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CBE0>
2025-02-17 09:50:52,718 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-02-17 09:50:52,718 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-02-17 09:50:52,718 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-02-17 09:50:52,718 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-02-17 09:50:52,718 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-02-17 09:50:52,718 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-02-17 09:50:52,718 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CBE0>
2025-02-17 09:50:52,718 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-02-17 09:50:52,719 - numba.core.ssa - DEBUG - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,719 - numba.core.ssa - DEBUG - replaced with: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,719 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-02-17 09:50:52,719 - numba.core.ssa - DEBUG - on stmt: n = call $92load_global.5(time_register, func=$92load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,719 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register - n
2025-02-17 09:50:52,719 - numba.core.ssa - DEBUG - on stmt: frac = scale * $106binary_subtract.11
2025-02-17 09:50:52,719 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-02-17 09:50:52,719 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-02-17 09:50:52,719 - numba.core.ssa - DEBUG - on stmt: offset = call $120load_global.16(index_frac, func=$120load_global.16, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,719 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-02-17 09:50:52,719 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-02-17 09:50:52,719 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-02-17 09:50:52,719 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n + $const140.24
2025-02-17 09:50:52,719 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset
2025-02-17 09:50:52,719 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-02-17 09:50:52,719 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,719 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-02-17 09:50:52,719 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,719 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-02-17 09:50:52,720 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-02-17 09:50:52,720 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:50:52,720 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-02-17 09:50:52,720 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CBE0>
2025-02-17 09:50:52,720 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-02-17 09:50:52,720 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-02-17 09:50:52,720 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-02-17 09:50:52,720 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-02-17 09:50:52,720 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-02-17 09:50:52,720 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-02-17 09:50:52,720 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CBE0>
2025-02-17 09:50:52,720 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-02-17 09:50:52,720 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-02-17 09:50:52,720 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset + $178binary_multiply.7
2025-02-17 09:50:52,720 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:50:52,720 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-02-17 09:50:52,720 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset + $194binary_multiply.15
2025-02-17 09:50:52,720 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:50:52,720 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-02-17 09:50:52,720 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-02-17 09:50:52,720 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,720 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n - i
2025-02-17 09:50:52,721 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-02-17 09:50:52,721 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-02-17 09:50:52,721 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:50:52,721 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-02-17 09:50:52,721 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:50:52,721 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-02-17 09:50:52,721 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CBE0>
2025-02-17 09:50:52,721 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac
2025-02-17 09:50:52,721 - numba.core.ssa - DEBUG - on stmt: frac = $240binary_subtract.3
2025-02-17 09:50:52,721 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-02-17 09:50:52,721 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-02-17 09:50:52,721 - numba.core.ssa - DEBUG - on stmt: offset = call $252load_global.7(index_frac, func=$252load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,721 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-02-17 09:50:52,721 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-02-17 09:50:52,721 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n
2025-02-17 09:50:52,721 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-02-17 09:50:52,721 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-02-17 09:50:52,721 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset
2025-02-17 09:50:52,721 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-02-17 09:50:52,721 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,721 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-02-17 09:50:52,721 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,721 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-02-17 09:50:52,722 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-02-17 09:50:52,722 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:50:52,722 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-02-17 09:50:52,722 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CBE0>
2025-02-17 09:50:52,722 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-02-17 09:50:52,722 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-02-17 09:50:52,722 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-02-17 09:50:52,722 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-02-17 09:50:52,722 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-02-17 09:50:52,722 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-02-17 09:50:52,722 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CBE0>
2025-02-17 09:50:52,722 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-02-17 09:50:52,722 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-02-17 09:50:52,722 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset + $314binary_multiply.7
2025-02-17 09:50:52,722 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:50:52,722 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-02-17 09:50:52,722 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset + $330binary_multiply.15
2025-02-17 09:50:52,722 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:50:52,722 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-02-17 09:50:52,722 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-02-17 09:50:52,722 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,722 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n + k
2025-02-17 09:50:52,722 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-02-17 09:50:52,722 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-02-17 09:50:52,723 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-02-17 09:50:52,723 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-02-17 09:50:52,723 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:50:52,723 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-02-17 09:50:52,723 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:50:52,723 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-02-17 09:50:52,723 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CBE0>
2025-02-17 09:50:52,723 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:50:52,723 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-02-17 09:50:52,723 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CBE0>
2025-02-17 09:50:52,723 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-02-17 09:50:52,723 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-02-17 09:50:52,723 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-02-17 09:50:52,723 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x00000293E4D2D150>],
             82: [<numba.core.ir.Assign object at 0x00000293E4D2D000>]})
2025-02-17 09:50:52,723 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-02-17 09:50:52,723 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CBE0>
2025-02-17 09:50:52,723 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-02-17 09:50:52,723 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-02-17 09:50:52,723 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-02-17 09:50:52,723 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-02-17 09:50:52,724 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-02-17 09:50:52,724 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-02-17 09:50:52,724 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-02-17 09:50:52,724 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-02-17 09:50:52,724 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-02-17 09:50:52,724 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,724 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-02-17 09:50:52,724 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-02-17 09:50:52,724 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-02-17 09:50:52,724 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-02-17 09:50:52,724 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-02-17 09:50:52,724 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-02-17 09:50:52,724 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-02-17 09:50:52,724 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-02-17 09:50:52,724 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-02-17 09:50:52,724 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-02-17 09:50:52,724 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-02-17 09:50:52,724 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-02-17 09:50:52,724 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-02-17 09:50:52,724 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-02-17 09:50:52,724 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-02-17 09:50:52,724 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-02-17 09:50:52,725 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-02-17 09:50:52,725 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,725 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-02-17 09:50:52,725 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-02-17 09:50:52,725 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:50:52,725 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-02-17 09:50:52,725 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CBE0>
2025-02-17 09:50:52,725 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-02-17 09:50:52,725 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-02-17 09:50:52,725 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-02-17 09:50:52,725 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-02-17 09:50:52,725 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-02-17 09:50:52,725 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-02-17 09:50:52,725 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CBE0>
2025-02-17 09:50:52,725 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-02-17 09:50:52,725 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,725 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-02-17 09:50:52,725 - numba.core.ssa - DEBUG - on stmt: n = call $92load_global.5(time_register, func=$92load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,725 - numba.core.ssa - DEBUG - find_def var='time_register' stmt=n = call $92load_global.5(time_register, func=$92load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,725 - numba.core.ssa - DEBUG - replaced with: n = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,725 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register - n
2025-02-17 09:50:52,726 - numba.core.ssa - DEBUG - find_def var='time_register' stmt=$106binary_subtract.11 = time_register - n
2025-02-17 09:50:52,726 - numba.core.ssa - DEBUG - replaced with: $106binary_subtract.11 = time_register.1 - n
2025-02-17 09:50:52,726 - numba.core.ssa - DEBUG - on stmt: frac = scale * $106binary_subtract.11
2025-02-17 09:50:52,726 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-02-17 09:50:52,726 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-02-17 09:50:52,726 - numba.core.ssa - DEBUG - on stmt: offset = call $120load_global.16(index_frac, func=$120load_global.16, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,726 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-02-17 09:50:52,726 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-02-17 09:50:52,726 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-02-17 09:50:52,726 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n + $const140.24
2025-02-17 09:50:52,726 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset
2025-02-17 09:50:52,726 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-02-17 09:50:52,726 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,726 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-02-17 09:50:52,726 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,726 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-02-17 09:50:52,726 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-02-17 09:50:52,726 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:50:52,726 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-02-17 09:50:52,726 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CBE0>
2025-02-17 09:50:52,727 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-02-17 09:50:52,727 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-02-17 09:50:52,727 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-02-17 09:50:52,727 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-02-17 09:50:52,727 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-02-17 09:50:52,727 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-02-17 09:50:52,727 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CBE0>
2025-02-17 09:50:52,727 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-02-17 09:50:52,727 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-02-17 09:50:52,727 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset + $178binary_multiply.7
2025-02-17 09:50:52,727 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:50:52,727 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-02-17 09:50:52,727 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset + $194binary_multiply.15
2025-02-17 09:50:52,727 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:50:52,727 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-02-17 09:50:52,727 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-02-17 09:50:52,727 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,727 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n - i
2025-02-17 09:50:52,727 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-02-17 09:50:52,727 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-02-17 09:50:52,727 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:50:52,728 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-02-17 09:50:52,728 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:50:52,728 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-02-17 09:50:52,728 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CBE0>
2025-02-17 09:50:52,728 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac
2025-02-17 09:50:52,728 - numba.core.ssa - DEBUG - on stmt: frac = $240binary_subtract.3
2025-02-17 09:50:52,728 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-02-17 09:50:52,728 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-02-17 09:50:52,728 - numba.core.ssa - DEBUG - on stmt: offset = call $252load_global.7(index_frac, func=$252load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,728 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-02-17 09:50:52,728 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-02-17 09:50:52,728 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n
2025-02-17 09:50:52,728 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-02-17 09:50:52,728 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-02-17 09:50:52,728 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset
2025-02-17 09:50:52,728 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-02-17 09:50:52,728 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,728 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-02-17 09:50:52,728 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,728 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-02-17 09:50:52,728 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-02-17 09:50:52,729 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:50:52,729 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-02-17 09:50:52,729 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CBE0>
2025-02-17 09:50:52,729 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-02-17 09:50:52,729 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-02-17 09:50:52,729 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-02-17 09:50:52,729 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-02-17 09:50:52,729 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-02-17 09:50:52,729 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-02-17 09:50:52,729 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CBE0>
2025-02-17 09:50:52,729 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-02-17 09:50:52,729 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-02-17 09:50:52,729 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset + $314binary_multiply.7
2025-02-17 09:50:52,729 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:50:52,729 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-02-17 09:50:52,729 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset + $330binary_multiply.15
2025-02-17 09:50:52,729 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:50:52,729 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-02-17 09:50:52,729 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-02-17 09:50:52,729 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,729 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n + k
2025-02-17 09:50:52,729 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-02-17 09:50:52,730 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-02-17 09:50:52,730 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-02-17 09:50:52,730 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-02-17 09:50:52,731 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:50:52,731 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-02-17 09:50:52,731 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:50:52,731 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-02-17 09:50:52,732 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CBE0>
2025-02-17 09:50:52,732 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:50:52,732 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-02-17 09:50:52,732 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CBE0>
2025-02-17 09:50:52,733 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-02-17 09:50:52,733 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-02-17 09:50:52,733 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-02-17 09:50:52,733 - numba.core.ssa - DEBUG - Fix SSA violator on var n
2025-02-17 09:50:52,733 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-02-17 09:50:52,734 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CDC0>
2025-02-17 09:50:52,734 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-02-17 09:50:52,734 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-02-17 09:50:52,734 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-02-17 09:50:52,734 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-02-17 09:50:52,735 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-02-17 09:50:52,735 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-02-17 09:50:52,735 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-02-17 09:50:52,735 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-02-17 09:50:52,736 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-02-17 09:50:52,736 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,736 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-02-17 09:50:52,736 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-02-17 09:50:52,737 - numba.core.ssa - DEBUG - first assign: n
2025-02-17 09:50:52,737 - numba.core.ssa - DEBUG - replaced with: n = const(int, 0)
2025-02-17 09:50:52,737 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-02-17 09:50:52,737 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-02-17 09:50:52,737 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-02-17 09:50:52,738 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-02-17 09:50:52,738 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-02-17 09:50:52,738 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-02-17 09:50:52,738 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-02-17 09:50:52,738 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-02-17 09:50:52,739 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-02-17 09:50:52,739 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-02-17 09:50:52,739 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-02-17 09:50:52,739 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-02-17 09:50:52,739 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-02-17 09:50:52,740 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-02-17 09:50:52,740 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-02-17 09:50:52,740 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,740 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-02-17 09:50:52,741 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-02-17 09:50:52,741 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:50:52,741 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-02-17 09:50:52,741 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CDC0>
2025-02-17 09:50:52,741 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-02-17 09:50:52,742 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-02-17 09:50:52,742 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-02-17 09:50:52,742 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-02-17 09:50:52,742 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-02-17 09:50:52,742 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-02-17 09:50:52,743 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CDC0>
2025-02-17 09:50:52,743 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-02-17 09:50:52,743 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,743 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-02-17 09:50:52,743 - numba.core.ssa - DEBUG - on stmt: n = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,744 - numba.core.ssa - DEBUG - replaced with: n.1 = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,744 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register.1 - n
2025-02-17 09:50:52,744 - numba.core.ssa - DEBUG - on stmt: frac = scale * $106binary_subtract.11
2025-02-17 09:50:52,744 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-02-17 09:50:52,745 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-02-17 09:50:52,745 - numba.core.ssa - DEBUG - on stmt: offset = call $120load_global.16(index_frac, func=$120load_global.16, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,745 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-02-17 09:50:52,745 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-02-17 09:50:52,746 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-02-17 09:50:52,746 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n + $const140.24
2025-02-17 09:50:52,746 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset
2025-02-17 09:50:52,746 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-02-17 09:50:52,746 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,747 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-02-17 09:50:52,747 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,747 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-02-17 09:50:52,747 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-02-17 09:50:52,748 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:50:52,748 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-02-17 09:50:52,748 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CDC0>
2025-02-17 09:50:52,748 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-02-17 09:50:52,748 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-02-17 09:50:52,749 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-02-17 09:50:52,749 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-02-17 09:50:52,749 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-02-17 09:50:52,749 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-02-17 09:50:52,750 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CDC0>
2025-02-17 09:50:52,750 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-02-17 09:50:52,750 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-02-17 09:50:52,750 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset + $178binary_multiply.7
2025-02-17 09:50:52,750 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:50:52,751 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-02-17 09:50:52,751 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset + $194binary_multiply.15
2025-02-17 09:50:52,751 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:50:52,751 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-02-17 09:50:52,751 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-02-17 09:50:52,752 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,752 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n - i
2025-02-17 09:50:52,752 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-02-17 09:50:52,752 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-02-17 09:50:52,752 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:50:52,753 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-02-17 09:50:52,753 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:50:52,753 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-02-17 09:50:52,753 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CDC0>
2025-02-17 09:50:52,753 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac
2025-02-17 09:50:52,753 - numba.core.ssa - DEBUG - on stmt: frac = $240binary_subtract.3
2025-02-17 09:50:52,753 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-02-17 09:50:52,754 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-02-17 09:50:52,754 - numba.core.ssa - DEBUG - on stmt: offset = call $252load_global.7(index_frac, func=$252load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,754 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-02-17 09:50:52,754 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-02-17 09:50:52,754 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n
2025-02-17 09:50:52,754 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-02-17 09:50:52,754 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-02-17 09:50:52,755 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset
2025-02-17 09:50:52,755 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-02-17 09:50:52,755 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,755 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-02-17 09:50:52,755 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,755 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-02-17 09:50:52,756 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-02-17 09:50:52,756 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:50:52,756 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-02-17 09:50:52,756 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CDC0>
2025-02-17 09:50:52,756 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-02-17 09:50:52,756 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-02-17 09:50:52,756 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-02-17 09:50:52,756 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-02-17 09:50:52,757 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-02-17 09:50:52,757 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-02-17 09:50:52,757 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CDC0>
2025-02-17 09:50:52,757 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-02-17 09:50:52,757 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-02-17 09:50:52,757 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset + $314binary_multiply.7
2025-02-17 09:50:52,757 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:50:52,758 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-02-17 09:50:52,758 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset + $330binary_multiply.15
2025-02-17 09:50:52,758 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:50:52,758 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-02-17 09:50:52,758 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-02-17 09:50:52,758 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,758 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n + k
2025-02-17 09:50:52,759 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-02-17 09:50:52,759 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-02-17 09:50:52,759 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-02-17 09:50:52,759 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-02-17 09:50:52,759 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:50:52,761 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-02-17 09:50:52,761 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:50:52,761 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-02-17 09:50:52,761 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CDC0>
2025-02-17 09:50:52,761 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:50:52,761 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-02-17 09:50:52,761 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CDC0>
2025-02-17 09:50:52,761 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-02-17 09:50:52,762 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-02-17 09:50:52,762 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-02-17 09:50:52,762 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x00000293E4D2CF70>],
             82: [<numba.core.ir.Assign object at 0x00000293E4D2D0F0>]})
2025-02-17 09:50:52,762 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-02-17 09:50:52,762 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D73CA0>
2025-02-17 09:50:52,762 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-02-17 09:50:52,762 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-02-17 09:50:52,762 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-02-17 09:50:52,762 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-02-17 09:50:52,762 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-02-17 09:50:52,762 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-02-17 09:50:52,762 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-02-17 09:50:52,762 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-02-17 09:50:52,762 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-02-17 09:50:52,762 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,762 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-02-17 09:50:52,762 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-02-17 09:50:52,763 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-02-17 09:50:52,763 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-02-17 09:50:52,763 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-02-17 09:50:52,763 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-02-17 09:50:52,763 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-02-17 09:50:52,763 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-02-17 09:50:52,763 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-02-17 09:50:52,763 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-02-17 09:50:52,763 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-02-17 09:50:52,763 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-02-17 09:50:52,763 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-02-17 09:50:52,763 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-02-17 09:50:52,763 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-02-17 09:50:52,763 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-02-17 09:50:52,763 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-02-17 09:50:52,763 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,763 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-02-17 09:50:52,763 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-02-17 09:50:52,763 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:50:52,763 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-02-17 09:50:52,763 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D73CA0>
2025-02-17 09:50:52,763 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-02-17 09:50:52,764 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-02-17 09:50:52,764 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-02-17 09:50:52,764 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-02-17 09:50:52,764 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-02-17 09:50:52,764 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-02-17 09:50:52,764 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D73CA0>
2025-02-17 09:50:52,764 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-02-17 09:50:52,764 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,764 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-02-17 09:50:52,764 - numba.core.ssa - DEBUG - on stmt: n.1 = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,764 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register.1 - n
2025-02-17 09:50:52,764 - numba.core.ssa - DEBUG - find_def var='n' stmt=$106binary_subtract.11 = time_register.1 - n
2025-02-17 09:50:52,764 - numba.core.ssa - DEBUG - replaced with: $106binary_subtract.11 = time_register.1 - n.1
2025-02-17 09:50:52,764 - numba.core.ssa - DEBUG - on stmt: frac = scale * $106binary_subtract.11
2025-02-17 09:50:52,764 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-02-17 09:50:52,764 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-02-17 09:50:52,764 - numba.core.ssa - DEBUG - on stmt: offset = call $120load_global.16(index_frac, func=$120load_global.16, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,764 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-02-17 09:50:52,764 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-02-17 09:50:52,765 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-02-17 09:50:52,765 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n + $const140.24
2025-02-17 09:50:52,765 - numba.core.ssa - DEBUG - find_def var='n' stmt=$142binary_add.25 = n + $const140.24
2025-02-17 09:50:52,765 - numba.core.ssa - DEBUG - replaced with: $142binary_add.25 = n.1 + $const140.24
2025-02-17 09:50:52,765 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset
2025-02-17 09:50:52,765 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-02-17 09:50:52,765 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,765 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-02-17 09:50:52,765 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,765 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-02-17 09:50:52,765 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-02-17 09:50:52,765 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:50:52,765 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-02-17 09:50:52,765 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D73CA0>
2025-02-17 09:50:52,765 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-02-17 09:50:52,765 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-02-17 09:50:52,765 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-02-17 09:50:52,765 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-02-17 09:50:52,765 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-02-17 09:50:52,765 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-02-17 09:50:52,766 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D73CA0>
2025-02-17 09:50:52,766 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-02-17 09:50:52,766 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-02-17 09:50:52,766 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset + $178binary_multiply.7
2025-02-17 09:50:52,766 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:50:52,766 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-02-17 09:50:52,766 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset + $194binary_multiply.15
2025-02-17 09:50:52,766 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:50:52,766 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-02-17 09:50:52,766 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-02-17 09:50:52,766 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,766 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n - i
2025-02-17 09:50:52,766 - numba.core.ssa - DEBUG - find_def var='n' stmt=$222binary_subtract.29 = n - i
2025-02-17 09:50:52,766 - numba.core.ssa - DEBUG - find_def_from_top label 168
2025-02-17 09:50:52,766 - numba.core.ssa - DEBUG - idom 166 from label 168
2025-02-17 09:50:52,766 - numba.core.ssa - DEBUG - find_def_from_bottom label 166
2025-02-17 09:50:52,766 - numba.core.ssa - DEBUG - find_def_from_top label 166
2025-02-17 09:50:52,766 - numba.core.ssa - DEBUG - idom 82 from label 166
2025-02-17 09:50:52,766 - numba.core.ssa - DEBUG - find_def_from_bottom label 82
2025-02-17 09:50:52,767 - numba.core.ssa - DEBUG - replaced with: $222binary_subtract.29 = n.1 - i
2025-02-17 09:50:52,767 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-02-17 09:50:52,767 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-02-17 09:50:52,767 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:50:52,767 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-02-17 09:50:52,767 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:50:52,767 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-02-17 09:50:52,767 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D73CA0>
2025-02-17 09:50:52,767 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac
2025-02-17 09:50:52,767 - numba.core.ssa - DEBUG - on stmt: frac = $240binary_subtract.3
2025-02-17 09:50:52,767 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-02-17 09:50:52,767 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-02-17 09:50:52,767 - numba.core.ssa - DEBUG - on stmt: offset = call $252load_global.7(index_frac, func=$252load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,767 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-02-17 09:50:52,767 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-02-17 09:50:52,767 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n
2025-02-17 09:50:52,767 - numba.core.ssa - DEBUG - find_def var='n' stmt=$274binary_subtract.16 = n_orig - n
2025-02-17 09:50:52,767 - numba.core.ssa - DEBUG - find_def_from_top label 236
2025-02-17 09:50:52,767 - numba.core.ssa - DEBUG - idom 166 from label 236
2025-02-17 09:50:52,767 - numba.core.ssa - DEBUG - find_def_from_bottom label 166
2025-02-17 09:50:52,767 - numba.core.ssa - DEBUG - find_def_from_top label 166
2025-02-17 09:50:52,768 - numba.core.ssa - DEBUG - idom 82 from label 166
2025-02-17 09:50:52,768 - numba.core.ssa - DEBUG - find_def_from_bottom label 82
2025-02-17 09:50:52,768 - numba.core.ssa - DEBUG - replaced with: $274binary_subtract.16 = n_orig - n.1
2025-02-17 09:50:52,768 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-02-17 09:50:52,768 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-02-17 09:50:52,768 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset
2025-02-17 09:50:52,768 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-02-17 09:50:52,768 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,768 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-02-17 09:50:52,768 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,768 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-02-17 09:50:52,768 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-02-17 09:50:52,768 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:50:52,768 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-02-17 09:50:52,768 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D73CA0>
2025-02-17 09:50:52,768 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-02-17 09:50:52,768 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-02-17 09:50:52,768 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-02-17 09:50:52,768 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-02-17 09:50:52,768 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-02-17 09:50:52,769 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-02-17 09:50:52,769 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D73CA0>
2025-02-17 09:50:52,769 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-02-17 09:50:52,769 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-02-17 09:50:52,769 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset + $314binary_multiply.7
2025-02-17 09:50:52,769 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:50:52,769 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-02-17 09:50:52,769 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset + $330binary_multiply.15
2025-02-17 09:50:52,769 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:50:52,769 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-02-17 09:50:52,769 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-02-17 09:50:52,769 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,769 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n + k
2025-02-17 09:50:52,769 - numba.core.ssa - DEBUG - find_def var='n' stmt=$358binary_add.29 = n + k
2025-02-17 09:50:52,769 - numba.core.ssa - DEBUG - find_def_from_top label 304
2025-02-17 09:50:52,769 - numba.core.ssa - DEBUG - idom 302 from label 304
2025-02-17 09:50:52,769 - numba.core.ssa - DEBUG - find_def_from_bottom label 302
2025-02-17 09:50:52,769 - numba.core.ssa - DEBUG - find_def_from_top label 302
2025-02-17 09:50:52,769 - numba.core.ssa - DEBUG - idom 236 from label 302
2025-02-17 09:50:52,769 - numba.core.ssa - DEBUG - find_def_from_bottom label 236
2025-02-17 09:50:52,769 - numba.core.ssa - DEBUG - find_def_from_top label 236
2025-02-17 09:50:52,769 - numba.core.ssa - DEBUG - idom 166 from label 236
2025-02-17 09:50:52,770 - numba.core.ssa - DEBUG - find_def_from_bottom label 166
2025-02-17 09:50:52,770 - numba.core.ssa - DEBUG - find_def_from_top label 166
2025-02-17 09:50:52,770 - numba.core.ssa - DEBUG - idom 82 from label 166
2025-02-17 09:50:52,770 - numba.core.ssa - DEBUG - find_def_from_bottom label 82
2025-02-17 09:50:52,770 - numba.core.ssa - DEBUG - replaced with: $358binary_add.29 = n.1 + k
2025-02-17 09:50:52,770 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-02-17 09:50:52,770 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-02-17 09:50:52,770 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-02-17 09:50:52,770 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-02-17 09:50:52,770 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:50:52,770 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-02-17 09:50:52,770 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:50:52,770 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-02-17 09:50:52,770 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D73CA0>
2025-02-17 09:50:52,770 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:50:52,770 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-02-17 09:50:52,770 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D73CA0>
2025-02-17 09:50:52,770 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-02-17 09:50:52,770 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-02-17 09:50:52,770 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-02-17 09:50:52,770 - numba.core.ssa - DEBUG - Fix SSA violator on var frac
2025-02-17 09:50:52,771 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-02-17 09:50:52,771 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CC70>
2025-02-17 09:50:52,771 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-02-17 09:50:52,771 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-02-17 09:50:52,771 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-02-17 09:50:52,771 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-02-17 09:50:52,771 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-02-17 09:50:52,771 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-02-17 09:50:52,771 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-02-17 09:50:52,771 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-02-17 09:50:52,771 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-02-17 09:50:52,771 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,771 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-02-17 09:50:52,771 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-02-17 09:50:52,771 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-02-17 09:50:52,771 - numba.core.ssa - DEBUG - first assign: frac
2025-02-17 09:50:52,771 - numba.core.ssa - DEBUG - replaced with: frac = const(float, 0.0)
2025-02-17 09:50:52,771 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-02-17 09:50:52,771 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-02-17 09:50:52,771 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-02-17 09:50:52,771 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-02-17 09:50:52,771 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-02-17 09:50:52,771 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-02-17 09:50:52,772 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-02-17 09:50:52,772 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-02-17 09:50:52,772 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-02-17 09:50:52,772 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-02-17 09:50:52,772 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-02-17 09:50:52,772 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-02-17 09:50:52,772 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-02-17 09:50:52,772 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-02-17 09:50:52,772 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,772 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-02-17 09:50:52,772 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-02-17 09:50:52,772 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:50:52,772 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-02-17 09:50:52,772 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CC70>
2025-02-17 09:50:52,772 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-02-17 09:50:52,772 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-02-17 09:50:52,772 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-02-17 09:50:52,772 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-02-17 09:50:52,772 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-02-17 09:50:52,772 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-02-17 09:50:52,772 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CC70>
2025-02-17 09:50:52,773 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-02-17 09:50:52,773 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,773 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-02-17 09:50:52,773 - numba.core.ssa - DEBUG - on stmt: n.1 = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,773 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register.1 - n.1
2025-02-17 09:50:52,773 - numba.core.ssa - DEBUG - on stmt: frac = scale * $106binary_subtract.11
2025-02-17 09:50:52,773 - numba.core.ssa - DEBUG - replaced with: frac.1 = scale * $106binary_subtract.11
2025-02-17 09:50:52,773 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-02-17 09:50:52,773 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-02-17 09:50:52,773 - numba.core.ssa - DEBUG - on stmt: offset = call $120load_global.16(index_frac, func=$120load_global.16, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,773 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-02-17 09:50:52,773 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-02-17 09:50:52,773 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-02-17 09:50:52,773 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n.1 + $const140.24
2025-02-17 09:50:52,773 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset
2025-02-17 09:50:52,773 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-02-17 09:50:52,773 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,773 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-02-17 09:50:52,773 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,773 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-02-17 09:50:52,773 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-02-17 09:50:52,774 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:50:52,774 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-02-17 09:50:52,774 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CC70>
2025-02-17 09:50:52,774 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-02-17 09:50:52,774 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-02-17 09:50:52,774 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-02-17 09:50:52,774 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-02-17 09:50:52,774 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-02-17 09:50:52,774 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-02-17 09:50:52,774 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CC70>
2025-02-17 09:50:52,774 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-02-17 09:50:52,774 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-02-17 09:50:52,774 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset + $178binary_multiply.7
2025-02-17 09:50:52,774 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:50:52,774 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-02-17 09:50:52,774 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset + $194binary_multiply.15
2025-02-17 09:50:52,774 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:50:52,774 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-02-17 09:50:52,774 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-02-17 09:50:52,774 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,774 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n.1 - i
2025-02-17 09:50:52,774 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-02-17 09:50:52,774 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-02-17 09:50:52,774 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:50:52,774 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-02-17 09:50:52,775 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:50:52,775 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-02-17 09:50:52,775 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CC70>
2025-02-17 09:50:52,775 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac
2025-02-17 09:50:52,775 - numba.core.ssa - DEBUG - on stmt: frac = $240binary_subtract.3
2025-02-17 09:50:52,775 - numba.core.ssa - DEBUG - replaced with: frac.2 = $240binary_subtract.3
2025-02-17 09:50:52,775 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-02-17 09:50:52,775 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-02-17 09:50:52,775 - numba.core.ssa - DEBUG - on stmt: offset = call $252load_global.7(index_frac, func=$252load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,775 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-02-17 09:50:52,775 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-02-17 09:50:52,775 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n.1
2025-02-17 09:50:52,775 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-02-17 09:50:52,775 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-02-17 09:50:52,775 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset
2025-02-17 09:50:52,775 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-02-17 09:50:52,775 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,775 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-02-17 09:50:52,775 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,775 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-02-17 09:50:52,775 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-02-17 09:50:52,775 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:50:52,775 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-02-17 09:50:52,776 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CC70>
2025-02-17 09:50:52,776 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-02-17 09:50:52,776 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-02-17 09:50:52,776 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-02-17 09:50:52,776 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-02-17 09:50:52,776 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-02-17 09:50:52,776 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-02-17 09:50:52,776 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CC70>
2025-02-17 09:50:52,776 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-02-17 09:50:52,776 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-02-17 09:50:52,776 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset + $314binary_multiply.7
2025-02-17 09:50:52,776 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:50:52,777 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-02-17 09:50:52,777 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset + $330binary_multiply.15
2025-02-17 09:50:52,777 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:50:52,777 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-02-17 09:50:52,777 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-02-17 09:50:52,778 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,778 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n.1 + k
2025-02-17 09:50:52,778 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-02-17 09:50:52,778 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-02-17 09:50:52,778 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-02-17 09:50:52,778 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-02-17 09:50:52,778 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:50:52,778 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-02-17 09:50:52,778 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:50:52,778 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-02-17 09:50:52,778 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CC70>
2025-02-17 09:50:52,779 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:50:52,779 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-02-17 09:50:52,779 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CC70>
2025-02-17 09:50:52,779 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-02-17 09:50:52,779 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-02-17 09:50:52,779 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-02-17 09:50:52,779 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x00000293E4D2D240>],
             82: [<numba.core.ir.Assign object at 0x00000293E4D73F70>],
             236: [<numba.core.ir.Assign object at 0x00000293E4D73F10>]})
2025-02-17 09:50:52,779 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-02-17 09:50:52,780 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D73970>
2025-02-17 09:50:52,780 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-02-17 09:50:52,780 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-02-17 09:50:52,780 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-02-17 09:50:52,780 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-02-17 09:50:52,780 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-02-17 09:50:52,780 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-02-17 09:50:52,780 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-02-17 09:50:52,780 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-02-17 09:50:52,781 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-02-17 09:50:52,781 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,781 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-02-17 09:50:52,781 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-02-17 09:50:52,781 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-02-17 09:50:52,781 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-02-17 09:50:52,781 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-02-17 09:50:52,781 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-02-17 09:50:52,782 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-02-17 09:50:52,782 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-02-17 09:50:52,782 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-02-17 09:50:52,782 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-02-17 09:50:52,782 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-02-17 09:50:52,782 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-02-17 09:50:52,782 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-02-17 09:50:52,782 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-02-17 09:50:52,782 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-02-17 09:50:52,783 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-02-17 09:50:52,783 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-02-17 09:50:52,783 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,783 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-02-17 09:50:52,783 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-02-17 09:50:52,783 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:50:52,783 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-02-17 09:50:52,783 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D73970>
2025-02-17 09:50:52,783 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-02-17 09:50:52,783 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-02-17 09:50:52,783 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-02-17 09:50:52,783 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-02-17 09:50:52,784 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-02-17 09:50:52,784 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-02-17 09:50:52,784 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D73970>
2025-02-17 09:50:52,784 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-02-17 09:50:52,784 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,784 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-02-17 09:50:52,784 - numba.core.ssa - DEBUG - on stmt: n.1 = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,784 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register.1 - n.1
2025-02-17 09:50:52,784 - numba.core.ssa - DEBUG - on stmt: frac.1 = scale * $106binary_subtract.11
2025-02-17 09:50:52,784 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-02-17 09:50:52,784 - numba.core.ssa - DEBUG - find_def var='frac' stmt=index_frac = frac * num_table
2025-02-17 09:50:52,784 - numba.core.ssa - DEBUG - replaced with: index_frac = frac.1 * num_table
2025-02-17 09:50:52,784 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-02-17 09:50:52,784 - numba.core.ssa - DEBUG - on stmt: offset = call $120load_global.16(index_frac, func=$120load_global.16, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,784 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-02-17 09:50:52,784 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-02-17 09:50:52,785 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-02-17 09:50:52,785 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n.1 + $const140.24
2025-02-17 09:50:52,785 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset
2025-02-17 09:50:52,785 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-02-17 09:50:52,785 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,785 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-02-17 09:50:52,785 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,785 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-02-17 09:50:52,785 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-02-17 09:50:52,785 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:50:52,785 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-02-17 09:50:52,785 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D73970>
2025-02-17 09:50:52,785 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-02-17 09:50:52,785 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-02-17 09:50:52,785 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-02-17 09:50:52,785 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-02-17 09:50:52,786 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-02-17 09:50:52,786 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-02-17 09:50:52,786 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D73970>
2025-02-17 09:50:52,786 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-02-17 09:50:52,786 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-02-17 09:50:52,786 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset + $178binary_multiply.7
2025-02-17 09:50:52,786 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:50:52,786 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-02-17 09:50:52,786 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset + $194binary_multiply.15
2025-02-17 09:50:52,786 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:50:52,786 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-02-17 09:50:52,786 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-02-17 09:50:52,786 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,786 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n.1 - i
2025-02-17 09:50:52,786 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-02-17 09:50:52,786 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-02-17 09:50:52,787 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:50:52,787 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-02-17 09:50:52,787 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:50:52,787 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-02-17 09:50:52,787 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D73970>
2025-02-17 09:50:52,787 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac
2025-02-17 09:50:52,787 - numba.core.ssa - DEBUG - find_def var='frac' stmt=$240binary_subtract.3 = scale - frac
2025-02-17 09:50:52,787 - numba.core.ssa - DEBUG - find_def_from_top label 236
2025-02-17 09:50:52,787 - numba.core.ssa - DEBUG - idom 166 from label 236
2025-02-17 09:50:52,787 - numba.core.ssa - DEBUG - find_def_from_bottom label 166
2025-02-17 09:50:52,787 - numba.core.ssa - DEBUG - find_def_from_top label 166
2025-02-17 09:50:52,787 - numba.core.ssa - DEBUG - idom 82 from label 166
2025-02-17 09:50:52,787 - numba.core.ssa - DEBUG - find_def_from_bottom label 82
2025-02-17 09:50:52,787 - numba.core.ssa - DEBUG - replaced with: $240binary_subtract.3 = scale - frac.1
2025-02-17 09:50:52,787 - numba.core.ssa - DEBUG - on stmt: frac.2 = $240binary_subtract.3
2025-02-17 09:50:52,787 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-02-17 09:50:52,787 - numba.core.ssa - DEBUG - find_def var='frac' stmt=index_frac = frac * num_table
2025-02-17 09:50:52,788 - numba.core.ssa - DEBUG - replaced with: index_frac = frac.2 * num_table
2025-02-17 09:50:52,788 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-02-17 09:50:52,788 - numba.core.ssa - DEBUG - on stmt: offset = call $252load_global.7(index_frac, func=$252load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,788 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-02-17 09:50:52,788 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-02-17 09:50:52,788 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n.1
2025-02-17 09:50:52,788 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-02-17 09:50:52,788 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-02-17 09:50:52,788 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset
2025-02-17 09:50:52,788 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-02-17 09:50:52,788 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,788 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-02-17 09:50:52,788 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,788 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-02-17 09:50:52,788 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-02-17 09:50:52,789 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:50:52,789 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-02-17 09:50:52,789 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D73970>
2025-02-17 09:50:52,789 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-02-17 09:50:52,789 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-02-17 09:50:52,789 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-02-17 09:50:52,789 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-02-17 09:50:52,789 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-02-17 09:50:52,789 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-02-17 09:50:52,789 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D73970>
2025-02-17 09:50:52,789 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-02-17 09:50:52,789 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-02-17 09:50:52,789 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset + $314binary_multiply.7
2025-02-17 09:50:52,789 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:50:52,789 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-02-17 09:50:52,789 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset + $330binary_multiply.15
2025-02-17 09:50:52,789 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:50:52,790 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-02-17 09:50:52,790 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-02-17 09:50:52,790 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,790 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n.1 + k
2025-02-17 09:50:52,790 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-02-17 09:50:52,790 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-02-17 09:50:52,790 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-02-17 09:50:52,790 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-02-17 09:50:52,790 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:50:52,790 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-02-17 09:50:52,790 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:50:52,790 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-02-17 09:50:52,790 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D73970>
2025-02-17 09:50:52,790 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:50:52,790 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-02-17 09:50:52,790 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D73970>
2025-02-17 09:50:52,790 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-02-17 09:50:52,791 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-02-17 09:50:52,791 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-02-17 09:50:52,791 - numba.core.ssa - DEBUG - Fix SSA violator on var index_frac
2025-02-17 09:50:52,791 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-02-17 09:50:52,791 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CDF0>
2025-02-17 09:50:52,791 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-02-17 09:50:52,791 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-02-17 09:50:52,791 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-02-17 09:50:52,791 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-02-17 09:50:52,791 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-02-17 09:50:52,791 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-02-17 09:50:52,791 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-02-17 09:50:52,791 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-02-17 09:50:52,791 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-02-17 09:50:52,791 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,791 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-02-17 09:50:52,791 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-02-17 09:50:52,792 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-02-17 09:50:52,792 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-02-17 09:50:52,792 - numba.core.ssa - DEBUG - first assign: index_frac
2025-02-17 09:50:52,792 - numba.core.ssa - DEBUG - replaced with: index_frac = const(float, 0.0)
2025-02-17 09:50:52,792 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-02-17 09:50:52,792 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-02-17 09:50:52,792 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-02-17 09:50:52,792 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-02-17 09:50:52,792 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-02-17 09:50:52,792 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-02-17 09:50:52,792 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-02-17 09:50:52,792 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-02-17 09:50:52,792 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-02-17 09:50:52,792 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-02-17 09:50:52,792 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-02-17 09:50:52,792 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-02-17 09:50:52,792 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-02-17 09:50:52,793 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,793 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-02-17 09:50:52,793 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-02-17 09:50:52,793 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:50:52,793 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-02-17 09:50:52,793 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CDF0>
2025-02-17 09:50:52,793 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-02-17 09:50:52,793 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-02-17 09:50:52,793 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-02-17 09:50:52,793 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-02-17 09:50:52,793 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-02-17 09:50:52,793 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-02-17 09:50:52,793 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CDF0>
2025-02-17 09:50:52,793 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-02-17 09:50:52,793 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,793 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-02-17 09:50:52,793 - numba.core.ssa - DEBUG - on stmt: n.1 = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,793 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register.1 - n.1
2025-02-17 09:50:52,794 - numba.core.ssa - DEBUG - on stmt: frac.1 = scale * $106binary_subtract.11
2025-02-17 09:50:52,794 - numba.core.ssa - DEBUG - on stmt: index_frac = frac.1 * num_table
2025-02-17 09:50:52,794 - numba.core.ssa - DEBUG - replaced with: index_frac.1 = frac.1 * num_table
2025-02-17 09:50:52,794 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-02-17 09:50:52,794 - numba.core.ssa - DEBUG - on stmt: offset = call $120load_global.16(index_frac, func=$120load_global.16, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,794 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-02-17 09:50:52,794 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-02-17 09:50:52,794 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-02-17 09:50:52,794 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n.1 + $const140.24
2025-02-17 09:50:52,794 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset
2025-02-17 09:50:52,794 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-02-17 09:50:52,794 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,794 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-02-17 09:50:52,794 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,795 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-02-17 09:50:52,795 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-02-17 09:50:52,795 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:50:52,795 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-02-17 09:50:52,795 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CDF0>
2025-02-17 09:50:52,795 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-02-17 09:50:52,795 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-02-17 09:50:52,795 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-02-17 09:50:52,795 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-02-17 09:50:52,795 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-02-17 09:50:52,795 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-02-17 09:50:52,795 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CDF0>
2025-02-17 09:50:52,795 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-02-17 09:50:52,795 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-02-17 09:50:52,795 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset + $178binary_multiply.7
2025-02-17 09:50:52,795 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:50:52,795 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-02-17 09:50:52,796 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset + $194binary_multiply.15
2025-02-17 09:50:52,796 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:50:52,796 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-02-17 09:50:52,796 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-02-17 09:50:52,796 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,796 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n.1 - i
2025-02-17 09:50:52,796 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-02-17 09:50:52,796 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-02-17 09:50:52,796 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:50:52,796 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-02-17 09:50:52,796 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:50:52,796 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-02-17 09:50:52,796 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CDF0>
2025-02-17 09:50:52,796 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac.1
2025-02-17 09:50:52,796 - numba.core.ssa - DEBUG - on stmt: frac.2 = $240binary_subtract.3
2025-02-17 09:50:52,796 - numba.core.ssa - DEBUG - on stmt: index_frac = frac.2 * num_table
2025-02-17 09:50:52,796 - numba.core.ssa - DEBUG - replaced with: index_frac.2 = frac.2 * num_table
2025-02-17 09:50:52,797 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-02-17 09:50:52,797 - numba.core.ssa - DEBUG - on stmt: offset = call $252load_global.7(index_frac, func=$252load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,797 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-02-17 09:50:52,797 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-02-17 09:50:52,797 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n.1
2025-02-17 09:50:52,797 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-02-17 09:50:52,797 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-02-17 09:50:52,797 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset
2025-02-17 09:50:52,797 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-02-17 09:50:52,797 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,797 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-02-17 09:50:52,797 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,797 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-02-17 09:50:52,797 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-02-17 09:50:52,797 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:50:52,797 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-02-17 09:50:52,798 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CDF0>
2025-02-17 09:50:52,798 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-02-17 09:50:52,798 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-02-17 09:50:52,798 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-02-17 09:50:52,798 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-02-17 09:50:52,798 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-02-17 09:50:52,798 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-02-17 09:50:52,798 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CDF0>
2025-02-17 09:50:52,798 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-02-17 09:50:52,798 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-02-17 09:50:52,798 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset + $314binary_multiply.7
2025-02-17 09:50:52,798 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:50:52,798 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-02-17 09:50:52,798 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset + $330binary_multiply.15
2025-02-17 09:50:52,798 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:50:52,798 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-02-17 09:50:52,798 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-02-17 09:50:52,799 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,799 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n.1 + k
2025-02-17 09:50:52,799 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-02-17 09:50:52,799 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-02-17 09:50:52,799 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-02-17 09:50:52,799 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-02-17 09:50:52,799 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:50:52,799 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-02-17 09:50:52,799 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:50:52,799 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-02-17 09:50:52,799 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CDF0>
2025-02-17 09:50:52,799 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:50:52,799 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-02-17 09:50:52,799 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CDF0>
2025-02-17 09:50:52,799 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-02-17 09:50:52,799 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-02-17 09:50:52,799 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-02-17 09:50:52,800 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x00000293E4D2C640>],
             82: [<numba.core.ir.Assign object at 0x00000293E4D73910>],
             236: [<numba.core.ir.Assign object at 0x00000293E4D7D960>]})
2025-02-17 09:50:52,800 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-02-17 09:50:52,800 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D73EB0>
2025-02-17 09:50:52,800 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-02-17 09:50:52,800 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-02-17 09:50:52,800 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-02-17 09:50:52,800 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-02-17 09:50:52,800 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-02-17 09:50:52,800 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-02-17 09:50:52,800 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-02-17 09:50:52,800 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-02-17 09:50:52,800 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-02-17 09:50:52,800 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,800 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-02-17 09:50:52,801 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-02-17 09:50:52,801 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-02-17 09:50:52,801 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-02-17 09:50:52,801 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-02-17 09:50:52,801 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-02-17 09:50:52,801 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-02-17 09:50:52,801 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-02-17 09:50:52,801 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-02-17 09:50:52,801 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-02-17 09:50:52,801 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-02-17 09:50:52,801 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-02-17 09:50:52,801 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-02-17 09:50:52,801 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-02-17 09:50:52,801 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-02-17 09:50:52,801 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-02-17 09:50:52,801 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-02-17 09:50:52,801 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,802 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-02-17 09:50:52,802 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-02-17 09:50:52,802 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:50:52,802 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-02-17 09:50:52,802 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D73EB0>
2025-02-17 09:50:52,802 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-02-17 09:50:52,802 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-02-17 09:50:52,802 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-02-17 09:50:52,802 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-02-17 09:50:52,802 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-02-17 09:50:52,802 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-02-17 09:50:52,802 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D73EB0>
2025-02-17 09:50:52,802 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-02-17 09:50:52,802 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,802 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-02-17 09:50:52,802 - numba.core.ssa - DEBUG - on stmt: n.1 = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,803 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register.1 - n.1
2025-02-17 09:50:52,803 - numba.core.ssa - DEBUG - on stmt: frac.1 = scale * $106binary_subtract.11
2025-02-17 09:50:52,803 - numba.core.ssa - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-02-17 09:50:52,803 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-02-17 09:50:52,803 - numba.core.ssa - DEBUG - on stmt: offset = call $120load_global.16(index_frac, func=$120load_global.16, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,803 - numba.core.ssa - DEBUG - find_def var='index_frac' stmt=offset = call $120load_global.16(index_frac, func=$120load_global.16, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,803 - numba.core.ssa - DEBUG - replaced with: offset = call $120load_global.16(index_frac.1, func=$120load_global.16, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,803 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-02-17 09:50:52,803 - numba.core.ssa - DEBUG - find_def var='index_frac' stmt=eta = index_frac - offset
2025-02-17 09:50:52,803 - numba.core.ssa - DEBUG - replaced with: eta = index_frac.1 - offset
2025-02-17 09:50:52,803 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-02-17 09:50:52,803 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-02-17 09:50:52,803 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n.1 + $const140.24
2025-02-17 09:50:52,803 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset
2025-02-17 09:50:52,803 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-02-17 09:50:52,803 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,804 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-02-17 09:50:52,804 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,804 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-02-17 09:50:52,804 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-02-17 09:50:52,804 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:50:52,804 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-02-17 09:50:52,804 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D73EB0>
2025-02-17 09:50:52,804 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-02-17 09:50:52,804 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-02-17 09:50:52,804 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-02-17 09:50:52,804 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-02-17 09:50:52,804 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-02-17 09:50:52,804 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-02-17 09:50:52,804 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D73EB0>
2025-02-17 09:50:52,804 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-02-17 09:50:52,804 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-02-17 09:50:52,804 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset + $178binary_multiply.7
2025-02-17 09:50:52,804 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:50:52,805 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-02-17 09:50:52,805 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset + $194binary_multiply.15
2025-02-17 09:50:52,805 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:50:52,805 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-02-17 09:50:52,805 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-02-17 09:50:52,805 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,805 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n.1 - i
2025-02-17 09:50:52,805 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-02-17 09:50:52,805 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-02-17 09:50:52,805 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:50:52,805 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-02-17 09:50:52,805 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:50:52,805 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-02-17 09:50:52,805 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D73EB0>
2025-02-17 09:50:52,805 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac.1
2025-02-17 09:50:52,805 - numba.core.ssa - DEBUG - on stmt: frac.2 = $240binary_subtract.3
2025-02-17 09:50:52,805 - numba.core.ssa - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-02-17 09:50:52,805 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-02-17 09:50:52,805 - numba.core.ssa - DEBUG - on stmt: offset = call $252load_global.7(index_frac, func=$252load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,806 - numba.core.ssa - DEBUG - find_def var='index_frac' stmt=offset = call $252load_global.7(index_frac, func=$252load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,806 - numba.core.ssa - DEBUG - replaced with: offset = call $252load_global.7(index_frac.2, func=$252load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,806 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-02-17 09:50:52,806 - numba.core.ssa - DEBUG - find_def var='index_frac' stmt=eta = index_frac - offset
2025-02-17 09:50:52,806 - numba.core.ssa - DEBUG - replaced with: eta = index_frac.2 - offset
2025-02-17 09:50:52,806 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-02-17 09:50:52,806 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n.1
2025-02-17 09:50:52,806 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-02-17 09:50:52,806 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-02-17 09:50:52,806 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset
2025-02-17 09:50:52,806 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-02-17 09:50:52,806 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,806 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-02-17 09:50:52,806 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,806 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-02-17 09:50:52,806 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-02-17 09:50:52,806 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:50:52,806 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-02-17 09:50:52,806 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D73EB0>
2025-02-17 09:50:52,806 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-02-17 09:50:52,806 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-02-17 09:50:52,807 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-02-17 09:50:52,807 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-02-17 09:50:52,807 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-02-17 09:50:52,807 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-02-17 09:50:52,807 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D73EB0>
2025-02-17 09:50:52,807 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-02-17 09:50:52,807 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-02-17 09:50:52,807 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset + $314binary_multiply.7
2025-02-17 09:50:52,807 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:50:52,807 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-02-17 09:50:52,807 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset + $330binary_multiply.15
2025-02-17 09:50:52,807 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:50:52,807 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-02-17 09:50:52,807 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-02-17 09:50:52,807 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,807 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n.1 + k
2025-02-17 09:50:52,807 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-02-17 09:50:52,807 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-02-17 09:50:52,807 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-02-17 09:50:52,807 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-02-17 09:50:52,807 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:50:52,807 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-02-17 09:50:52,807 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:50:52,807 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-02-17 09:50:52,808 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D73EB0>
2025-02-17 09:50:52,808 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:50:52,808 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-02-17 09:50:52,808 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D73EB0>
2025-02-17 09:50:52,808 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-02-17 09:50:52,808 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-02-17 09:50:52,808 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-02-17 09:50:52,808 - numba.core.ssa - DEBUG - Fix SSA violator on var offset
2025-02-17 09:50:52,808 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-02-17 09:50:52,808 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CA30>
2025-02-17 09:50:52,808 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-02-17 09:50:52,808 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-02-17 09:50:52,808 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-02-17 09:50:52,808 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-02-17 09:50:52,808 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-02-17 09:50:52,808 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-02-17 09:50:52,808 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-02-17 09:50:52,808 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-02-17 09:50:52,808 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-02-17 09:50:52,808 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,808 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-02-17 09:50:52,808 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-02-17 09:50:52,808 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-02-17 09:50:52,808 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-02-17 09:50:52,808 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-02-17 09:50:52,809 - numba.core.ssa - DEBUG - first assign: offset
2025-02-17 09:50:52,809 - numba.core.ssa - DEBUG - replaced with: offset = const(int, 0)
2025-02-17 09:50:52,809 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-02-17 09:50:52,809 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-02-17 09:50:52,809 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-02-17 09:50:52,809 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-02-17 09:50:52,809 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-02-17 09:50:52,809 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-02-17 09:50:52,809 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-02-17 09:50:52,809 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-02-17 09:50:52,809 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-02-17 09:50:52,809 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-02-17 09:50:52,809 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-02-17 09:50:52,809 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-02-17 09:50:52,809 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,809 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-02-17 09:50:52,809 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-02-17 09:50:52,809 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:50:52,809 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-02-17 09:50:52,809 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CA30>
2025-02-17 09:50:52,809 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-02-17 09:50:52,809 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-02-17 09:50:52,809 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-02-17 09:50:52,809 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-02-17 09:50:52,810 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-02-17 09:50:52,810 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-02-17 09:50:52,810 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CA30>
2025-02-17 09:50:52,810 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-02-17 09:50:52,810 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,810 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-02-17 09:50:52,810 - numba.core.ssa - DEBUG - on stmt: n.1 = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,810 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register.1 - n.1
2025-02-17 09:50:52,810 - numba.core.ssa - DEBUG - on stmt: frac.1 = scale * $106binary_subtract.11
2025-02-17 09:50:52,810 - numba.core.ssa - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-02-17 09:50:52,810 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-02-17 09:50:52,810 - numba.core.ssa - DEBUG - on stmt: offset = call $120load_global.16(index_frac.1, func=$120load_global.16, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,810 - numba.core.ssa - DEBUG - replaced with: offset.1 = call $120load_global.16(index_frac.1, func=$120load_global.16, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,810 - numba.core.ssa - DEBUG - on stmt: eta = index_frac.1 - offset
2025-02-17 09:50:52,810 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-02-17 09:50:52,810 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-02-17 09:50:52,810 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n.1 + $const140.24
2025-02-17 09:50:52,810 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset
2025-02-17 09:50:52,810 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-02-17 09:50:52,810 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,810 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-02-17 09:50:52,810 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,810 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-02-17 09:50:52,811 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-02-17 09:50:52,811 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:50:52,811 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-02-17 09:50:52,811 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CA30>
2025-02-17 09:50:52,811 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-02-17 09:50:52,811 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-02-17 09:50:52,811 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-02-17 09:50:52,811 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-02-17 09:50:52,811 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-02-17 09:50:52,811 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-02-17 09:50:52,811 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CA30>
2025-02-17 09:50:52,811 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-02-17 09:50:52,811 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-02-17 09:50:52,811 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset + $178binary_multiply.7
2025-02-17 09:50:52,811 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:50:52,811 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-02-17 09:50:52,811 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset + $194binary_multiply.15
2025-02-17 09:50:52,811 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:50:52,811 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-02-17 09:50:52,811 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-02-17 09:50:52,811 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,811 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n.1 - i
2025-02-17 09:50:52,811 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-02-17 09:50:52,811 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-02-17 09:50:52,812 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:50:52,812 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-02-17 09:50:52,812 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:50:52,812 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-02-17 09:50:52,812 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CA30>
2025-02-17 09:50:52,812 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac.1
2025-02-17 09:50:52,812 - numba.core.ssa - DEBUG - on stmt: frac.2 = $240binary_subtract.3
2025-02-17 09:50:52,812 - numba.core.ssa - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-02-17 09:50:52,812 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-02-17 09:50:52,812 - numba.core.ssa - DEBUG - on stmt: offset = call $252load_global.7(index_frac.2, func=$252load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,812 - numba.core.ssa - DEBUG - replaced with: offset.2 = call $252load_global.7(index_frac.2, func=$252load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,812 - numba.core.ssa - DEBUG - on stmt: eta = index_frac.2 - offset
2025-02-17 09:50:52,812 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-02-17 09:50:52,812 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n.1
2025-02-17 09:50:52,812 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-02-17 09:50:52,812 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-02-17 09:50:52,812 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset
2025-02-17 09:50:52,813 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-02-17 09:50:52,813 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,813 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-02-17 09:50:52,813 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,813 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-02-17 09:50:52,813 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-02-17 09:50:52,813 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:50:52,813 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-02-17 09:50:52,813 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CA30>
2025-02-17 09:50:52,813 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-02-17 09:50:52,813 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-02-17 09:50:52,813 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-02-17 09:50:52,813 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-02-17 09:50:52,813 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-02-17 09:50:52,813 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-02-17 09:50:52,813 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CA30>
2025-02-17 09:50:52,813 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-02-17 09:50:52,813 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-02-17 09:50:52,813 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset + $314binary_multiply.7
2025-02-17 09:50:52,813 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:50:52,813 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-02-17 09:50:52,814 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset + $330binary_multiply.15
2025-02-17 09:50:52,814 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:50:52,814 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-02-17 09:50:52,814 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-02-17 09:50:52,814 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,815 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n.1 + k
2025-02-17 09:50:52,815 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-02-17 09:50:52,815 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-02-17 09:50:52,815 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-02-17 09:50:52,815 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-02-17 09:50:52,815 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:50:52,816 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-02-17 09:50:52,816 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:50:52,816 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-02-17 09:50:52,816 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CA30>
2025-02-17 09:50:52,816 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:50:52,817 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-02-17 09:50:52,817 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CA30>
2025-02-17 09:50:52,817 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-02-17 09:50:52,817 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-02-17 09:50:52,817 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-02-17 09:50:52,818 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x00000293E4D73BE0>],
             82: [<numba.core.ir.Assign object at 0x00000293E4D7E020>],
             236: [<numba.core.ir.Assign object at 0x00000293E4D7D8A0>]})
2025-02-17 09:50:52,818 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-02-17 09:50:52,818 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CC70>
2025-02-17 09:50:52,818 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-02-17 09:50:52,818 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-02-17 09:50:52,819 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-02-17 09:50:52,819 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-02-17 09:50:52,819 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-02-17 09:50:52,819 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-02-17 09:50:52,819 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-02-17 09:50:52,819 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-02-17 09:50:52,820 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-02-17 09:50:52,820 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,820 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-02-17 09:50:52,820 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-02-17 09:50:52,820 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-02-17 09:50:52,821 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-02-17 09:50:52,821 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-02-17 09:50:52,821 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-02-17 09:50:52,821 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-02-17 09:50:52,821 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-02-17 09:50:52,822 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-02-17 09:50:52,822 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-02-17 09:50:52,822 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-02-17 09:50:52,822 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-02-17 09:50:52,822 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-02-17 09:50:52,823 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-02-17 09:50:52,823 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-02-17 09:50:52,823 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-02-17 09:50:52,823 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-02-17 09:50:52,823 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,824 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-02-17 09:50:52,824 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-02-17 09:50:52,824 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:50:52,824 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-02-17 09:50:52,824 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CC70>
2025-02-17 09:50:52,824 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-02-17 09:50:52,825 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-02-17 09:50:52,825 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-02-17 09:50:52,825 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-02-17 09:50:52,825 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-02-17 09:50:52,825 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-02-17 09:50:52,826 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CC70>
2025-02-17 09:50:52,826 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-02-17 09:50:52,826 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,826 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-02-17 09:50:52,826 - numba.core.ssa - DEBUG - on stmt: n.1 = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,827 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register.1 - n.1
2025-02-17 09:50:52,827 - numba.core.ssa - DEBUG - on stmt: frac.1 = scale * $106binary_subtract.11
2025-02-17 09:50:52,827 - numba.core.ssa - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-02-17 09:50:52,827 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-02-17 09:50:52,827 - numba.core.ssa - DEBUG - on stmt: offset.1 = call $120load_global.16(index_frac.1, func=$120load_global.16, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,828 - numba.core.ssa - DEBUG - on stmt: eta = index_frac.1 - offset
2025-02-17 09:50:52,828 - numba.core.ssa - DEBUG - find_def var='offset' stmt=eta = index_frac.1 - offset
2025-02-17 09:50:52,828 - numba.core.ssa - DEBUG - replaced with: eta = index_frac.1 - offset.1
2025-02-17 09:50:52,828 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-02-17 09:50:52,829 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-02-17 09:50:52,829 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n.1 + $const140.24
2025-02-17 09:50:52,829 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset
2025-02-17 09:50:52,829 - numba.core.ssa - DEBUG - find_def var='offset' stmt=$148binary_subtract.28 = nwin - offset
2025-02-17 09:50:52,829 - numba.core.ssa - DEBUG - replaced with: $148binary_subtract.28 = nwin - offset.1
2025-02-17 09:50:52,830 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-02-17 09:50:52,830 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,830 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-02-17 09:50:52,830 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,831 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-02-17 09:50:52,831 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-02-17 09:50:52,831 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:50:52,831 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-02-17 09:50:52,831 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CC70>
2025-02-17 09:50:52,832 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-02-17 09:50:52,832 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-02-17 09:50:52,832 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-02-17 09:50:52,832 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-02-17 09:50:52,832 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-02-17 09:50:52,833 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-02-17 09:50:52,833 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CC70>
2025-02-17 09:50:52,833 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-02-17 09:50:52,833 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-02-17 09:50:52,833 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset + $178binary_multiply.7
2025-02-17 09:50:52,833 - numba.core.ssa - DEBUG - find_def var='offset' stmt=$180binary_add.8 = offset + $178binary_multiply.7
2025-02-17 09:50:52,834 - numba.core.ssa - DEBUG - find_def_from_top label 168
2025-02-17 09:50:52,834 - numba.core.ssa - DEBUG - idom 166 from label 168
2025-02-17 09:50:52,834 - numba.core.ssa - DEBUG - find_def_from_bottom label 166
2025-02-17 09:50:52,834 - numba.core.ssa - DEBUG - find_def_from_top label 166
2025-02-17 09:50:52,834 - numba.core.ssa - DEBUG - idom 82 from label 166
2025-02-17 09:50:52,834 - numba.core.ssa - DEBUG - find_def_from_bottom label 82
2025-02-17 09:50:52,834 - numba.core.ssa - DEBUG - replaced with: $180binary_add.8 = offset.1 + $178binary_multiply.7
2025-02-17 09:50:52,835 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:50:52,835 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-02-17 09:50:52,835 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset + $194binary_multiply.15
2025-02-17 09:50:52,835 - numba.core.ssa - DEBUG - find_def var='offset' stmt=$196binary_add.16 = offset + $194binary_multiply.15
2025-02-17 09:50:52,835 - numba.core.ssa - DEBUG - find_def_from_top label 168
2025-02-17 09:50:52,835 - numba.core.ssa - DEBUG - idom 166 from label 168
2025-02-17 09:50:52,835 - numba.core.ssa - DEBUG - find_def_from_bottom label 166
2025-02-17 09:50:52,835 - numba.core.ssa - DEBUG - find_def_from_top label 166
2025-02-17 09:50:52,836 - numba.core.ssa - DEBUG - idom 82 from label 166
2025-02-17 09:50:52,836 - numba.core.ssa - DEBUG - find_def_from_bottom label 82
2025-02-17 09:50:52,836 - numba.core.ssa - DEBUG - replaced with: $196binary_add.16 = offset.1 + $194binary_multiply.15
2025-02-17 09:50:52,836 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:50:52,836 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-02-17 09:50:52,836 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-02-17 09:50:52,836 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,836 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n.1 - i
2025-02-17 09:50:52,836 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-02-17 09:50:52,836 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-02-17 09:50:52,836 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:50:52,836 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-02-17 09:50:52,836 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:50:52,836 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-02-17 09:50:52,837 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CC70>
2025-02-17 09:50:52,837 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac.1
2025-02-17 09:50:52,837 - numba.core.ssa - DEBUG - on stmt: frac.2 = $240binary_subtract.3
2025-02-17 09:50:52,837 - numba.core.ssa - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-02-17 09:50:52,837 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-02-17 09:50:52,837 - numba.core.ssa - DEBUG - on stmt: offset.2 = call $252load_global.7(index_frac.2, func=$252load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,837 - numba.core.ssa - DEBUG - on stmt: eta = index_frac.2 - offset
2025-02-17 09:50:52,838 - numba.core.ssa - DEBUG - find_def var='offset' stmt=eta = index_frac.2 - offset
2025-02-17 09:50:52,838 - numba.core.ssa - DEBUG - replaced with: eta = index_frac.2 - offset.2
2025-02-17 09:50:52,838 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-02-17 09:50:52,838 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n.1
2025-02-17 09:50:52,838 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-02-17 09:50:52,838 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-02-17 09:50:52,838 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset
2025-02-17 09:50:52,839 - numba.core.ssa - DEBUG - find_def var='offset' stmt=$284binary_subtract.21 = nwin - offset
2025-02-17 09:50:52,839 - numba.core.ssa - DEBUG - replaced with: $284binary_subtract.21 = nwin - offset.2
2025-02-17 09:50:52,839 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-02-17 09:50:52,839 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,839 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-02-17 09:50:52,839 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,839 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-02-17 09:50:52,840 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-02-17 09:50:52,840 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:50:52,840 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-02-17 09:50:52,840 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CC70>
2025-02-17 09:50:52,840 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-02-17 09:50:52,840 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-02-17 09:50:52,840 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-02-17 09:50:52,840 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-02-17 09:50:52,841 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-02-17 09:50:52,841 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-02-17 09:50:52,841 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CC70>
2025-02-17 09:50:52,841 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-02-17 09:50:52,841 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-02-17 09:50:52,841 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset + $314binary_multiply.7
2025-02-17 09:50:52,841 - numba.core.ssa - DEBUG - find_def var='offset' stmt=$316binary_add.8 = offset + $314binary_multiply.7
2025-02-17 09:50:52,842 - numba.core.ssa - DEBUG - find_def_from_top label 304
2025-02-17 09:50:52,842 - numba.core.ssa - DEBUG - idom 302 from label 304
2025-02-17 09:50:52,842 - numba.core.ssa - DEBUG - find_def_from_bottom label 302
2025-02-17 09:50:52,842 - numba.core.ssa - DEBUG - find_def_from_top label 302
2025-02-17 09:50:52,842 - numba.core.ssa - DEBUG - idom 236 from label 302
2025-02-17 09:50:52,842 - numba.core.ssa - DEBUG - find_def_from_bottom label 236
2025-02-17 09:50:52,842 - numba.core.ssa - DEBUG - replaced with: $316binary_add.8 = offset.2 + $314binary_multiply.7
2025-02-17 09:50:52,842 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:50:52,843 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-02-17 09:50:52,843 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset + $330binary_multiply.15
2025-02-17 09:50:52,843 - numba.core.ssa - DEBUG - find_def var='offset' stmt=$332binary_add.16 = offset + $330binary_multiply.15
2025-02-17 09:50:52,843 - numba.core.ssa - DEBUG - find_def_from_top label 304
2025-02-17 09:50:52,843 - numba.core.ssa - DEBUG - idom 302 from label 304
2025-02-17 09:50:52,843 - numba.core.ssa - DEBUG - find_def_from_bottom label 302
2025-02-17 09:50:52,843 - numba.core.ssa - DEBUG - find_def_from_top label 302
2025-02-17 09:50:52,843 - numba.core.ssa - DEBUG - idom 236 from label 302
2025-02-17 09:50:52,843 - numba.core.ssa - DEBUG - find_def_from_bottom label 236
2025-02-17 09:50:52,843 - numba.core.ssa - DEBUG - replaced with: $332binary_add.16 = offset.2 + $330binary_multiply.15
2025-02-17 09:50:52,844 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:50:52,844 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-02-17 09:50:52,844 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-02-17 09:50:52,844 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,844 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n.1 + k
2025-02-17 09:50:52,844 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-02-17 09:50:52,844 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-02-17 09:50:52,844 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-02-17 09:50:52,844 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-02-17 09:50:52,844 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:50:52,844 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-02-17 09:50:52,844 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:50:52,844 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-02-17 09:50:52,845 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CC70>
2025-02-17 09:50:52,845 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:50:52,845 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-02-17 09:50:52,845 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CC70>
2025-02-17 09:50:52,845 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-02-17 09:50:52,845 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-02-17 09:50:52,845 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-02-17 09:50:52,845 - numba.core.ssa - DEBUG - Fix SSA violator on var eta
2025-02-17 09:50:52,845 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-02-17 09:50:52,845 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D73D90>
2025-02-17 09:50:52,845 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-02-17 09:50:52,845 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-02-17 09:50:52,845 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-02-17 09:50:52,845 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-02-17 09:50:52,846 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-02-17 09:50:52,846 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-02-17 09:50:52,846 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-02-17 09:50:52,846 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-02-17 09:50:52,846 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-02-17 09:50:52,846 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,846 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-02-17 09:50:52,846 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-02-17 09:50:52,846 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-02-17 09:50:52,846 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-02-17 09:50:52,846 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-02-17 09:50:52,846 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-02-17 09:50:52,846 - numba.core.ssa - DEBUG - first assign: eta
2025-02-17 09:50:52,846 - numba.core.ssa - DEBUG - replaced with: eta = const(float, 0.0)
2025-02-17 09:50:52,847 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-02-17 09:50:52,847 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-02-17 09:50:52,847 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-02-17 09:50:52,847 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-02-17 09:50:52,847 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-02-17 09:50:52,847 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-02-17 09:50:52,847 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-02-17 09:50:52,847 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-02-17 09:50:52,847 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-02-17 09:50:52,847 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-02-17 09:50:52,847 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-02-17 09:50:52,847 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,847 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-02-17 09:50:52,847 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-02-17 09:50:52,848 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:50:52,848 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-02-17 09:50:52,848 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D73D90>
2025-02-17 09:50:52,848 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-02-17 09:50:52,848 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-02-17 09:50:52,848 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-02-17 09:50:52,848 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-02-17 09:50:52,848 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-02-17 09:50:52,848 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-02-17 09:50:52,848 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D73D90>
2025-02-17 09:50:52,848 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-02-17 09:50:52,848 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,848 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-02-17 09:50:52,848 - numba.core.ssa - DEBUG - on stmt: n.1 = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,849 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register.1 - n.1
2025-02-17 09:50:52,849 - numba.core.ssa - DEBUG - on stmt: frac.1 = scale * $106binary_subtract.11
2025-02-17 09:50:52,849 - numba.core.ssa - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-02-17 09:50:52,849 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-02-17 09:50:52,849 - numba.core.ssa - DEBUG - on stmt: offset.1 = call $120load_global.16(index_frac.1, func=$120load_global.16, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,849 - numba.core.ssa - DEBUG - on stmt: eta = index_frac.1 - offset.1
2025-02-17 09:50:52,849 - numba.core.ssa - DEBUG - replaced with: eta.1 = index_frac.1 - offset.1
2025-02-17 09:50:52,849 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-02-17 09:50:52,849 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-02-17 09:50:52,849 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n.1 + $const140.24
2025-02-17 09:50:52,849 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset.1
2025-02-17 09:50:52,849 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-02-17 09:50:52,849 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,850 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-02-17 09:50:52,850 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,850 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-02-17 09:50:52,850 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-02-17 09:50:52,850 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:50:52,850 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-02-17 09:50:52,850 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D73D90>
2025-02-17 09:50:52,850 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-02-17 09:50:52,850 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-02-17 09:50:52,850 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-02-17 09:50:52,850 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-02-17 09:50:52,850 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-02-17 09:50:52,850 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-02-17 09:50:52,850 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D73D90>
2025-02-17 09:50:52,851 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-02-17 09:50:52,851 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-02-17 09:50:52,851 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset.1 + $178binary_multiply.7
2025-02-17 09:50:52,851 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:50:52,851 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-02-17 09:50:52,851 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset.1 + $194binary_multiply.15
2025-02-17 09:50:52,851 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:50:52,851 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-02-17 09:50:52,851 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-02-17 09:50:52,851 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,851 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n.1 - i
2025-02-17 09:50:52,851 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-02-17 09:50:52,851 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-02-17 09:50:52,851 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:50:52,852 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-02-17 09:50:52,852 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:50:52,852 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-02-17 09:50:52,852 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D73D90>
2025-02-17 09:50:52,852 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac.1
2025-02-17 09:50:52,852 - numba.core.ssa - DEBUG - on stmt: frac.2 = $240binary_subtract.3
2025-02-17 09:50:52,852 - numba.core.ssa - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-02-17 09:50:52,852 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-02-17 09:50:52,852 - numba.core.ssa - DEBUG - on stmt: offset.2 = call $252load_global.7(index_frac.2, func=$252load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,852 - numba.core.ssa - DEBUG - on stmt: eta = index_frac.2 - offset.2
2025-02-17 09:50:52,852 - numba.core.ssa - DEBUG - replaced with: eta.2 = index_frac.2 - offset.2
2025-02-17 09:50:52,852 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-02-17 09:50:52,852 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n.1
2025-02-17 09:50:52,853 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-02-17 09:50:52,853 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-02-17 09:50:52,853 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset.2
2025-02-17 09:50:52,853 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-02-17 09:50:52,853 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,853 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-02-17 09:50:52,853 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,853 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-02-17 09:50:52,853 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-02-17 09:50:52,853 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:50:52,853 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-02-17 09:50:52,853 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D73D90>
2025-02-17 09:50:52,853 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-02-17 09:50:52,853 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-02-17 09:50:52,853 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-02-17 09:50:52,853 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-02-17 09:50:52,853 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-02-17 09:50:52,853 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-02-17 09:50:52,853 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D73D90>
2025-02-17 09:50:52,853 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-02-17 09:50:52,853 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-02-17 09:50:52,853 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset.2 + $314binary_multiply.7
2025-02-17 09:50:52,854 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:50:52,854 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-02-17 09:50:52,854 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset.2 + $330binary_multiply.15
2025-02-17 09:50:52,854 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:50:52,854 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-02-17 09:50:52,854 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-02-17 09:50:52,854 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,854 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n.1 + k
2025-02-17 09:50:52,854 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-02-17 09:50:52,854 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-02-17 09:50:52,854 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-02-17 09:50:52,854 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-02-17 09:50:52,854 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:50:52,854 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-02-17 09:50:52,854 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:50:52,854 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-02-17 09:50:52,854 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D73D90>
2025-02-17 09:50:52,854 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:50:52,854 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-02-17 09:50:52,854 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D73D90>
2025-02-17 09:50:52,854 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-02-17 09:50:52,854 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-02-17 09:50:52,854 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-02-17 09:50:52,855 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x00000293E4D73970>],
             82: [<numba.core.ir.Assign object at 0x00000293E4D7E6B0>],
             236: [<numba.core.ir.Assign object at 0x00000293E4D7DE10>]})
2025-02-17 09:50:52,855 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-02-17 09:50:52,855 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CDF0>
2025-02-17 09:50:52,855 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-02-17 09:50:52,855 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-02-17 09:50:52,855 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-02-17 09:50:52,855 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-02-17 09:50:52,855 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-02-17 09:50:52,855 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-02-17 09:50:52,855 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-02-17 09:50:52,855 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-02-17 09:50:52,855 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-02-17 09:50:52,855 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,855 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-02-17 09:50:52,855 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-02-17 09:50:52,855 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-02-17 09:50:52,855 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-02-17 09:50:52,855 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-02-17 09:50:52,855 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-02-17 09:50:52,855 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-02-17 09:50:52,855 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-02-17 09:50:52,855 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-02-17 09:50:52,855 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-02-17 09:50:52,855 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-02-17 09:50:52,856 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-02-17 09:50:52,856 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-02-17 09:50:52,856 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-02-17 09:50:52,856 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-02-17 09:50:52,856 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-02-17 09:50:52,856 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-02-17 09:50:52,856 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,856 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-02-17 09:50:52,856 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-02-17 09:50:52,856 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:50:52,856 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-02-17 09:50:52,856 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CDF0>
2025-02-17 09:50:52,856 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-02-17 09:50:52,856 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-02-17 09:50:52,856 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-02-17 09:50:52,856 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-02-17 09:50:52,856 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-02-17 09:50:52,856 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-02-17 09:50:52,856 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CDF0>
2025-02-17 09:50:52,856 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-02-17 09:50:52,856 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,856 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-02-17 09:50:52,856 - numba.core.ssa - DEBUG - on stmt: n.1 = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,857 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register.1 - n.1
2025-02-17 09:50:52,857 - numba.core.ssa - DEBUG - on stmt: frac.1 = scale * $106binary_subtract.11
2025-02-17 09:50:52,857 - numba.core.ssa - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-02-17 09:50:52,857 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-02-17 09:50:52,857 - numba.core.ssa - DEBUG - on stmt: offset.1 = call $120load_global.16(index_frac.1, func=$120load_global.16, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,857 - numba.core.ssa - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-02-17 09:50:52,857 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-02-17 09:50:52,857 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-02-17 09:50:52,857 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n.1 + $const140.24
2025-02-17 09:50:52,857 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset.1
2025-02-17 09:50:52,857 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-02-17 09:50:52,858 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,858 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-02-17 09:50:52,858 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,858 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-02-17 09:50:52,858 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-02-17 09:50:52,858 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:50:52,858 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-02-17 09:50:52,858 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CDF0>
2025-02-17 09:50:52,858 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-02-17 09:50:52,858 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-02-17 09:50:52,858 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-02-17 09:50:52,858 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-02-17 09:50:52,859 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-02-17 09:50:52,859 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-02-17 09:50:52,859 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CDF0>
2025-02-17 09:50:52,859 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-02-17 09:50:52,859 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-02-17 09:50:52,859 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset.1 + $178binary_multiply.7
2025-02-17 09:50:52,859 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:50:52,859 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-02-17 09:50:52,859 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset.1 + $194binary_multiply.15
2025-02-17 09:50:52,859 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:50:52,859 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-02-17 09:50:52,859 - numba.core.ssa - DEBUG - find_def var='eta' stmt=$200binary_multiply.18 = eta * $198binary_subscr.17
2025-02-17 09:50:52,859 - numba.core.ssa - DEBUG - find_def_from_top label 168
2025-02-17 09:50:52,860 - numba.core.ssa - DEBUG - idom 166 from label 168
2025-02-17 09:50:52,860 - numba.core.ssa - DEBUG - find_def_from_bottom label 166
2025-02-17 09:50:52,860 - numba.core.ssa - DEBUG - find_def_from_top label 166
2025-02-17 09:50:52,860 - numba.core.ssa - DEBUG - idom 82 from label 166
2025-02-17 09:50:52,860 - numba.core.ssa - DEBUG - find_def_from_bottom label 82
2025-02-17 09:50:52,860 - numba.core.ssa - DEBUG - replaced with: $200binary_multiply.18 = eta.1 * $198binary_subscr.17
2025-02-17 09:50:52,860 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-02-17 09:50:52,860 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,860 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n.1 - i
2025-02-17 09:50:52,860 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-02-17 09:50:52,860 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-02-17 09:50:52,860 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:50:52,860 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-02-17 09:50:52,861 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:50:52,861 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-02-17 09:50:52,861 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CDF0>
2025-02-17 09:50:52,861 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac.1
2025-02-17 09:50:52,861 - numba.core.ssa - DEBUG - on stmt: frac.2 = $240binary_subtract.3
2025-02-17 09:50:52,861 - numba.core.ssa - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-02-17 09:50:52,861 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-02-17 09:50:52,861 - numba.core.ssa - DEBUG - on stmt: offset.2 = call $252load_global.7(index_frac.2, func=$252load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,861 - numba.core.ssa - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-02-17 09:50:52,861 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-02-17 09:50:52,861 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n.1
2025-02-17 09:50:52,861 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-02-17 09:50:52,862 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-02-17 09:50:52,862 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset.2
2025-02-17 09:50:52,862 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-02-17 09:50:52,862 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,862 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-02-17 09:50:52,862 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,862 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-02-17 09:50:52,862 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-02-17 09:50:52,862 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:50:52,862 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-02-17 09:50:52,862 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CDF0>
2025-02-17 09:50:52,862 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-02-17 09:50:52,863 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-02-17 09:50:52,863 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-02-17 09:50:52,863 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-02-17 09:50:52,863 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-02-17 09:50:52,863 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-02-17 09:50:52,863 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CDF0>
2025-02-17 09:50:52,863 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-02-17 09:50:52,863 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-02-17 09:50:52,863 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset.2 + $314binary_multiply.7
2025-02-17 09:50:52,863 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:50:52,863 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-02-17 09:50:52,863 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset.2 + $330binary_multiply.15
2025-02-17 09:50:52,863 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:50:52,864 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-02-17 09:50:52,864 - numba.core.ssa - DEBUG - find_def var='eta' stmt=$336binary_multiply.18 = eta * $334binary_subscr.17
2025-02-17 09:50:52,864 - numba.core.ssa - DEBUG - find_def_from_top label 304
2025-02-17 09:50:52,864 - numba.core.ssa - DEBUG - idom 302 from label 304
2025-02-17 09:50:52,864 - numba.core.ssa - DEBUG - find_def_from_bottom label 302
2025-02-17 09:50:52,864 - numba.core.ssa - DEBUG - find_def_from_top label 302
2025-02-17 09:50:52,864 - numba.core.ssa - DEBUG - idom 236 from label 302
2025-02-17 09:50:52,864 - numba.core.ssa - DEBUG - find_def_from_bottom label 236
2025-02-17 09:50:52,864 - numba.core.ssa - DEBUG - replaced with: $336binary_multiply.18 = eta.2 * $334binary_subscr.17
2025-02-17 09:50:52,864 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-02-17 09:50:52,864 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,865 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n.1 + k
2025-02-17 09:50:52,865 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-02-17 09:50:52,865 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-02-17 09:50:52,865 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-02-17 09:50:52,865 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-02-17 09:50:52,865 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:50:52,865 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-02-17 09:50:52,865 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:50:52,865 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-02-17 09:50:52,865 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CDF0>
2025-02-17 09:50:52,865 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:50:52,865 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-02-17 09:50:52,866 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CDF0>
2025-02-17 09:50:52,866 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-02-17 09:50:52,866 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-02-17 09:50:52,866 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-02-17 09:50:52,866 - numba.core.ssa - DEBUG - Fix SSA violator on var weight
2025-02-17 09:50:52,866 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-02-17 09:50:52,866 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CA30>
2025-02-17 09:50:52,866 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-02-17 09:50:52,866 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-02-17 09:50:52,866 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-02-17 09:50:52,866 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-02-17 09:50:52,866 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-02-17 09:50:52,866 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-02-17 09:50:52,867 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-02-17 09:50:52,867 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-02-17 09:50:52,867 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-02-17 09:50:52,867 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,867 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-02-17 09:50:52,867 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-02-17 09:50:52,867 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-02-17 09:50:52,867 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-02-17 09:50:52,867 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-02-17 09:50:52,867 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-02-17 09:50:52,867 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-02-17 09:50:52,867 - numba.core.ssa - DEBUG - first assign: weight
2025-02-17 09:50:52,868 - numba.core.ssa - DEBUG - replaced with: weight = const(float, 0.0)
2025-02-17 09:50:52,868 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-02-17 09:50:52,868 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-02-17 09:50:52,868 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-02-17 09:50:52,868 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-02-17 09:50:52,868 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-02-17 09:50:52,868 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-02-17 09:50:52,868 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-02-17 09:50:52,868 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-02-17 09:50:52,868 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-02-17 09:50:52,868 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-02-17 09:50:52,868 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,869 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-02-17 09:50:52,869 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-02-17 09:50:52,869 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:50:52,869 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-02-17 09:50:52,869 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CA30>
2025-02-17 09:50:52,869 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-02-17 09:50:52,869 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-02-17 09:50:52,869 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-02-17 09:50:52,869 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-02-17 09:50:52,869 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-02-17 09:50:52,869 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-02-17 09:50:52,869 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CA30>
2025-02-17 09:50:52,869 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-02-17 09:50:52,870 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,870 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-02-17 09:50:52,870 - numba.core.ssa - DEBUG - on stmt: n.1 = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,870 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register.1 - n.1
2025-02-17 09:50:52,870 - numba.core.ssa - DEBUG - on stmt: frac.1 = scale * $106binary_subtract.11
2025-02-17 09:50:52,870 - numba.core.ssa - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-02-17 09:50:52,870 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-02-17 09:50:52,870 - numba.core.ssa - DEBUG - on stmt: offset.1 = call $120load_global.16(index_frac.1, func=$120load_global.16, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,870 - numba.core.ssa - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-02-17 09:50:52,870 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-02-17 09:50:52,870 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-02-17 09:50:52,871 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n.1 + $const140.24
2025-02-17 09:50:52,871 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset.1
2025-02-17 09:50:52,871 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-02-17 09:50:52,871 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,871 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-02-17 09:50:52,871 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,871 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-02-17 09:50:52,871 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-02-17 09:50:52,871 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:50:52,871 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-02-17 09:50:52,871 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CA30>
2025-02-17 09:50:52,871 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-02-17 09:50:52,872 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-02-17 09:50:52,872 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-02-17 09:50:52,872 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-02-17 09:50:52,872 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-02-17 09:50:52,872 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-02-17 09:50:52,872 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CA30>
2025-02-17 09:50:52,872 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-02-17 09:50:52,872 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-02-17 09:50:52,872 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset.1 + $178binary_multiply.7
2025-02-17 09:50:52,872 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:50:52,872 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-02-17 09:50:52,873 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset.1 + $194binary_multiply.15
2025-02-17 09:50:52,873 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:50:52,873 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta.1 * $198binary_subscr.17
2025-02-17 09:50:52,873 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-02-17 09:50:52,873 - numba.core.ssa - DEBUG - replaced with: weight.1 = $182binary_subscr.9 + $200binary_multiply.18
2025-02-17 09:50:52,873 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,873 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n.1 - i
2025-02-17 09:50:52,873 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-02-17 09:50:52,873 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-02-17 09:50:52,873 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:50:52,873 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-02-17 09:50:52,873 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:50:52,873 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-02-17 09:50:52,873 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CA30>
2025-02-17 09:50:52,874 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac.1
2025-02-17 09:50:52,874 - numba.core.ssa - DEBUG - on stmt: frac.2 = $240binary_subtract.3
2025-02-17 09:50:52,874 - numba.core.ssa - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-02-17 09:50:52,874 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-02-17 09:50:52,874 - numba.core.ssa - DEBUG - on stmt: offset.2 = call $252load_global.7(index_frac.2, func=$252load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,874 - numba.core.ssa - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-02-17 09:50:52,874 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-02-17 09:50:52,874 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n.1
2025-02-17 09:50:52,874 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-02-17 09:50:52,874 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-02-17 09:50:52,874 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset.2
2025-02-17 09:50:52,874 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-02-17 09:50:52,874 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,874 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-02-17 09:50:52,874 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,875 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-02-17 09:50:52,875 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-02-17 09:50:52,875 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:50:52,875 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-02-17 09:50:52,875 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CA30>
2025-02-17 09:50:52,875 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-02-17 09:50:52,875 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-02-17 09:50:52,875 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-02-17 09:50:52,875 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-02-17 09:50:52,875 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-02-17 09:50:52,875 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-02-17 09:50:52,875 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CA30>
2025-02-17 09:50:52,875 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-02-17 09:50:52,875 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-02-17 09:50:52,875 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset.2 + $314binary_multiply.7
2025-02-17 09:50:52,875 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:50:52,875 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-02-17 09:50:52,876 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset.2 + $330binary_multiply.15
2025-02-17 09:50:52,876 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:50:52,876 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta.2 * $334binary_subscr.17
2025-02-17 09:50:52,876 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-02-17 09:50:52,876 - numba.core.ssa - DEBUG - replaced with: weight.2 = $318binary_subscr.9 + $336binary_multiply.18
2025-02-17 09:50:52,876 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,876 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n.1 + k
2025-02-17 09:50:52,876 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-02-17 09:50:52,876 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-02-17 09:50:52,876 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-02-17 09:50:52,876 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-02-17 09:50:52,876 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:50:52,876 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-02-17 09:50:52,876 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:50:52,876 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-02-17 09:50:52,876 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CA30>
2025-02-17 09:50:52,877 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:50:52,877 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-02-17 09:50:52,877 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x00000293E4D2CA30>
2025-02-17 09:50:52,877 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-02-17 09:50:52,877 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-02-17 09:50:52,877 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-02-17 09:50:52,877 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x00000293E4D73C70>],
             168: [<numba.core.ir.Assign object at 0x00000293E4D7DB70>],
             304: [<numba.core.ir.Assign object at 0x00000293E4D7D270>]})
2025-02-17 09:50:52,877 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-02-17 09:50:52,877 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CA30>
2025-02-17 09:50:52,877 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-02-17 09:50:52,877 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-02-17 09:50:52,877 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-02-17 09:50:52,877 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-02-17 09:50:52,877 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-02-17 09:50:52,877 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-02-17 09:50:52,877 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-02-17 09:50:52,878 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-02-17 09:50:52,878 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-02-17 09:50:52,878 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,878 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-02-17 09:50:52,878 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-02-17 09:50:52,878 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-02-17 09:50:52,878 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-02-17 09:50:52,878 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-02-17 09:50:52,878 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-02-17 09:50:52,878 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-02-17 09:50:52,878 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-02-17 09:50:52,878 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-02-17 09:50:52,878 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-02-17 09:50:52,878 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-02-17 09:50:52,878 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-02-17 09:50:52,878 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-02-17 09:50:52,879 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-02-17 09:50:52,879 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-02-17 09:50:52,879 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-02-17 09:50:52,879 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-02-17 09:50:52,879 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,879 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-02-17 09:50:52,879 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-02-17 09:50:52,879 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:50:52,879 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-02-17 09:50:52,879 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CA30>
2025-02-17 09:50:52,879 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-02-17 09:50:52,879 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-02-17 09:50:52,879 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-02-17 09:50:52,879 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-02-17 09:50:52,879 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-02-17 09:50:52,879 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-02-17 09:50:52,880 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CA30>
2025-02-17 09:50:52,880 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-02-17 09:50:52,880 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,880 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-02-17 09:50:52,880 - numba.core.ssa - DEBUG - on stmt: n.1 = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,880 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register.1 - n.1
2025-02-17 09:50:52,880 - numba.core.ssa - DEBUG - on stmt: frac.1 = scale * $106binary_subtract.11
2025-02-17 09:50:52,880 - numba.core.ssa - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-02-17 09:50:52,880 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-02-17 09:50:52,880 - numba.core.ssa - DEBUG - on stmt: offset.1 = call $120load_global.16(index_frac.1, func=$120load_global.16, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,880 - numba.core.ssa - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-02-17 09:50:52,880 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-02-17 09:50:52,880 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-02-17 09:50:52,880 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n.1 + $const140.24
2025-02-17 09:50:52,880 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset.1
2025-02-17 09:50:52,880 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-02-17 09:50:52,881 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,881 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-02-17 09:50:52,881 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,881 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-02-17 09:50:52,881 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-02-17 09:50:52,881 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:50:52,881 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-02-17 09:50:52,881 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CA30>
2025-02-17 09:50:52,881 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-02-17 09:50:52,881 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-02-17 09:50:52,881 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-02-17 09:50:52,881 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-02-17 09:50:52,881 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-02-17 09:50:52,881 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-02-17 09:50:52,881 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CA30>
2025-02-17 09:50:52,882 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-02-17 09:50:52,882 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-02-17 09:50:52,882 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset.1 + $178binary_multiply.7
2025-02-17 09:50:52,882 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:50:52,882 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-02-17 09:50:52,882 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset.1 + $194binary_multiply.15
2025-02-17 09:50:52,882 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:50:52,882 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta.1 * $198binary_subscr.17
2025-02-17 09:50:52,882 - numba.core.ssa - DEBUG - on stmt: weight.1 = $182binary_subscr.9 + $200binary_multiply.18
2025-02-17 09:50:52,882 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,882 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n.1 - i
2025-02-17 09:50:52,882 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-02-17 09:50:52,882 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-02-17 09:50:52,882 - numba.core.ssa - DEBUG - find_def var='weight' stmt=$226binary_multiply.31 = weight * $224binary_subscr.30
2025-02-17 09:50:52,882 - numba.core.ssa - DEBUG - replaced with: $226binary_multiply.31 = weight.1 * $224binary_subscr.30
2025-02-17 09:50:52,883 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:50:52,883 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-02-17 09:50:52,883 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:50:52,883 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-02-17 09:50:52,883 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CA30>
2025-02-17 09:50:52,883 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac.1
2025-02-17 09:50:52,883 - numba.core.ssa - DEBUG - on stmt: frac.2 = $240binary_subtract.3
2025-02-17 09:50:52,883 - numba.core.ssa - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-02-17 09:50:52,883 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-02-17 09:50:52,883 - numba.core.ssa - DEBUG - on stmt: offset.2 = call $252load_global.7(index_frac.2, func=$252load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,883 - numba.core.ssa - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-02-17 09:50:52,883 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-02-17 09:50:52,883 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n.1
2025-02-17 09:50:52,883 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-02-17 09:50:52,883 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-02-17 09:50:52,883 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset.2
2025-02-17 09:50:52,884 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-02-17 09:50:52,884 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,884 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-02-17 09:50:52,884 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:50:52,884 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-02-17 09:50:52,884 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-02-17 09:50:52,884 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:50:52,884 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-02-17 09:50:52,884 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CA30>
2025-02-17 09:50:52,884 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-02-17 09:50:52,884 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-02-17 09:50:52,884 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-02-17 09:50:52,884 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-02-17 09:50:52,884 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-02-17 09:50:52,884 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-02-17 09:50:52,884 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CA30>
2025-02-17 09:50:52,884 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-02-17 09:50:52,884 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-02-17 09:50:52,885 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset.2 + $314binary_multiply.7
2025-02-17 09:50:52,885 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:50:52,885 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-02-17 09:50:52,885 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset.2 + $330binary_multiply.15
2025-02-17 09:50:52,885 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:50:52,885 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta.2 * $334binary_subscr.17
2025-02-17 09:50:52,885 - numba.core.ssa - DEBUG - on stmt: weight.2 = $318binary_subscr.9 + $336binary_multiply.18
2025-02-17 09:50:52,885 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:50:52,885 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n.1 + k
2025-02-17 09:50:52,885 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-02-17 09:50:52,885 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-02-17 09:50:52,885 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-02-17 09:50:52,885 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-02-17 09:50:52,885 - numba.core.ssa - DEBUG - find_def var='weight' stmt=$366binary_multiply.33 = weight * $364binary_subscr.32
2025-02-17 09:50:52,885 - numba.core.ssa - DEBUG - replaced with: $366binary_multiply.33 = weight.2 * $364binary_subscr.32
2025-02-17 09:50:52,885 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:50:52,885 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-02-17 09:50:52,885 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:50:52,885 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-02-17 09:50:52,885 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CA30>
2025-02-17 09:50:52,885 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:50:52,885 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-02-17 09:50:52,886 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x00000293E4D2CA30>
2025-02-17 09:50:52,886 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-02-17 09:50:52,886 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-02-17 09:50:52,886 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-02-17 09:50:53,605 - speechbrain.core - ERROR - Exception:
Traceback (most recent call last):
  File "C:\Users\junwe\miniconda3\envs\accent_recog\lib\site-packages\speechbrain\dataio\encoder.py", line 447, in encode_label
    return self.lab2ind[label]
KeyError: 'UNITED STATES ENGLISH'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\junwe\Desktop\accent_recog\speechbrain\accent-recog-slt2022\CommonAccent\accent_id\inference.py", line 266, in <module>
    test_stats = accid_brain.evaluate(
  File "C:\Users\junwe\miniconda3\envs\accent_recog\lib\site-packages\speechbrain\core.py", line 1265, in evaluate
    for batch in tqdm(
  File "C:\Users\junwe\miniconda3\envs\accent_recog\lib\site-packages\tqdm\std.py", line 1181, in __iter__
    for obj in iterable:
  File "C:\Users\junwe\miniconda3\envs\accent_recog\lib\site-packages\torch\utils\data\dataloader.py", line 628, in __next__
    data = self._next_data()
  File "C:\Users\junwe\miniconda3\envs\accent_recog\lib\site-packages\torch\utils\data\dataloader.py", line 671, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
  File "C:\Users\junwe\miniconda3\envs\accent_recog\lib\site-packages\torch\utils\data\_utils\fetch.py", line 58, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "C:\Users\junwe\miniconda3\envs\accent_recog\lib\site-packages\torch\utils\data\_utils\fetch.py", line 58, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "C:\Users\junwe\miniconda3\envs\accent_recog\lib\site-packages\speechbrain\dataio\dataset.py", line 165, in __getitem__
    return self.pipeline.compute_outputs({"id": data_id, **data_point})
  File "C:\Users\junwe\miniconda3\envs\accent_recog\lib\site-packages\speechbrain\utils\data_pipeline.py", line 464, in compute_outputs
    return self._compute(data, self._exec_order, self.output_mapping)
  File "C:\Users\junwe\miniconda3\envs\accent_recog\lib\site-packages\speechbrain\utils\data_pipeline.py", line 496, in _compute
    values = item(*args)  # Call the DynamicItem to produce output
  File "C:\Users\junwe\miniconda3\envs\accent_recog\lib\site-packages\speechbrain\utils\data_pipeline.py", line 154, in __call__
    out = next(self.current_generator)
  File "C:\Users\junwe\Desktop\accent_recog\speechbrain\accent-recog-slt2022\CommonAccent\accent_id\inference.py", line 167, in label_pipeline
    accent_encoded = accent_encoder.encode_label_torch(accent)
  File "C:\Users\junwe\miniconda3\envs\accent_recog\lib\site-packages\speechbrain\dataio\encoder.py", line 481, in encode_label_torch
    return torch.LongTensor([self.encode_label(label, allow_unk)])
  File "C:\Users\junwe\miniconda3\envs\accent_recog\lib\site-packages\speechbrain\dataio\encoder.py", line 457, in encode_label
    raise KeyError(
KeyError: 'Cannot encode unknown label UNITED STATES ENGLISH. You have not called add_unk() to add a special unk-label for unknown labels.'
2025-02-17 09:54:52,681 - speechbrain.core - INFO - Beginning experiment!
2025-02-17 09:54:52,683 - speechbrain.core - INFO - Experiment folder: results/analysis_ECAPA-TDNN-241229_70k
2025-02-17 09:54:53,810 - speechbrain.utils.superpowers - DEBUG - aiohappyeyeballs==2.4.3
aiohttp==3.11.0
aiosignal==1.3.1
asttokens==2.4.1
async-timeout==5.0.1
attrs==24.2.0
audioread==3.0.1
black==24.3.0
certifi==2024.8.30
cffi==1.17.1
cfgv==3.4.0
charset-normalizer==3.4.0
click==8.1.7
colorama==0.4.6
contourpy==1.3.1
cycler==0.12.1
datasets==3.1.0
decorator==5.1.1
dill==0.3.8
distlib==0.3.9
docstring_parser_fork==0.0.9
exceptiongroup==1.2.2
executing==2.1.0
filelock==3.16.1
flake8==7.0.0
fonttools==4.55.0
frozenlist==1.5.0
fsspec==2024.9.0
huggingface-hub==0.26.2
HyperPyYAML==1.2.2
identify==2.6.1
idna==3.10
iniconfig==2.0.0
ipdb==0.13.13
ipython==8.29.0
isort==5.13.2
jedi==0.19.1
Jinja2==3.1.4
joblib==1.4.2
kiwisolver==1.4.7
lazy_loader==0.4
librosa==0.9.2
llvmlite==0.43.0
MarkupSafe==3.0.2
matplotlib==3.9.2
matplotlib-inline==0.1.7
mccabe==0.7.0
mpmath==1.3.0
msgpack==1.1.0
multidict==6.1.0
multiprocess==0.70.16
mypy-extensions==1.0.0
networkx==3.4.2
nodeenv==1.9.1
numba==0.60.0
numpy==1.26.4
packaging==24.1
pandas==2.2.3
parso==0.8.4
pathspec==0.12.1
pillow==11.0.0
platformdirs==4.3.6
pluggy==1.5.0
pooch==1.8.2
pre_commit==4.0.1
prompt_toolkit==3.0.48
propcache==0.2.0
pure_eval==0.2.3
pyarrow==18.0.0
pycodestyle==2.11.0
pycparser==2.22
pydoclint==0.4.1
pyflakes==3.2.0
Pygments==2.18.0
pygtrie==2.5.0
pyparsing==3.2.0
pytest==7.4.0
python-dateutil==2.9.0.post0
pytz==2024.2
PyYAML==6.0.2
regex==2024.11.6
requests==2.32.3
resampy==0.4.3
ruamel.yaml==0.18.6
ruamel.yaml.clib==0.2.12
safetensors==0.4.5
scikit-learn==1.5.2
scipy==1.12.0
sentencepiece==0.2.0
six==1.16.0
soundfile==0.12.1
soxr==0.5.0.post1
speechbrain==0.5.13
stack-data==0.6.3
sympy==1.13.1
threadpoolctl==3.5.0
tokenizers==0.20.3
tomli==2.0.2
torch==1.13.0+cu117
torchaudio==0.13.0+cu117
torchvision==0.14.0+cu117
tqdm==4.67.0
traitlets==5.14.3
transformers==4.46.2
typing_extensions==4.12.2
tzdata==2024.2
urllib3==2.2.3
virtualenv==20.27.1
wcwidth==0.2.13
xxhash==3.5.0
yamllint==1.35.1
yarl==1.17.1


2025-02-17 09:54:54,068 - speechbrain.dataio.encoder - DEBUG - Loaded categorical encoding from C:\Users\junwe\Desktop\accent_recog\speechbrain\accent-recog-slt2022\CommonAccent\accent_id\results\ECAPA-TDNN-241229-70k\1986\save\CKPT+2025-01-04+09-54-28+00\accent_encoder.txt
2025-02-17 09:54:54,068 - speechbrain.dataio.encoder - INFO - Load called, but CategoricalEncoder is not empty. Loaded data will overwrite everything. This is normal if there is e.g. an unk label defined at init.
2025-02-17 09:54:54,070 - speechbrain.dataio.encoder - DEBUG - Loaded categorical encoding from C:\Users\junwe\Desktop\accent_recog\speechbrain\accent-recog-slt2022\CommonAccent\accent_id\results\ECAPA-TDNN-241229-70k\1986\save\CKPT+2025-01-04+09-54-28+00\accent_encoder.txt
2025-02-17 09:54:54,512 - speechbrain.utils.parameter_transfer - DEBUG - Collecting files (or symlinks) for pretraining in model_checkpoints.
2025-02-17 09:54:54,513 - speechbrain.pretrained.fetching - INFO - Fetch accent_encoder.txt: Using existing file/symlink in model_checkpoints\label_encoder.ckpt.
2025-02-17 09:54:54,516 - speechbrain.pretrained.fetching - INFO - Fetch normalizer_input.ckpt: Using existing file/symlink in model_checkpoints\mean_var_norm.ckpt.
2025-02-17 09:54:54,516 - speechbrain.utils.parameter_transfer - INFO - Loading pretrained files for: label_encoder, mean_var_norm
2025-02-17 09:54:54,517 - speechbrain.dataio.encoder - DEBUG - Loaded categorical encoding from model_checkpoints\label_encoder.ckpt
2025-02-17 09:54:54,735 - speechbrain.core - INFO - Info: device arg from hparam file is used
2025-02-17 09:54:54,792 - speechbrain.core - INFO - 20.8M trainable parameters in AccID_inf
2025-02-17 09:54:56,654 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=81)
           2	LOAD_GLOBAL(arg=0, lineno=86)
           4	LOAD_FAST(arg=0, lineno=86)
           6	LOAD_FAST(arg=1, lineno=86)
           8	LOAD_FAST(arg=2, lineno=86)
          10	LOAD_FAST(arg=3, lineno=86)
          12	LOAD_FAST(arg=4, lineno=86)
          14	LOAD_FAST(arg=5, lineno=86)
          16	LOAD_FAST(arg=6, lineno=86)
          18	CALL_FUNCTION(arg=7, lineno=86)
          20	POP_TOP(arg=None, lineno=86)
          22	LOAD_CONST(arg=0, lineno=86)
          24	RETURN_VALUE(arg=None, lineno=86)
2025-02-17 09:54:56,654 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-02-17 09:54:56,654 - numba.core.byteflow - DEBUG - stack: []
2025-02-17 09:54:56,654 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-02-17 09:54:56,654 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=81)
2025-02-17 09:54:56,654 - numba.core.byteflow - DEBUG - stack []
2025-02-17 09:54:56,654 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=86)
2025-02-17 09:54:56,654 - numba.core.byteflow - DEBUG - stack []
2025-02-17 09:54:56,654 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=86)
2025-02-17 09:54:56,655 - numba.core.byteflow - DEBUG - stack ['$2load_global.0']
2025-02-17 09:54:56,655 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=86)
2025-02-17 09:54:56,655 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1']
2025-02-17 09:54:56,655 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=86)
2025-02-17 09:54:56,655 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1', '$t_out6.2']
2025-02-17 09:54:56,655 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=LOAD_FAST(arg=3, lineno=86)
2025-02-17 09:54:56,655 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1', '$t_out6.2', '$interp_win8.3']
2025-02-17 09:54:56,655 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=LOAD_FAST(arg=4, lineno=86)
2025-02-17 09:54:56,655 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1', '$t_out6.2', '$interp_win8.3', '$interp_delta10.4']
2025-02-17 09:54:56,655 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_FAST(arg=5, lineno=86)
2025-02-17 09:54:56,655 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1', '$t_out6.2', '$interp_win8.3', '$interp_delta10.4', '$num_table12.5']
2025-02-17 09:54:56,655 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=LOAD_FAST(arg=6, lineno=86)
2025-02-17 09:54:56,655 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1', '$t_out6.2', '$interp_win8.3', '$interp_delta10.4', '$num_table12.5', '$scale14.6']
2025-02-17 09:54:56,655 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=CALL_FUNCTION(arg=7, lineno=86)
2025-02-17 09:54:56,655 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$x4.1', '$t_out6.2', '$interp_win8.3', '$interp_delta10.4', '$num_table12.5', '$scale14.6', '$y16.7']
2025-02-17 09:54:56,655 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=POP_TOP(arg=None, lineno=86)
2025-02-17 09:54:56,655 - numba.core.byteflow - DEBUG - stack ['$18call_function.8']
2025-02-17 09:54:56,655 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_CONST(arg=0, lineno=86)
2025-02-17 09:54:56,655 - numba.core.byteflow - DEBUG - stack []
2025-02-17 09:54:56,655 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=RETURN_VALUE(arg=None, lineno=86)
2025-02-17 09:54:56,656 - numba.core.byteflow - DEBUG - stack ['$const22.9']
2025-02-17 09:54:56,656 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-02-17 09:54:56,656 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-02-17 09:54:56,656 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
2025-02-17 09:54:56,656 - numba.core.byteflow - DEBUG - defmap: {}
2025-02-17 09:54:56,656 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>, {})
2025-02-17 09:54:56,656 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>, {})
2025-02-17 09:54:56,656 - numba.core.byteflow - DEBUG - keep phismap: {}
2025-02-17 09:54:56,656 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>, {})
2025-02-17 09:54:56,656 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-02-17 09:54:56,656 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$x4.1'}), (6, {'res': '$t_out6.2'}), (8, {'res': '$interp_win8.3'}), (10, {'res': '$interp_delta10.4'}), (12, {'res': '$num_table12.5'}), (14, {'res': '$scale14.6'}), (16, {'res': '$y16.7'}), (18, {'func': '$2load_global.0', 'args': ['$x4.1', '$t_out6.2', '$interp_win8.3', '$interp_delta10.4', '$num_table12.5', '$scale14.6', '$y16.7'], 'res': '$18call_function.8'}), (22, {'res': '$const22.9'}), (24, {'retval': '$const22.9', 'castval': '$24return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-02-17 09:54:56,657 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $2load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x000001EC8850A5F0>)) ['$2load_global.0']
    $18call_function.8 = call $2load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$2load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None) ['$18call_function.8', '$2load_global.0', 'interp_delta', 'interp_win', 'num_table', 'scale', 't_out', 'x', 'y']
    $const22.9 = const(NoneType, None)       ['$const22.9']
    $24return_value.10 = cast(value=$const22.9) ['$24return_value.10', '$const22.9']
    return $24return_value.10                ['$24return_value.10']

2025-02-17 09:54:56,662 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-02-17 09:54:56,662 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001ED65F9D930>
2025-02-17 09:54:56,662 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-02-17 09:54:56,662 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-02-17 09:54:56,663 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-02-17 09:54:56,663 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-02-17 09:54:56,663 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-02-17 09:54:56,663 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-02-17 09:54:56,663 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-02-17 09:54:56,663 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(_resample_loop_s: CPUDispatcher(<function _resample_loop at 0x000001EC8850A5F0>))
2025-02-17 09:54:56,663 - numba.core.ssa - DEBUG - on stmt: $18call_function.8 = call $2load_global.0(x, t_out, interp_win, interp_delta, num_table, scale, y, func=$2load_global.0, args=[Var(x, interpn.py:81), Var(t_out, interpn.py:81), Var(interp_win, interpn.py:81), Var(interp_delta, interpn.py:81), Var(num_table, interpn.py:81), Var(scale, interpn.py:81), Var(y, interpn.py:81)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,663 - numba.core.ssa - DEBUG - on stmt: $const22.9 = const(NoneType, None)
2025-02-17 09:54:56,663 - numba.core.ssa - DEBUG - on stmt: $24return_value.10 = cast(value=$const22.9)
2025-02-17 09:54:56,663 - numba.core.ssa - DEBUG - on stmt: return $24return_value.10
2025-02-17 09:54:56,664 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$18call_function.8': [(<numba.core.ir.Assign object at 0x000001ED65F9EE60>,
                                     0)],
             '$24return_value.10': [(<numba.core.ir.Assign object at 0x000001ED65F9F100>,
                                     0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x000001ED65F9D900>,
                                  0)],
             '$const22.9': [(<numba.core.ir.Assign object at 0x000001ED65F9EF80>,
                             0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x000001ED65F9D450>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x000001ED65F9CD00>,
                             0)],
             'num_table': [(<numba.core.ir.Assign object at 0x000001ED65F9D210>,
                            0)],
             'scale': [(<numba.core.ir.Assign object at 0x000001ED65F9D030>,
                        0)],
             't_out': [(<numba.core.ir.Assign object at 0x000001ED65F9CBB0>,
                        0)],
             'x': [(<numba.core.ir.Assign object at 0x000001ED65F9DF30>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x000001ED65F9CF40>, 0)]})
2025-02-17 09:54:56,664 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001ED65F9D930>
2025-02-17 09:54:56,678 - numba.core.byteflow - DEBUG - bytecode dump:
>          0	NOP(arg=None, lineno=7)
           2	LOAD_GLOBAL(arg=0, lineno=9)
           4	LOAD_FAST(arg=5, lineno=9)
           6	LOAD_FAST(arg=4, lineno=9)
           8	BINARY_MULTIPLY(arg=None, lineno=9)
          10	CALL_FUNCTION(arg=1, lineno=9)
          12	STORE_FAST(arg=7, lineno=9)
          14	LOAD_CONST(arg=1, lineno=10)
          16	STORE_FAST(arg=8, lineno=10)
          18	LOAD_CONST(arg=2, lineno=12)
          20	STORE_FAST(arg=9, lineno=12)
          22	LOAD_CONST(arg=1, lineno=13)
          24	STORE_FAST(arg=10, lineno=13)
          26	LOAD_CONST(arg=1, lineno=14)
          28	STORE_FAST(arg=11, lineno=14)
          30	LOAD_CONST(arg=2, lineno=15)
          32	STORE_FAST(arg=12, lineno=15)
          34	LOAD_CONST(arg=1, lineno=16)
          36	STORE_FAST(arg=13, lineno=16)
          38	LOAD_CONST(arg=1, lineno=17)
          40	STORE_FAST(arg=14, lineno=17)
          42	LOAD_FAST(arg=2, lineno=19)
          44	LOAD_ATTR(arg=1, lineno=19)
          46	LOAD_CONST(arg=2, lineno=19)
          48	BINARY_SUBSCR(arg=None, lineno=19)
          50	STORE_FAST(arg=15, lineno=19)
          52	LOAD_FAST(arg=0, lineno=20)
          54	LOAD_ATTR(arg=1, lineno=20)
          56	LOAD_CONST(arg=2, lineno=20)
          58	BINARY_SUBSCR(arg=None, lineno=20)
          60	STORE_FAST(arg=16, lineno=20)
          62	LOAD_FAST(arg=1, lineno=21)
          64	LOAD_ATTR(arg=1, lineno=21)
          66	LOAD_CONST(arg=2, lineno=21)
          68	BINARY_SUBSCR(arg=None, lineno=21)
          70	STORE_FAST(arg=17, lineno=21)
          72	LOAD_GLOBAL(arg=2, lineno=23)
          74	LOAD_FAST(arg=17, lineno=23)
          76	CALL_FUNCTION(arg=1, lineno=23)
          78	GET_ITER(arg=None, lineno=23)
>         80	FOR_ITER(arg=148, lineno=23)
          82	STORE_FAST(arg=18, lineno=23)
          84	LOAD_FAST(arg=1, lineno=24)
          86	LOAD_FAST(arg=18, lineno=24)
          88	BINARY_SUBSCR(arg=None, lineno=24)
          90	STORE_FAST(arg=8, lineno=24)
          92	LOAD_GLOBAL(arg=0, lineno=27)
          94	LOAD_FAST(arg=8, lineno=27)
          96	CALL_FUNCTION(arg=1, lineno=27)
          98	STORE_FAST(arg=9, lineno=27)
         100	LOAD_FAST(arg=5, lineno=30)
         102	LOAD_FAST(arg=8, lineno=30)
         104	LOAD_FAST(arg=9, lineno=30)
         106	BINARY_SUBTRACT(arg=None, lineno=30)
         108	BINARY_MULTIPLY(arg=None, lineno=30)
         110	STORE_FAST(arg=10, lineno=30)
         112	LOAD_FAST(arg=10, lineno=33)
         114	LOAD_FAST(arg=4, lineno=33)
         116	BINARY_MULTIPLY(arg=None, lineno=33)
         118	STORE_FAST(arg=11, lineno=33)
         120	LOAD_GLOBAL(arg=0, lineno=34)
         122	LOAD_FAST(arg=11, lineno=34)
         124	CALL_FUNCTION(arg=1, lineno=34)
         126	STORE_FAST(arg=12, lineno=34)
         128	LOAD_FAST(arg=11, lineno=37)
         130	LOAD_FAST(arg=12, lineno=37)
         132	BINARY_SUBTRACT(arg=None, lineno=37)
         134	STORE_FAST(arg=13, lineno=37)
         136	LOAD_GLOBAL(arg=3, lineno=40)
         138	LOAD_FAST(arg=9, lineno=40)
         140	LOAD_CONST(arg=3, lineno=40)
         142	BINARY_ADD(arg=None, lineno=40)
         144	LOAD_FAST(arg=15, lineno=40)
         146	LOAD_FAST(arg=12, lineno=40)
         148	BINARY_SUBTRACT(arg=None, lineno=40)
         150	LOAD_FAST(arg=7, lineno=40)
         152	BINARY_FLOOR_DIVIDE(arg=None, lineno=40)
         154	CALL_FUNCTION(arg=2, lineno=40)
         156	STORE_FAST(arg=19, lineno=40)
         158	LOAD_GLOBAL(arg=4, lineno=41)
         160	LOAD_FAST(arg=19, lineno=41)
         162	CALL_FUNCTION(arg=1, lineno=41)
         164	GET_ITER(arg=None, lineno=41)
>        166	FOR_ITER(arg=34, lineno=41)
         168	STORE_FAST(arg=20, lineno=41)
         170	LOAD_FAST(arg=2, lineno=44)
         172	LOAD_FAST(arg=12, lineno=44)
         174	LOAD_FAST(arg=20, lineno=44)
         176	LOAD_FAST(arg=7, lineno=44)
         178	BINARY_MULTIPLY(arg=None, lineno=44)
         180	BINARY_ADD(arg=None, lineno=44)
         182	BINARY_SUBSCR(arg=None, lineno=44)
         184	LOAD_FAST(arg=13, lineno=45)
         186	LOAD_FAST(arg=3, lineno=45)
         188	LOAD_FAST(arg=12, lineno=45)
         190	LOAD_FAST(arg=20, lineno=45)
         192	LOAD_FAST(arg=7, lineno=45)
         194	BINARY_MULTIPLY(arg=None, lineno=45)
         196	BINARY_ADD(arg=None, lineno=45)
         198	BINARY_SUBSCR(arg=None, lineno=45)
         200	BINARY_MULTIPLY(arg=None, lineno=45)
         202	BINARY_ADD(arg=None, lineno=44)
         204	STORE_FAST(arg=14, lineno=43)
         206	LOAD_FAST(arg=6, lineno=47)
         208	LOAD_FAST(arg=18, lineno=47)
         210	DUP_TOP_TWO(arg=None, lineno=47)
         212	BINARY_SUBSCR(arg=None, lineno=47)
         214	LOAD_FAST(arg=14, lineno=47)
         216	LOAD_FAST(arg=0, lineno=47)
         218	LOAD_FAST(arg=9, lineno=47)
         220	LOAD_FAST(arg=20, lineno=47)
         222	BINARY_SUBTRACT(arg=None, lineno=47)
         224	BINARY_SUBSCR(arg=None, lineno=47)
         226	BINARY_MULTIPLY(arg=None, lineno=47)
         228	INPLACE_ADD(arg=None, lineno=47)
         230	ROT_THREE(arg=None, lineno=47)
         232	STORE_SUBSCR(arg=None, lineno=47)
         234	JUMP_ABSOLUTE(arg=84, lineno=47)
>        236	LOAD_FAST(arg=5, lineno=50)
         238	LOAD_FAST(arg=10, lineno=50)
         240	BINARY_SUBTRACT(arg=None, lineno=50)
         242	STORE_FAST(arg=10, lineno=50)
         244	LOAD_FAST(arg=10, lineno=53)
         246	LOAD_FAST(arg=4, lineno=53)
         248	BINARY_MULTIPLY(arg=None, lineno=53)
         250	STORE_FAST(arg=11, lineno=53)
         252	LOAD_GLOBAL(arg=0, lineno=54)
         254	LOAD_FAST(arg=11, lineno=54)
         256	CALL_FUNCTION(arg=1, lineno=54)
         258	STORE_FAST(arg=12, lineno=54)
         260	LOAD_FAST(arg=11, lineno=57)
         262	LOAD_FAST(arg=12, lineno=57)
         264	BINARY_SUBTRACT(arg=None, lineno=57)
         266	STORE_FAST(arg=13, lineno=57)
         268	LOAD_GLOBAL(arg=3, lineno=60)
         270	LOAD_FAST(arg=16, lineno=60)
         272	LOAD_FAST(arg=9, lineno=60)
         274	BINARY_SUBTRACT(arg=None, lineno=60)
         276	LOAD_CONST(arg=3, lineno=60)
         278	BINARY_SUBTRACT(arg=None, lineno=60)
         280	LOAD_FAST(arg=15, lineno=60)
         282	LOAD_FAST(arg=12, lineno=60)
         284	BINARY_SUBTRACT(arg=None, lineno=60)
         286	LOAD_FAST(arg=7, lineno=60)
         288	BINARY_FLOOR_DIVIDE(arg=None, lineno=60)
         290	CALL_FUNCTION(arg=2, lineno=60)
         292	STORE_FAST(arg=21, lineno=60)
         294	LOAD_GLOBAL(arg=4, lineno=61)
         296	LOAD_FAST(arg=21, lineno=61)
         298	CALL_FUNCTION(arg=1, lineno=61)
         300	GET_ITER(arg=None, lineno=61)
>        302	FOR_ITER(arg=36, lineno=61)
         304	STORE_FAST(arg=22, lineno=61)
         306	LOAD_FAST(arg=2, lineno=63)
         308	LOAD_FAST(arg=12, lineno=63)
         310	LOAD_FAST(arg=22, lineno=63)
         312	LOAD_FAST(arg=7, lineno=63)
         314	BINARY_MULTIPLY(arg=None, lineno=63)
         316	BINARY_ADD(arg=None, lineno=63)
         318	BINARY_SUBSCR(arg=None, lineno=63)
         320	LOAD_FAST(arg=13, lineno=64)
         322	LOAD_FAST(arg=3, lineno=64)
         324	LOAD_FAST(arg=12, lineno=64)
         326	LOAD_FAST(arg=22, lineno=64)
         328	LOAD_FAST(arg=7, lineno=64)
         330	BINARY_MULTIPLY(arg=None, lineno=64)
         332	BINARY_ADD(arg=None, lineno=64)
         334	BINARY_SUBSCR(arg=None, lineno=64)
         336	BINARY_MULTIPLY(arg=None, lineno=64)
         338	BINARY_ADD(arg=None, lineno=63)
         340	STORE_FAST(arg=14, lineno=62)
         342	LOAD_FAST(arg=6, lineno=66)
         344	LOAD_FAST(arg=18, lineno=66)
         346	DUP_TOP_TWO(arg=None, lineno=66)
         348	BINARY_SUBSCR(arg=None, lineno=66)
         350	LOAD_FAST(arg=14, lineno=66)
         352	LOAD_FAST(arg=0, lineno=66)
         354	LOAD_FAST(arg=9, lineno=66)
         356	LOAD_FAST(arg=22, lineno=66)
         358	BINARY_ADD(arg=None, lineno=66)
         360	LOAD_CONST(arg=3, lineno=66)
         362	BINARY_ADD(arg=None, lineno=66)
         364	BINARY_SUBSCR(arg=None, lineno=66)
         366	BINARY_MULTIPLY(arg=None, lineno=66)
         368	INPLACE_ADD(arg=None, lineno=66)
         370	ROT_THREE(arg=None, lineno=66)
         372	STORE_SUBSCR(arg=None, lineno=66)
         374	JUMP_ABSOLUTE(arg=152, lineno=66)
>        376	JUMP_ABSOLUTE(arg=41, lineno=61)
>        378	LOAD_CONST(arg=0, lineno=23)
         380	RETURN_VALUE(arg=None, lineno=23)
2025-02-17 09:54:56,678 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=0 nstack_initial=0)])
2025-02-17 09:54:56,679 - numba.core.byteflow - DEBUG - stack: []
2025-02-17 09:54:56,679 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=0 nstack_initial=0)
2025-02-17 09:54:56,679 - numba.core.byteflow - DEBUG - dispatch pc=0, inst=NOP(arg=None, lineno=7)
2025-02-17 09:54:56,679 - numba.core.byteflow - DEBUG - stack []
2025-02-17 09:54:56,680 - numba.core.byteflow - DEBUG - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=9)
2025-02-17 09:54:56,680 - numba.core.byteflow - DEBUG - stack []
2025-02-17 09:54:56,680 - numba.core.byteflow - DEBUG - dispatch pc=4, inst=LOAD_FAST(arg=5, lineno=9)
2025-02-17 09:54:56,680 - numba.core.byteflow - DEBUG - stack ['$2load_global.0']
2025-02-17 09:54:56,680 - numba.core.byteflow - DEBUG - dispatch pc=6, inst=LOAD_FAST(arg=4, lineno=9)
2025-02-17 09:54:56,681 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$scale4.1']
2025-02-17 09:54:56,681 - numba.core.byteflow - DEBUG - dispatch pc=8, inst=BINARY_MULTIPLY(arg=None, lineno=9)
2025-02-17 09:54:56,681 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$scale4.1', '$num_table6.2']
2025-02-17 09:54:56,681 - numba.core.byteflow - DEBUG - dispatch pc=10, inst=CALL_FUNCTION(arg=1, lineno=9)
2025-02-17 09:54:56,682 - numba.core.byteflow - DEBUG - stack ['$2load_global.0', '$8binary_multiply.3']
2025-02-17 09:54:56,682 - numba.core.byteflow - DEBUG - dispatch pc=12, inst=STORE_FAST(arg=7, lineno=9)
2025-02-17 09:54:56,682 - numba.core.byteflow - DEBUG - stack ['$10call_function.4']
2025-02-17 09:54:56,682 - numba.core.byteflow - DEBUG - dispatch pc=14, inst=LOAD_CONST(arg=1, lineno=10)
2025-02-17 09:54:56,683 - numba.core.byteflow - DEBUG - stack []
2025-02-17 09:54:56,683 - numba.core.byteflow - DEBUG - dispatch pc=16, inst=STORE_FAST(arg=8, lineno=10)
2025-02-17 09:54:56,683 - numba.core.byteflow - DEBUG - stack ['$const14.5']
2025-02-17 09:54:56,683 - numba.core.byteflow - DEBUG - dispatch pc=18, inst=LOAD_CONST(arg=2, lineno=12)
2025-02-17 09:54:56,684 - numba.core.byteflow - DEBUG - stack []
2025-02-17 09:54:56,684 - numba.core.byteflow - DEBUG - dispatch pc=20, inst=STORE_FAST(arg=9, lineno=12)
2025-02-17 09:54:56,684 - numba.core.byteflow - DEBUG - stack ['$const18.6']
2025-02-17 09:54:56,684 - numba.core.byteflow - DEBUG - dispatch pc=22, inst=LOAD_CONST(arg=1, lineno=13)
2025-02-17 09:54:56,684 - numba.core.byteflow - DEBUG - stack []
2025-02-17 09:54:56,685 - numba.core.byteflow - DEBUG - dispatch pc=24, inst=STORE_FAST(arg=10, lineno=13)
2025-02-17 09:54:56,685 - numba.core.byteflow - DEBUG - stack ['$const22.7']
2025-02-17 09:54:56,685 - numba.core.byteflow - DEBUG - dispatch pc=26, inst=LOAD_CONST(arg=1, lineno=14)
2025-02-17 09:54:56,685 - numba.core.byteflow - DEBUG - stack []
2025-02-17 09:54:56,685 - numba.core.byteflow - DEBUG - dispatch pc=28, inst=STORE_FAST(arg=11, lineno=14)
2025-02-17 09:54:56,685 - numba.core.byteflow - DEBUG - stack ['$const26.8']
2025-02-17 09:54:56,686 - numba.core.byteflow - DEBUG - dispatch pc=30, inst=LOAD_CONST(arg=2, lineno=15)
2025-02-17 09:54:56,686 - numba.core.byteflow - DEBUG - stack []
2025-02-17 09:54:56,686 - numba.core.byteflow - DEBUG - dispatch pc=32, inst=STORE_FAST(arg=12, lineno=15)
2025-02-17 09:54:56,686 - numba.core.byteflow - DEBUG - stack ['$const30.9']
2025-02-17 09:54:56,686 - numba.core.byteflow - DEBUG - dispatch pc=34, inst=LOAD_CONST(arg=1, lineno=16)
2025-02-17 09:54:56,686 - numba.core.byteflow - DEBUG - stack []
2025-02-17 09:54:56,687 - numba.core.byteflow - DEBUG - dispatch pc=36, inst=STORE_FAST(arg=13, lineno=16)
2025-02-17 09:54:56,687 - numba.core.byteflow - DEBUG - stack ['$const34.10']
2025-02-17 09:54:56,687 - numba.core.byteflow - DEBUG - dispatch pc=38, inst=LOAD_CONST(arg=1, lineno=17)
2025-02-17 09:54:56,687 - numba.core.byteflow - DEBUG - stack []
2025-02-17 09:54:56,687 - numba.core.byteflow - DEBUG - dispatch pc=40, inst=STORE_FAST(arg=14, lineno=17)
2025-02-17 09:54:56,687 - numba.core.byteflow - DEBUG - stack ['$const38.11']
2025-02-17 09:54:56,688 - numba.core.byteflow - DEBUG - dispatch pc=42, inst=LOAD_FAST(arg=2, lineno=19)
2025-02-17 09:54:56,688 - numba.core.byteflow - DEBUG - stack []
2025-02-17 09:54:56,688 - numba.core.byteflow - DEBUG - dispatch pc=44, inst=LOAD_ATTR(arg=1, lineno=19)
2025-02-17 09:54:56,688 - numba.core.byteflow - DEBUG - stack ['$interp_win42.12']
2025-02-17 09:54:56,688 - numba.core.byteflow - DEBUG - dispatch pc=46, inst=LOAD_CONST(arg=2, lineno=19)
2025-02-17 09:54:56,689 - numba.core.byteflow - DEBUG - stack ['$44load_attr.13']
2025-02-17 09:54:56,689 - numba.core.byteflow - DEBUG - dispatch pc=48, inst=BINARY_SUBSCR(arg=None, lineno=19)
2025-02-17 09:54:56,689 - numba.core.byteflow - DEBUG - stack ['$44load_attr.13', '$const46.14']
2025-02-17 09:54:56,689 - numba.core.byteflow - DEBUG - dispatch pc=50, inst=STORE_FAST(arg=15, lineno=19)
2025-02-17 09:54:56,689 - numba.core.byteflow - DEBUG - stack ['$48binary_subscr.15']
2025-02-17 09:54:56,689 - numba.core.byteflow - DEBUG - dispatch pc=52, inst=LOAD_FAST(arg=0, lineno=20)
2025-02-17 09:54:56,690 - numba.core.byteflow - DEBUG - stack []
2025-02-17 09:54:56,690 - numba.core.byteflow - DEBUG - dispatch pc=54, inst=LOAD_ATTR(arg=1, lineno=20)
2025-02-17 09:54:56,690 - numba.core.byteflow - DEBUG - stack ['$x52.16']
2025-02-17 09:54:56,690 - numba.core.byteflow - DEBUG - dispatch pc=56, inst=LOAD_CONST(arg=2, lineno=20)
2025-02-17 09:54:56,690 - numba.core.byteflow - DEBUG - stack ['$54load_attr.17']
2025-02-17 09:54:56,691 - numba.core.byteflow - DEBUG - dispatch pc=58, inst=BINARY_SUBSCR(arg=None, lineno=20)
2025-02-17 09:54:56,691 - numba.core.byteflow - DEBUG - stack ['$54load_attr.17', '$const56.18']
2025-02-17 09:54:56,691 - numba.core.byteflow - DEBUG - dispatch pc=60, inst=STORE_FAST(arg=16, lineno=20)
2025-02-17 09:54:56,691 - numba.core.byteflow - DEBUG - stack ['$58binary_subscr.19']
2025-02-17 09:54:56,691 - numba.core.byteflow - DEBUG - dispatch pc=62, inst=LOAD_FAST(arg=1, lineno=21)
2025-02-17 09:54:56,691 - numba.core.byteflow - DEBUG - stack []
2025-02-17 09:54:56,692 - numba.core.byteflow - DEBUG - dispatch pc=64, inst=LOAD_ATTR(arg=1, lineno=21)
2025-02-17 09:54:56,692 - numba.core.byteflow - DEBUG - stack ['$t_out62.20']
2025-02-17 09:54:56,692 - numba.core.byteflow - DEBUG - dispatch pc=66, inst=LOAD_CONST(arg=2, lineno=21)
2025-02-17 09:54:56,692 - numba.core.byteflow - DEBUG - stack ['$64load_attr.21']
2025-02-17 09:54:56,692 - numba.core.byteflow - DEBUG - dispatch pc=68, inst=BINARY_SUBSCR(arg=None, lineno=21)
2025-02-17 09:54:56,692 - numba.core.byteflow - DEBUG - stack ['$64load_attr.21', '$const66.22']
2025-02-17 09:54:56,693 - numba.core.byteflow - DEBUG - dispatch pc=70, inst=STORE_FAST(arg=17, lineno=21)
2025-02-17 09:54:56,693 - numba.core.byteflow - DEBUG - stack ['$68binary_subscr.23']
2025-02-17 09:54:56,693 - numba.core.byteflow - DEBUG - dispatch pc=72, inst=LOAD_GLOBAL(arg=2, lineno=23)
2025-02-17 09:54:56,693 - numba.core.byteflow - DEBUG - stack []
2025-02-17 09:54:56,693 - numba.core.byteflow - DEBUG - dispatch pc=74, inst=LOAD_FAST(arg=17, lineno=23)
2025-02-17 09:54:56,693 - numba.core.byteflow - DEBUG - stack ['$72load_global.24']
2025-02-17 09:54:56,694 - numba.core.byteflow - DEBUG - dispatch pc=76, inst=CALL_FUNCTION(arg=1, lineno=23)
2025-02-17 09:54:56,694 - numba.core.byteflow - DEBUG - stack ['$72load_global.24', '$n_out74.25']
2025-02-17 09:54:56,694 - numba.core.byteflow - DEBUG - dispatch pc=78, inst=GET_ITER(arg=None, lineno=23)
2025-02-17 09:54:56,694 - numba.core.byteflow - DEBUG - stack ['$76call_function.26']
2025-02-17 09:54:56,694 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$78get_iter.27',), blockstack=(), npush=0)]
2025-02-17 09:54:56,695 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1)])
2025-02-17 09:54:56,695 - numba.core.byteflow - DEBUG - stack: ['$phi80.0']
2025-02-17 09:54:56,695 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=80 nstack_initial=1)
2025-02-17 09:54:56,695 - numba.core.byteflow - DEBUG - dispatch pc=80, inst=FOR_ITER(arg=148, lineno=23)
2025-02-17 09:54:56,695 - numba.core.byteflow - DEBUG - stack ['$phi80.0']
2025-02-17 09:54:56,695 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=378, stack=(), blockstack=(), npush=0), Edge(pc=82, stack=('$phi80.0', '$80for_iter.2'), blockstack=(), npush=0)]
2025-02-17 09:54:56,695 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=378 nstack_initial=0), State(pc_initial=82 nstack_initial=2)])
2025-02-17 09:54:56,696 - numba.core.byteflow - DEBUG - stack: []
2025-02-17 09:54:56,696 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=378 nstack_initial=0)
2025-02-17 09:54:56,696 - numba.core.byteflow - DEBUG - dispatch pc=378, inst=LOAD_CONST(arg=0, lineno=23)
2025-02-17 09:54:56,696 - numba.core.byteflow - DEBUG - stack []
2025-02-17 09:54:56,696 - numba.core.byteflow - DEBUG - dispatch pc=380, inst=RETURN_VALUE(arg=None, lineno=23)
2025-02-17 09:54:56,696 - numba.core.byteflow - DEBUG - stack ['$const378.0']
2025-02-17 09:54:56,696 - numba.core.byteflow - DEBUG - end state. edges=[]
2025-02-17 09:54:56,696 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=82 nstack_initial=2)])
2025-02-17 09:54:56,696 - numba.core.byteflow - DEBUG - stack: ['$phi82.0', '$phi82.1']
2025-02-17 09:54:56,696 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=82 nstack_initial=2)
2025-02-17 09:54:56,697 - numba.core.byteflow - DEBUG - dispatch pc=82, inst=STORE_FAST(arg=18, lineno=23)
2025-02-17 09:54:56,697 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$phi82.1']
2025-02-17 09:54:56,697 - numba.core.byteflow - DEBUG - dispatch pc=84, inst=LOAD_FAST(arg=1, lineno=24)
2025-02-17 09:54:56,697 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-02-17 09:54:56,697 - numba.core.byteflow - DEBUG - dispatch pc=86, inst=LOAD_FAST(arg=18, lineno=24)
2025-02-17 09:54:56,697 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$t_out84.2']
2025-02-17 09:54:56,697 - numba.core.byteflow - DEBUG - dispatch pc=88, inst=BINARY_SUBSCR(arg=None, lineno=24)
2025-02-17 09:54:56,697 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$t_out84.2', '$t86.3']
2025-02-17 09:54:56,697 - numba.core.byteflow - DEBUG - dispatch pc=90, inst=STORE_FAST(arg=8, lineno=24)
2025-02-17 09:54:56,698 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$88binary_subscr.4']
2025-02-17 09:54:56,698 - numba.core.byteflow - DEBUG - dispatch pc=92, inst=LOAD_GLOBAL(arg=0, lineno=27)
2025-02-17 09:54:56,698 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-02-17 09:54:56,698 - numba.core.byteflow - DEBUG - dispatch pc=94, inst=LOAD_FAST(arg=8, lineno=27)
2025-02-17 09:54:56,698 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$92load_global.5']
2025-02-17 09:54:56,698 - numba.core.byteflow - DEBUG - dispatch pc=96, inst=CALL_FUNCTION(arg=1, lineno=27)
2025-02-17 09:54:56,698 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$92load_global.5', '$time_register94.6']
2025-02-17 09:54:56,698 - numba.core.byteflow - DEBUG - dispatch pc=98, inst=STORE_FAST(arg=9, lineno=27)
2025-02-17 09:54:56,698 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$96call_function.7']
2025-02-17 09:54:56,699 - numba.core.byteflow - DEBUG - dispatch pc=100, inst=LOAD_FAST(arg=5, lineno=30)
2025-02-17 09:54:56,699 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-02-17 09:54:56,699 - numba.core.byteflow - DEBUG - dispatch pc=102, inst=LOAD_FAST(arg=8, lineno=30)
2025-02-17 09:54:56,699 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$scale100.8']
2025-02-17 09:54:56,699 - numba.core.byteflow - DEBUG - dispatch pc=104, inst=LOAD_FAST(arg=9, lineno=30)
2025-02-17 09:54:56,699 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$scale100.8', '$time_register102.9']
2025-02-17 09:54:56,699 - numba.core.byteflow - DEBUG - dispatch pc=106, inst=BINARY_SUBTRACT(arg=None, lineno=30)
2025-02-17 09:54:56,699 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$scale100.8', '$time_register102.9', '$n104.10']
2025-02-17 09:54:56,699 - numba.core.byteflow - DEBUG - dispatch pc=108, inst=BINARY_MULTIPLY(arg=None, lineno=30)
2025-02-17 09:54:56,699 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$scale100.8', '$106binary_subtract.11']
2025-02-17 09:54:56,700 - numba.core.byteflow - DEBUG - dispatch pc=110, inst=STORE_FAST(arg=10, lineno=30)
2025-02-17 09:54:56,700 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$108binary_multiply.12']
2025-02-17 09:54:56,700 - numba.core.byteflow - DEBUG - dispatch pc=112, inst=LOAD_FAST(arg=10, lineno=33)
2025-02-17 09:54:56,700 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-02-17 09:54:56,700 - numba.core.byteflow - DEBUG - dispatch pc=114, inst=LOAD_FAST(arg=4, lineno=33)
2025-02-17 09:54:56,700 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$frac112.13']
2025-02-17 09:54:56,700 - numba.core.byteflow - DEBUG - dispatch pc=116, inst=BINARY_MULTIPLY(arg=None, lineno=33)
2025-02-17 09:54:56,700 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$frac112.13', '$num_table114.14']
2025-02-17 09:54:56,700 - numba.core.byteflow - DEBUG - dispatch pc=118, inst=STORE_FAST(arg=11, lineno=33)
2025-02-17 09:54:56,701 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$116binary_multiply.15']
2025-02-17 09:54:56,701 - numba.core.byteflow - DEBUG - dispatch pc=120, inst=LOAD_GLOBAL(arg=0, lineno=34)
2025-02-17 09:54:56,701 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-02-17 09:54:56,701 - numba.core.byteflow - DEBUG - dispatch pc=122, inst=LOAD_FAST(arg=11, lineno=34)
2025-02-17 09:54:56,701 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$120load_global.16']
2025-02-17 09:54:56,701 - numba.core.byteflow - DEBUG - dispatch pc=124, inst=CALL_FUNCTION(arg=1, lineno=34)
2025-02-17 09:54:56,701 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$120load_global.16', '$index_frac122.17']
2025-02-17 09:54:56,701 - numba.core.byteflow - DEBUG - dispatch pc=126, inst=STORE_FAST(arg=12, lineno=34)
2025-02-17 09:54:56,702 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$124call_function.18']
2025-02-17 09:54:56,702 - numba.core.byteflow - DEBUG - dispatch pc=128, inst=LOAD_FAST(arg=11, lineno=37)
2025-02-17 09:54:56,702 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-02-17 09:54:56,703 - numba.core.byteflow - DEBUG - dispatch pc=130, inst=LOAD_FAST(arg=12, lineno=37)
2025-02-17 09:54:56,703 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$index_frac128.19']
2025-02-17 09:54:56,703 - numba.core.byteflow - DEBUG - dispatch pc=132, inst=BINARY_SUBTRACT(arg=None, lineno=37)
2025-02-17 09:54:56,703 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$index_frac128.19', '$offset130.20']
2025-02-17 09:54:56,704 - numba.core.byteflow - DEBUG - dispatch pc=134, inst=STORE_FAST(arg=13, lineno=37)
2025-02-17 09:54:56,704 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$132binary_subtract.21']
2025-02-17 09:54:56,704 - numba.core.byteflow - DEBUG - dispatch pc=136, inst=LOAD_GLOBAL(arg=3, lineno=40)
2025-02-17 09:54:56,704 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-02-17 09:54:56,704 - numba.core.byteflow - DEBUG - dispatch pc=138, inst=LOAD_FAST(arg=9, lineno=40)
2025-02-17 09:54:56,705 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$136load_global.22']
2025-02-17 09:54:56,705 - numba.core.byteflow - DEBUG - dispatch pc=140, inst=LOAD_CONST(arg=3, lineno=40)
2025-02-17 09:54:56,705 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$136load_global.22', '$n138.23']
2025-02-17 09:54:56,705 - numba.core.byteflow - DEBUG - dispatch pc=142, inst=BINARY_ADD(arg=None, lineno=40)
2025-02-17 09:54:56,705 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$136load_global.22', '$n138.23', '$const140.24']
2025-02-17 09:54:56,706 - numba.core.byteflow - DEBUG - dispatch pc=144, inst=LOAD_FAST(arg=15, lineno=40)
2025-02-17 09:54:56,706 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$136load_global.22', '$142binary_add.25']
2025-02-17 09:54:56,706 - numba.core.byteflow - DEBUG - dispatch pc=146, inst=LOAD_FAST(arg=12, lineno=40)
2025-02-17 09:54:56,706 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$136load_global.22', '$142binary_add.25', '$nwin144.26']
2025-02-17 09:54:56,707 - numba.core.byteflow - DEBUG - dispatch pc=148, inst=BINARY_SUBTRACT(arg=None, lineno=40)
2025-02-17 09:54:56,707 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$136load_global.22', '$142binary_add.25', '$nwin144.26', '$offset146.27']
2025-02-17 09:54:56,707 - numba.core.byteflow - DEBUG - dispatch pc=150, inst=LOAD_FAST(arg=7, lineno=40)
2025-02-17 09:54:56,707 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$136load_global.22', '$142binary_add.25', '$148binary_subtract.28']
2025-02-17 09:54:56,708 - numba.core.byteflow - DEBUG - dispatch pc=152, inst=BINARY_FLOOR_DIVIDE(arg=None, lineno=40)
2025-02-17 09:54:56,708 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$136load_global.22', '$142binary_add.25', '$148binary_subtract.28', '$index_step150.29']
2025-02-17 09:54:56,708 - numba.core.byteflow - DEBUG - dispatch pc=154, inst=CALL_FUNCTION(arg=2, lineno=40)
2025-02-17 09:54:56,708 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$136load_global.22', '$142binary_add.25', '$152binary_floor_divide.30']
2025-02-17 09:54:56,708 - numba.core.byteflow - DEBUG - dispatch pc=156, inst=STORE_FAST(arg=19, lineno=40)
2025-02-17 09:54:56,709 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$154call_function.31']
2025-02-17 09:54:56,709 - numba.core.byteflow - DEBUG - dispatch pc=158, inst=LOAD_GLOBAL(arg=4, lineno=41)
2025-02-17 09:54:56,709 - numba.core.byteflow - DEBUG - stack ['$phi82.0']
2025-02-17 09:54:56,709 - numba.core.byteflow - DEBUG - dispatch pc=160, inst=LOAD_FAST(arg=19, lineno=41)
2025-02-17 09:54:56,710 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$158load_global.32']
2025-02-17 09:54:56,710 - numba.core.byteflow - DEBUG - dispatch pc=162, inst=CALL_FUNCTION(arg=1, lineno=41)
2025-02-17 09:54:56,710 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$158load_global.32', '$i_max160.33']
2025-02-17 09:54:56,710 - numba.core.byteflow - DEBUG - dispatch pc=164, inst=GET_ITER(arg=None, lineno=41)
2025-02-17 09:54:56,711 - numba.core.byteflow - DEBUG - stack ['$phi82.0', '$162call_function.34']
2025-02-17 09:54:56,711 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=166, stack=('$phi82.0', '$164get_iter.35'), blockstack=(), npush=0)]
2025-02-17 09:54:56,711 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=166 nstack_initial=2)])
2025-02-17 09:54:56,711 - numba.core.byteflow - DEBUG - stack: ['$phi166.0', '$phi166.1']
2025-02-17 09:54:56,712 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=166 nstack_initial=2)
2025-02-17 09:54:56,712 - numba.core.byteflow - DEBUG - dispatch pc=166, inst=FOR_ITER(arg=34, lineno=41)
2025-02-17 09:54:56,712 - numba.core.byteflow - DEBUG - stack ['$phi166.0', '$phi166.1']
2025-02-17 09:54:56,712 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=236, stack=('$phi166.0',), blockstack=(), npush=0), Edge(pc=168, stack=('$phi166.0', '$phi166.1', '$166for_iter.3'), blockstack=(), npush=0)]
2025-02-17 09:54:56,713 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=236 nstack_initial=1), State(pc_initial=168 nstack_initial=3)])
2025-02-17 09:54:56,713 - numba.core.byteflow - DEBUG - stack: ['$phi236.0']
2025-02-17 09:54:56,713 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=236 nstack_initial=1)
2025-02-17 09:54:56,714 - numba.core.byteflow - DEBUG - dispatch pc=236, inst=LOAD_FAST(arg=5, lineno=50)
2025-02-17 09:54:56,714 - numba.core.byteflow - DEBUG - stack ['$phi236.0']
2025-02-17 09:54:56,714 - numba.core.byteflow - DEBUG - dispatch pc=238, inst=LOAD_FAST(arg=10, lineno=50)
2025-02-17 09:54:56,714 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$scale236.1']
2025-02-17 09:54:56,714 - numba.core.byteflow - DEBUG - dispatch pc=240, inst=BINARY_SUBTRACT(arg=None, lineno=50)
2025-02-17 09:54:56,715 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$scale236.1', '$frac238.2']
2025-02-17 09:54:56,715 - numba.core.byteflow - DEBUG - dispatch pc=242, inst=STORE_FAST(arg=10, lineno=50)
2025-02-17 09:54:56,715 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$240binary_subtract.3']
2025-02-17 09:54:56,715 - numba.core.byteflow - DEBUG - dispatch pc=244, inst=LOAD_FAST(arg=10, lineno=53)
2025-02-17 09:54:56,715 - numba.core.byteflow - DEBUG - stack ['$phi236.0']
2025-02-17 09:54:56,716 - numba.core.byteflow - DEBUG - dispatch pc=246, inst=LOAD_FAST(arg=4, lineno=53)
2025-02-17 09:54:56,716 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$frac244.4']
2025-02-17 09:54:56,716 - numba.core.byteflow - DEBUG - dispatch pc=248, inst=BINARY_MULTIPLY(arg=None, lineno=53)
2025-02-17 09:54:56,716 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$frac244.4', '$num_table246.5']
2025-02-17 09:54:56,717 - numba.core.byteflow - DEBUG - dispatch pc=250, inst=STORE_FAST(arg=11, lineno=53)
2025-02-17 09:54:56,717 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$248binary_multiply.6']
2025-02-17 09:54:56,717 - numba.core.byteflow - DEBUG - dispatch pc=252, inst=LOAD_GLOBAL(arg=0, lineno=54)
2025-02-17 09:54:56,717 - numba.core.byteflow - DEBUG - stack ['$phi236.0']
2025-02-17 09:54:56,717 - numba.core.byteflow - DEBUG - dispatch pc=254, inst=LOAD_FAST(arg=11, lineno=54)
2025-02-17 09:54:56,718 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$252load_global.7']
2025-02-17 09:54:56,718 - numba.core.byteflow - DEBUG - dispatch pc=256, inst=CALL_FUNCTION(arg=1, lineno=54)
2025-02-17 09:54:56,718 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$252load_global.7', '$index_frac254.8']
2025-02-17 09:54:56,718 - numba.core.byteflow - DEBUG - dispatch pc=258, inst=STORE_FAST(arg=12, lineno=54)
2025-02-17 09:54:56,719 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$256call_function.9']
2025-02-17 09:54:56,719 - numba.core.byteflow - DEBUG - dispatch pc=260, inst=LOAD_FAST(arg=11, lineno=57)
2025-02-17 09:54:56,719 - numba.core.byteflow - DEBUG - stack ['$phi236.0']
2025-02-17 09:54:56,719 - numba.core.byteflow - DEBUG - dispatch pc=262, inst=LOAD_FAST(arg=12, lineno=57)
2025-02-17 09:54:56,719 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$index_frac260.10']
2025-02-17 09:54:56,720 - numba.core.byteflow - DEBUG - dispatch pc=264, inst=BINARY_SUBTRACT(arg=None, lineno=57)
2025-02-17 09:54:56,720 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$index_frac260.10', '$offset262.11']
2025-02-17 09:54:56,720 - numba.core.byteflow - DEBUG - dispatch pc=266, inst=STORE_FAST(arg=13, lineno=57)
2025-02-17 09:54:56,720 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$264binary_subtract.12']
2025-02-17 09:54:56,721 - numba.core.byteflow - DEBUG - dispatch pc=268, inst=LOAD_GLOBAL(arg=3, lineno=60)
2025-02-17 09:54:56,721 - numba.core.byteflow - DEBUG - stack ['$phi236.0']
2025-02-17 09:54:56,721 - numba.core.byteflow - DEBUG - dispatch pc=270, inst=LOAD_FAST(arg=16, lineno=60)
2025-02-17 09:54:56,721 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$268load_global.13']
2025-02-17 09:54:56,721 - numba.core.byteflow - DEBUG - dispatch pc=272, inst=LOAD_FAST(arg=9, lineno=60)
2025-02-17 09:54:56,722 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$268load_global.13', '$n_orig270.14']
2025-02-17 09:54:56,722 - numba.core.byteflow - DEBUG - dispatch pc=274, inst=BINARY_SUBTRACT(arg=None, lineno=60)
2025-02-17 09:54:56,722 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$268load_global.13', '$n_orig270.14', '$n272.15']
2025-02-17 09:54:56,722 - numba.core.byteflow - DEBUG - dispatch pc=276, inst=LOAD_CONST(arg=3, lineno=60)
2025-02-17 09:54:56,723 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$268load_global.13', '$274binary_subtract.16']
2025-02-17 09:54:56,723 - numba.core.byteflow - DEBUG - dispatch pc=278, inst=BINARY_SUBTRACT(arg=None, lineno=60)
2025-02-17 09:54:56,723 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$268load_global.13', '$274binary_subtract.16', '$const276.17']
2025-02-17 09:54:56,723 - numba.core.byteflow - DEBUG - dispatch pc=280, inst=LOAD_FAST(arg=15, lineno=60)
2025-02-17 09:54:56,723 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$268load_global.13', '$278binary_subtract.18']
2025-02-17 09:54:56,724 - numba.core.byteflow - DEBUG - dispatch pc=282, inst=LOAD_FAST(arg=12, lineno=60)
2025-02-17 09:54:56,724 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$268load_global.13', '$278binary_subtract.18', '$nwin280.19']
2025-02-17 09:54:56,724 - numba.core.byteflow - DEBUG - dispatch pc=284, inst=BINARY_SUBTRACT(arg=None, lineno=60)
2025-02-17 09:54:56,724 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$268load_global.13', '$278binary_subtract.18', '$nwin280.19', '$offset282.20']
2025-02-17 09:54:56,725 - numba.core.byteflow - DEBUG - dispatch pc=286, inst=LOAD_FAST(arg=7, lineno=60)
2025-02-17 09:54:56,725 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$268load_global.13', '$278binary_subtract.18', '$284binary_subtract.21']
2025-02-17 09:54:56,725 - numba.core.byteflow - DEBUG - dispatch pc=288, inst=BINARY_FLOOR_DIVIDE(arg=None, lineno=60)
2025-02-17 09:54:56,725 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$268load_global.13', '$278binary_subtract.18', '$284binary_subtract.21', '$index_step286.22']
2025-02-17 09:54:56,726 - numba.core.byteflow - DEBUG - dispatch pc=290, inst=CALL_FUNCTION(arg=2, lineno=60)
2025-02-17 09:54:56,726 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$268load_global.13', '$278binary_subtract.18', '$288binary_floor_divide.23']
2025-02-17 09:54:56,726 - numba.core.byteflow - DEBUG - dispatch pc=292, inst=STORE_FAST(arg=21, lineno=60)
2025-02-17 09:54:56,726 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$290call_function.24']
2025-02-17 09:54:56,726 - numba.core.byteflow - DEBUG - dispatch pc=294, inst=LOAD_GLOBAL(arg=4, lineno=61)
2025-02-17 09:54:56,726 - numba.core.byteflow - DEBUG - stack ['$phi236.0']
2025-02-17 09:54:56,727 - numba.core.byteflow - DEBUG - dispatch pc=296, inst=LOAD_FAST(arg=21, lineno=61)
2025-02-17 09:54:56,727 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$294load_global.25']
2025-02-17 09:54:56,727 - numba.core.byteflow - DEBUG - dispatch pc=298, inst=CALL_FUNCTION(arg=1, lineno=61)
2025-02-17 09:54:56,727 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$294load_global.25', '$k_max296.26']
2025-02-17 09:54:56,727 - numba.core.byteflow - DEBUG - dispatch pc=300, inst=GET_ITER(arg=None, lineno=61)
2025-02-17 09:54:56,727 - numba.core.byteflow - DEBUG - stack ['$phi236.0', '$298call_function.27']
2025-02-17 09:54:56,728 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=302, stack=('$phi236.0', '$300get_iter.28'), blockstack=(), npush=0)]
2025-02-17 09:54:56,728 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=168 nstack_initial=3), State(pc_initial=302 nstack_initial=2)])
2025-02-17 09:54:56,728 - numba.core.byteflow - DEBUG - stack: ['$phi168.0', '$phi168.1', '$phi168.2']
2025-02-17 09:54:56,728 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=168 nstack_initial=3)
2025-02-17 09:54:56,728 - numba.core.byteflow - DEBUG - dispatch pc=168, inst=STORE_FAST(arg=20, lineno=41)
2025-02-17 09:54:56,728 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$phi168.2']
2025-02-17 09:54:56,729 - numba.core.byteflow - DEBUG - dispatch pc=170, inst=LOAD_FAST(arg=2, lineno=44)
2025-02-17 09:54:56,729 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1']
2025-02-17 09:54:56,729 - numba.core.byteflow - DEBUG - dispatch pc=172, inst=LOAD_FAST(arg=12, lineno=44)
2025-02-17 09:54:56,729 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$interp_win170.3']
2025-02-17 09:54:56,729 - numba.core.byteflow - DEBUG - dispatch pc=174, inst=LOAD_FAST(arg=20, lineno=44)
2025-02-17 09:54:56,729 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$interp_win170.3', '$offset172.4']
2025-02-17 09:54:56,730 - numba.core.byteflow - DEBUG - dispatch pc=176, inst=LOAD_FAST(arg=7, lineno=44)
2025-02-17 09:54:56,730 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$interp_win170.3', '$offset172.4', '$i174.5']
2025-02-17 09:54:56,730 - numba.core.byteflow - DEBUG - dispatch pc=178, inst=BINARY_MULTIPLY(arg=None, lineno=44)
2025-02-17 09:54:56,730 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$interp_win170.3', '$offset172.4', '$i174.5', '$index_step176.6']
2025-02-17 09:54:56,730 - numba.core.byteflow - DEBUG - dispatch pc=180, inst=BINARY_ADD(arg=None, lineno=44)
2025-02-17 09:54:56,730 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$interp_win170.3', '$offset172.4', '$178binary_multiply.7']
2025-02-17 09:54:56,731 - numba.core.byteflow - DEBUG - dispatch pc=182, inst=BINARY_SUBSCR(arg=None, lineno=44)
2025-02-17 09:54:56,731 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$interp_win170.3', '$180binary_add.8']
2025-02-17 09:54:56,731 - numba.core.byteflow - DEBUG - dispatch pc=184, inst=LOAD_FAST(arg=13, lineno=45)
2025-02-17 09:54:56,731 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$182binary_subscr.9']
2025-02-17 09:54:56,731 - numba.core.byteflow - DEBUG - dispatch pc=186, inst=LOAD_FAST(arg=3, lineno=45)
2025-02-17 09:54:56,731 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$182binary_subscr.9', '$eta184.10']
2025-02-17 09:54:56,732 - numba.core.byteflow - DEBUG - dispatch pc=188, inst=LOAD_FAST(arg=12, lineno=45)
2025-02-17 09:54:56,732 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$182binary_subscr.9', '$eta184.10', '$interp_delta186.11']
2025-02-17 09:54:56,732 - numba.core.byteflow - DEBUG - dispatch pc=190, inst=LOAD_FAST(arg=20, lineno=45)
2025-02-17 09:54:56,732 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$182binary_subscr.9', '$eta184.10', '$interp_delta186.11', '$offset188.12']
2025-02-17 09:54:56,732 - numba.core.byteflow - DEBUG - dispatch pc=192, inst=LOAD_FAST(arg=7, lineno=45)
2025-02-17 09:54:56,732 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$182binary_subscr.9', '$eta184.10', '$interp_delta186.11', '$offset188.12', '$i190.13']
2025-02-17 09:54:56,732 - numba.core.byteflow - DEBUG - dispatch pc=194, inst=BINARY_MULTIPLY(arg=None, lineno=45)
2025-02-17 09:54:56,733 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$182binary_subscr.9', '$eta184.10', '$interp_delta186.11', '$offset188.12', '$i190.13', '$index_step192.14']
2025-02-17 09:54:56,733 - numba.core.byteflow - DEBUG - dispatch pc=196, inst=BINARY_ADD(arg=None, lineno=45)
2025-02-17 09:54:56,733 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$182binary_subscr.9', '$eta184.10', '$interp_delta186.11', '$offset188.12', '$194binary_multiply.15']
2025-02-17 09:54:56,733 - numba.core.byteflow - DEBUG - dispatch pc=198, inst=BINARY_SUBSCR(arg=None, lineno=45)
2025-02-17 09:54:56,733 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$182binary_subscr.9', '$eta184.10', '$interp_delta186.11', '$196binary_add.16']
2025-02-17 09:54:56,733 - numba.core.byteflow - DEBUG - dispatch pc=200, inst=BINARY_MULTIPLY(arg=None, lineno=45)
2025-02-17 09:54:56,734 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$182binary_subscr.9', '$eta184.10', '$198binary_subscr.17']
2025-02-17 09:54:56,734 - numba.core.byteflow - DEBUG - dispatch pc=202, inst=BINARY_ADD(arg=None, lineno=44)
2025-02-17 09:54:56,734 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$182binary_subscr.9', '$200binary_multiply.18']
2025-02-17 09:54:56,734 - numba.core.byteflow - DEBUG - dispatch pc=204, inst=STORE_FAST(arg=14, lineno=43)
2025-02-17 09:54:56,734 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$202binary_add.19']
2025-02-17 09:54:56,734 - numba.core.byteflow - DEBUG - dispatch pc=206, inst=LOAD_FAST(arg=6, lineno=47)
2025-02-17 09:54:56,734 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1']
2025-02-17 09:54:56,734 - numba.core.byteflow - DEBUG - dispatch pc=208, inst=LOAD_FAST(arg=18, lineno=47)
2025-02-17 09:54:56,734 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$y206.20']
2025-02-17 09:54:56,734 - numba.core.byteflow - DEBUG - dispatch pc=210, inst=DUP_TOP_TWO(arg=None, lineno=47)
2025-02-17 09:54:56,734 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$y206.20', '$t208.21']
2025-02-17 09:54:56,734 - numba.core.byteflow - DEBUG - dispatch pc=212, inst=BINARY_SUBSCR(arg=None, lineno=47)
2025-02-17 09:54:56,734 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$y206.20', '$t208.21', '$210dup_top_two.22', '$210dup_top_two.23']
2025-02-17 09:54:56,735 - numba.core.byteflow - DEBUG - dispatch pc=214, inst=LOAD_FAST(arg=14, lineno=47)
2025-02-17 09:54:56,735 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$y206.20', '$t208.21', '$212binary_subscr.24']
2025-02-17 09:54:56,735 - numba.core.byteflow - DEBUG - dispatch pc=216, inst=LOAD_FAST(arg=0, lineno=47)
2025-02-17 09:54:56,735 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$y206.20', '$t208.21', '$212binary_subscr.24', '$weight214.25']
2025-02-17 09:54:56,735 - numba.core.byteflow - DEBUG - dispatch pc=218, inst=LOAD_FAST(arg=9, lineno=47)
2025-02-17 09:54:56,735 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$y206.20', '$t208.21', '$212binary_subscr.24', '$weight214.25', '$x216.26']
2025-02-17 09:54:56,735 - numba.core.byteflow - DEBUG - dispatch pc=220, inst=LOAD_FAST(arg=20, lineno=47)
2025-02-17 09:54:56,735 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$y206.20', '$t208.21', '$212binary_subscr.24', '$weight214.25', '$x216.26', '$n218.27']
2025-02-17 09:54:56,735 - numba.core.byteflow - DEBUG - dispatch pc=222, inst=BINARY_SUBTRACT(arg=None, lineno=47)
2025-02-17 09:54:56,735 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$y206.20', '$t208.21', '$212binary_subscr.24', '$weight214.25', '$x216.26', '$n218.27', '$i220.28']
2025-02-17 09:54:56,735 - numba.core.byteflow - DEBUG - dispatch pc=224, inst=BINARY_SUBSCR(arg=None, lineno=47)
2025-02-17 09:54:56,735 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$y206.20', '$t208.21', '$212binary_subscr.24', '$weight214.25', '$x216.26', '$222binary_subtract.29']
2025-02-17 09:54:56,735 - numba.core.byteflow - DEBUG - dispatch pc=226, inst=BINARY_MULTIPLY(arg=None, lineno=47)
2025-02-17 09:54:56,735 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$y206.20', '$t208.21', '$212binary_subscr.24', '$weight214.25', '$224binary_subscr.30']
2025-02-17 09:54:56,736 - numba.core.byteflow - DEBUG - dispatch pc=228, inst=INPLACE_ADD(arg=None, lineno=47)
2025-02-17 09:54:56,736 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$y206.20', '$t208.21', '$212binary_subscr.24', '$226binary_multiply.31']
2025-02-17 09:54:56,736 - numba.core.byteflow - DEBUG - dispatch pc=230, inst=ROT_THREE(arg=None, lineno=47)
2025-02-17 09:54:56,736 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$y206.20', '$t208.21', '$228inplace_add.32']
2025-02-17 09:54:56,736 - numba.core.byteflow - DEBUG - dispatch pc=232, inst=STORE_SUBSCR(arg=None, lineno=47)
2025-02-17 09:54:56,736 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1', '$228inplace_add.32', '$y206.20', '$t208.21']
2025-02-17 09:54:56,736 - numba.core.byteflow - DEBUG - dispatch pc=234, inst=JUMP_ABSOLUTE(arg=84, lineno=47)
2025-02-17 09:54:56,736 - numba.core.byteflow - DEBUG - stack ['$phi168.0', '$phi168.1']
2025-02-17 09:54:56,736 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=166, stack=('$phi168.0', '$phi168.1'), blockstack=(), npush=0)]
2025-02-17 09:54:56,736 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=302 nstack_initial=2), State(pc_initial=166 nstack_initial=2)])
2025-02-17 09:54:56,736 - numba.core.byteflow - DEBUG - stack: ['$phi302.0', '$phi302.1']
2025-02-17 09:54:56,736 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=302 nstack_initial=2)
2025-02-17 09:54:56,737 - numba.core.byteflow - DEBUG - dispatch pc=302, inst=FOR_ITER(arg=36, lineno=61)
2025-02-17 09:54:56,737 - numba.core.byteflow - DEBUG - stack ['$phi302.0', '$phi302.1']
2025-02-17 09:54:56,737 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=376, stack=('$phi302.0',), blockstack=(), npush=0), Edge(pc=304, stack=('$phi302.0', '$phi302.1', '$302for_iter.3'), blockstack=(), npush=0)]
2025-02-17 09:54:56,737 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=166 nstack_initial=2), State(pc_initial=376 nstack_initial=1), State(pc_initial=304 nstack_initial=3)])
2025-02-17 09:54:56,737 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=376 nstack_initial=1), State(pc_initial=304 nstack_initial=3)])
2025-02-17 09:54:56,737 - numba.core.byteflow - DEBUG - stack: ['$phi376.0']
2025-02-17 09:54:56,737 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=376 nstack_initial=1)
2025-02-17 09:54:56,737 - numba.core.byteflow - DEBUG - dispatch pc=376, inst=JUMP_ABSOLUTE(arg=41, lineno=61)
2025-02-17 09:54:56,737 - numba.core.byteflow - DEBUG - stack ['$phi376.0']
2025-02-17 09:54:56,737 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=80, stack=('$phi376.0',), blockstack=(), npush=0)]
2025-02-17 09:54:56,738 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=304 nstack_initial=3), State(pc_initial=80 nstack_initial=1)])
2025-02-17 09:54:56,738 - numba.core.byteflow - DEBUG - stack: ['$phi304.0', '$phi304.1', '$phi304.2']
2025-02-17 09:54:56,738 - numba.core.byteflow - DEBUG - state.pc_initial: State(pc_initial=304 nstack_initial=3)
2025-02-17 09:54:56,738 - numba.core.byteflow - DEBUG - dispatch pc=304, inst=STORE_FAST(arg=22, lineno=61)
2025-02-17 09:54:56,738 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$phi304.2']
2025-02-17 09:54:56,738 - numba.core.byteflow - DEBUG - dispatch pc=306, inst=LOAD_FAST(arg=2, lineno=63)
2025-02-17 09:54:56,738 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1']
2025-02-17 09:54:56,738 - numba.core.byteflow - DEBUG - dispatch pc=308, inst=LOAD_FAST(arg=12, lineno=63)
2025-02-17 09:54:56,738 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$interp_win306.3']
2025-02-17 09:54:56,738 - numba.core.byteflow - DEBUG - dispatch pc=310, inst=LOAD_FAST(arg=22, lineno=63)
2025-02-17 09:54:56,738 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$interp_win306.3', '$offset308.4']
2025-02-17 09:54:56,739 - numba.core.byteflow - DEBUG - dispatch pc=312, inst=LOAD_FAST(arg=7, lineno=63)
2025-02-17 09:54:56,739 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$interp_win306.3', '$offset308.4', '$k310.5']
2025-02-17 09:54:56,739 - numba.core.byteflow - DEBUG - dispatch pc=314, inst=BINARY_MULTIPLY(arg=None, lineno=63)
2025-02-17 09:54:56,739 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$interp_win306.3', '$offset308.4', '$k310.5', '$index_step312.6']
2025-02-17 09:54:56,739 - numba.core.byteflow - DEBUG - dispatch pc=316, inst=BINARY_ADD(arg=None, lineno=63)
2025-02-17 09:54:56,739 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$interp_win306.3', '$offset308.4', '$314binary_multiply.7']
2025-02-17 09:54:56,739 - numba.core.byteflow - DEBUG - dispatch pc=318, inst=BINARY_SUBSCR(arg=None, lineno=63)
2025-02-17 09:54:56,739 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$interp_win306.3', '$316binary_add.8']
2025-02-17 09:54:56,739 - numba.core.byteflow - DEBUG - dispatch pc=320, inst=LOAD_FAST(arg=13, lineno=64)
2025-02-17 09:54:56,739 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$318binary_subscr.9']
2025-02-17 09:54:56,739 - numba.core.byteflow - DEBUG - dispatch pc=322, inst=LOAD_FAST(arg=3, lineno=64)
2025-02-17 09:54:56,740 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$318binary_subscr.9', '$eta320.10']
2025-02-17 09:54:56,740 - numba.core.byteflow - DEBUG - dispatch pc=324, inst=LOAD_FAST(arg=12, lineno=64)
2025-02-17 09:54:56,740 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$318binary_subscr.9', '$eta320.10', '$interp_delta322.11']
2025-02-17 09:54:56,740 - numba.core.byteflow - DEBUG - dispatch pc=326, inst=LOAD_FAST(arg=22, lineno=64)
2025-02-17 09:54:56,740 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$318binary_subscr.9', '$eta320.10', '$interp_delta322.11', '$offset324.12']
2025-02-17 09:54:56,740 - numba.core.byteflow - DEBUG - dispatch pc=328, inst=LOAD_FAST(arg=7, lineno=64)
2025-02-17 09:54:56,740 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$318binary_subscr.9', '$eta320.10', '$interp_delta322.11', '$offset324.12', '$k326.13']
2025-02-17 09:54:56,740 - numba.core.byteflow - DEBUG - dispatch pc=330, inst=BINARY_MULTIPLY(arg=None, lineno=64)
2025-02-17 09:54:56,740 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$318binary_subscr.9', '$eta320.10', '$interp_delta322.11', '$offset324.12', '$k326.13', '$index_step328.14']
2025-02-17 09:54:56,740 - numba.core.byteflow - DEBUG - dispatch pc=332, inst=BINARY_ADD(arg=None, lineno=64)
2025-02-17 09:54:56,741 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$318binary_subscr.9', '$eta320.10', '$interp_delta322.11', '$offset324.12', '$330binary_multiply.15']
2025-02-17 09:54:56,741 - numba.core.byteflow - DEBUG - dispatch pc=334, inst=BINARY_SUBSCR(arg=None, lineno=64)
2025-02-17 09:54:56,741 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$318binary_subscr.9', '$eta320.10', '$interp_delta322.11', '$332binary_add.16']
2025-02-17 09:54:56,741 - numba.core.byteflow - DEBUG - dispatch pc=336, inst=BINARY_MULTIPLY(arg=None, lineno=64)
2025-02-17 09:54:56,741 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$318binary_subscr.9', '$eta320.10', '$334binary_subscr.17']
2025-02-17 09:54:56,741 - numba.core.byteflow - DEBUG - dispatch pc=338, inst=BINARY_ADD(arg=None, lineno=63)
2025-02-17 09:54:56,741 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$318binary_subscr.9', '$336binary_multiply.18']
2025-02-17 09:54:56,741 - numba.core.byteflow - DEBUG - dispatch pc=340, inst=STORE_FAST(arg=14, lineno=62)
2025-02-17 09:54:56,741 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$338binary_add.19']
2025-02-17 09:54:56,741 - numba.core.byteflow - DEBUG - dispatch pc=342, inst=LOAD_FAST(arg=6, lineno=66)
2025-02-17 09:54:56,741 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1']
2025-02-17 09:54:56,742 - numba.core.byteflow - DEBUG - dispatch pc=344, inst=LOAD_FAST(arg=18, lineno=66)
2025-02-17 09:54:56,742 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20']
2025-02-17 09:54:56,742 - numba.core.byteflow - DEBUG - dispatch pc=346, inst=DUP_TOP_TWO(arg=None, lineno=66)
2025-02-17 09:54:56,742 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21']
2025-02-17 09:54:56,742 - numba.core.byteflow - DEBUG - dispatch pc=348, inst=BINARY_SUBSCR(arg=None, lineno=66)
2025-02-17 09:54:56,742 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21', '$346dup_top_two.22', '$346dup_top_two.23']
2025-02-17 09:54:56,742 - numba.core.byteflow - DEBUG - dispatch pc=350, inst=LOAD_FAST(arg=14, lineno=66)
2025-02-17 09:54:56,742 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21', '$348binary_subscr.24']
2025-02-17 09:54:56,742 - numba.core.byteflow - DEBUG - dispatch pc=352, inst=LOAD_FAST(arg=0, lineno=66)
2025-02-17 09:54:56,742 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21', '$348binary_subscr.24', '$weight350.25']
2025-02-17 09:54:56,742 - numba.core.byteflow - DEBUG - dispatch pc=354, inst=LOAD_FAST(arg=9, lineno=66)
2025-02-17 09:54:56,743 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21', '$348binary_subscr.24', '$weight350.25', '$x352.26']
2025-02-17 09:54:56,743 - numba.core.byteflow - DEBUG - dispatch pc=356, inst=LOAD_FAST(arg=22, lineno=66)
2025-02-17 09:54:56,743 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21', '$348binary_subscr.24', '$weight350.25', '$x352.26', '$n354.27']
2025-02-17 09:54:56,743 - numba.core.byteflow - DEBUG - dispatch pc=358, inst=BINARY_ADD(arg=None, lineno=66)
2025-02-17 09:54:56,743 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21', '$348binary_subscr.24', '$weight350.25', '$x352.26', '$n354.27', '$k356.28']
2025-02-17 09:54:56,743 - numba.core.byteflow - DEBUG - dispatch pc=360, inst=LOAD_CONST(arg=3, lineno=66)
2025-02-17 09:54:56,743 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21', '$348binary_subscr.24', '$weight350.25', '$x352.26', '$358binary_add.29']
2025-02-17 09:54:56,743 - numba.core.byteflow - DEBUG - dispatch pc=362, inst=BINARY_ADD(arg=None, lineno=66)
2025-02-17 09:54:56,743 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21', '$348binary_subscr.24', '$weight350.25', '$x352.26', '$358binary_add.29', '$const360.30']
2025-02-17 09:54:56,743 - numba.core.byteflow - DEBUG - dispatch pc=364, inst=BINARY_SUBSCR(arg=None, lineno=66)
2025-02-17 09:54:56,744 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21', '$348binary_subscr.24', '$weight350.25', '$x352.26', '$362binary_add.31']
2025-02-17 09:54:56,744 - numba.core.byteflow - DEBUG - dispatch pc=366, inst=BINARY_MULTIPLY(arg=None, lineno=66)
2025-02-17 09:54:56,744 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21', '$348binary_subscr.24', '$weight350.25', '$364binary_subscr.32']
2025-02-17 09:54:56,744 - numba.core.byteflow - DEBUG - dispatch pc=368, inst=INPLACE_ADD(arg=None, lineno=66)
2025-02-17 09:54:56,744 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21', '$348binary_subscr.24', '$366binary_multiply.33']
2025-02-17 09:54:56,744 - numba.core.byteflow - DEBUG - dispatch pc=370, inst=ROT_THREE(arg=None, lineno=66)
2025-02-17 09:54:56,744 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$y342.20', '$t344.21', '$368inplace_add.34']
2025-02-17 09:54:56,744 - numba.core.byteflow - DEBUG - dispatch pc=372, inst=STORE_SUBSCR(arg=None, lineno=66)
2025-02-17 09:54:56,744 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1', '$368inplace_add.34', '$y342.20', '$t344.21']
2025-02-17 09:54:56,744 - numba.core.byteflow - DEBUG - dispatch pc=374, inst=JUMP_ABSOLUTE(arg=152, lineno=66)
2025-02-17 09:54:56,745 - numba.core.byteflow - DEBUG - stack ['$phi304.0', '$phi304.1']
2025-02-17 09:54:56,745 - numba.core.byteflow - DEBUG - end state. edges=[Edge(pc=302, stack=('$phi304.0', '$phi304.1'), blockstack=(), npush=0)]
2025-02-17 09:54:56,745 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=80 nstack_initial=1), State(pc_initial=302 nstack_initial=2)])
2025-02-17 09:54:56,745 - numba.core.byteflow - DEBUG - pending: deque([State(pc_initial=302 nstack_initial=2)])
2025-02-17 09:54:56,745 - numba.core.byteflow - DEBUG - -------------------------Prune PHIs-------------------------
2025-02-17 09:54:56,745 - numba.core.byteflow - DEBUG - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=80 nstack_initial=1): {'$phi80.0'},
             State(pc_initial=82 nstack_initial=2): {'$phi82.1'},
             State(pc_initial=166 nstack_initial=2): {'$phi166.1'},
             State(pc_initial=168 nstack_initial=3): {'$phi168.2'},
             State(pc_initial=236 nstack_initial=1): set(),
             State(pc_initial=302 nstack_initial=2): {'$phi302.1'},
             State(pc_initial=304 nstack_initial=3): {'$phi304.2'},
             State(pc_initial=376 nstack_initial=1): set(),
             State(pc_initial=378 nstack_initial=0): set()})
2025-02-17 09:54:56,746 - numba.core.byteflow - DEBUG - defmap: {'$phi166.1': State(pc_initial=82 nstack_initial=2),
 '$phi168.2': State(pc_initial=166 nstack_initial=2),
 '$phi302.1': State(pc_initial=236 nstack_initial=1),
 '$phi304.2': State(pc_initial=302 nstack_initial=2),
 '$phi80.0': State(pc_initial=0 nstack_initial=0),
 '$phi82.1': State(pc_initial=80 nstack_initial=1)}
2025-02-17 09:54:56,746 - numba.core.byteflow - DEBUG - phismap: defaultdict(<class 'set'>,
            {'$phi166.0': {('$phi168.0',
                            State(pc_initial=168 nstack_initial=3)),
                           ('$phi82.0', State(pc_initial=82 nstack_initial=2))},
             '$phi166.1': {('$164get_iter.35',
                            State(pc_initial=82 nstack_initial=2)),
                           ('$phi168.1',
                            State(pc_initial=168 nstack_initial=3))},
             '$phi168.0': {('$phi166.0',
                            State(pc_initial=166 nstack_initial=2))},
             '$phi168.1': {('$phi166.1',
                            State(pc_initial=166 nstack_initial=2))},
             '$phi168.2': {('$166for_iter.3',
                            State(pc_initial=166 nstack_initial=2))},
             '$phi236.0': {('$phi166.0',
                            State(pc_initial=166 nstack_initial=2))},
             '$phi302.0': {('$phi236.0',
                            State(pc_initial=236 nstack_initial=1)),
                           ('$phi304.0',
                            State(pc_initial=304 nstack_initial=3))},
             '$phi302.1': {('$300get_iter.28',
                            State(pc_initial=236 nstack_initial=1)),
                           ('$phi304.1',
                            State(pc_initial=304 nstack_initial=3))},
             '$phi304.0': {('$phi302.0',
                            State(pc_initial=302 nstack_initial=2))},
             '$phi304.1': {('$phi302.1',
                            State(pc_initial=302 nstack_initial=2))},
             '$phi304.2': {('$302for_iter.3',
                            State(pc_initial=302 nstack_initial=2))},
             '$phi376.0': {('$phi302.0',
                            State(pc_initial=302 nstack_initial=2))},
             '$phi80.0': {('$78get_iter.27',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi376.0',
                           State(pc_initial=376 nstack_initial=1))},
             '$phi82.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-02-17 09:54:56,747 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi166.0': {('$phi166.0',
                            State(pc_initial=166 nstack_initial=2)),
                           ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi166.1': {('$164get_iter.35',
                            State(pc_initial=82 nstack_initial=2)),
                           ('$phi166.1',
                            State(pc_initial=166 nstack_initial=2))},
             '$phi168.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi168.1': {('$164get_iter.35',
                            State(pc_initial=82 nstack_initial=2))},
             '$phi168.2': {('$166for_iter.3',
                            State(pc_initial=166 nstack_initial=2))},
             '$phi236.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi302.0': {('$phi302.0',
                            State(pc_initial=302 nstack_initial=2)),
                           ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi302.1': {('$300get_iter.28',
                            State(pc_initial=236 nstack_initial=1)),
                           ('$phi302.1',
                            State(pc_initial=302 nstack_initial=2))},
             '$phi304.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi304.1': {('$300get_iter.28',
                            State(pc_initial=236 nstack_initial=1))},
             '$phi304.2': {('$302for_iter.3',
                            State(pc_initial=302 nstack_initial=2))},
             '$phi376.0': {('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi80.0': {('$78get_iter.27',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi80.0', State(pc_initial=80 nstack_initial=1))},
             '$phi82.0': {('$78get_iter.27',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-02-17 09:54:56,748 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi166.0': {('$78get_iter.27',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi166.1': {('$164get_iter.35',
                            State(pc_initial=82 nstack_initial=2))},
             '$phi168.0': {('$78get_iter.27',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi168.1': {('$164get_iter.35',
                            State(pc_initial=82 nstack_initial=2))},
             '$phi168.2': {('$166for_iter.3',
                            State(pc_initial=166 nstack_initial=2))},
             '$phi236.0': {('$78get_iter.27',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi302.0': {('$78get_iter.27',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi302.1': {('$300get_iter.28',
                            State(pc_initial=236 nstack_initial=1))},
             '$phi304.0': {('$78get_iter.27',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi304.1': {('$300get_iter.28',
                            State(pc_initial=236 nstack_initial=1))},
             '$phi304.2': {('$302for_iter.3',
                            State(pc_initial=302 nstack_initial=2))},
             '$phi376.0': {('$78get_iter.27',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$78get_iter.27',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.27',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-02-17 09:54:56,748 - numba.core.byteflow - DEBUG - changing phismap: defaultdict(<class 'set'>,
            {'$phi166.0': {('$78get_iter.27',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi166.1': {('$164get_iter.35',
                            State(pc_initial=82 nstack_initial=2))},
             '$phi168.0': {('$78get_iter.27',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi168.1': {('$164get_iter.35',
                            State(pc_initial=82 nstack_initial=2))},
             '$phi168.2': {('$166for_iter.3',
                            State(pc_initial=166 nstack_initial=2))},
             '$phi236.0': {('$78get_iter.27',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi302.0': {('$78get_iter.27',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi302.1': {('$300get_iter.28',
                            State(pc_initial=236 nstack_initial=1))},
             '$phi304.0': {('$78get_iter.27',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi304.1': {('$300get_iter.28',
                            State(pc_initial=236 nstack_initial=1))},
             '$phi304.2': {('$302for_iter.3',
                            State(pc_initial=302 nstack_initial=2))},
             '$phi376.0': {('$78get_iter.27',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi80.0': {('$78get_iter.27',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.0': {('$78get_iter.27',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi82.1': {('$80for_iter.2',
                           State(pc_initial=80 nstack_initial=1))}})
2025-02-17 09:54:56,749 - numba.core.byteflow - DEBUG - keep phismap: {'$phi166.1': {('$164get_iter.35', State(pc_initial=82 nstack_initial=2))},
 '$phi168.2': {('$166for_iter.3', State(pc_initial=166 nstack_initial=2))},
 '$phi302.1': {('$300get_iter.28', State(pc_initial=236 nstack_initial=1))},
 '$phi304.2': {('$302for_iter.3', State(pc_initial=302 nstack_initial=2))},
 '$phi80.0': {('$78get_iter.27', State(pc_initial=0 nstack_initial=0))},
 '$phi82.1': {('$80for_iter.2', State(pc_initial=80 nstack_initial=1))}}
2025-02-17 09:54:56,749 - numba.core.byteflow - DEBUG - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi80.0': '$78get_iter.27'},
             State(pc_initial=80 nstack_initial=1): {'$phi82.1': '$80for_iter.2'},
             State(pc_initial=82 nstack_initial=2): {'$phi166.1': '$164get_iter.35'},
             State(pc_initial=166 nstack_initial=2): {'$phi168.2': '$166for_iter.3'},
             State(pc_initial=236 nstack_initial=1): {'$phi302.1': '$300get_iter.28'},
             State(pc_initial=302 nstack_initial=2): {'$phi304.2': '$302for_iter.3'}})
2025-02-17 09:54:56,750 - numba.core.byteflow - DEBUG - ----------------------DONE Prune PHIs-----------------------
2025-02-17 09:54:56,750 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$scale4.1'}), (6, {'res': '$num_table6.2'}), (8, {'lhs': '$scale4.1', 'rhs': '$num_table6.2', 'res': '$8binary_multiply.3'}), (10, {'func': '$2load_global.0', 'args': ['$8binary_multiply.3'], 'res': '$10call_function.4'}), (12, {'value': '$10call_function.4'}), (14, {'res': '$const14.5'}), (16, {'value': '$const14.5'}), (18, {'res': '$const18.6'}), (20, {'value': '$const18.6'}), (22, {'res': '$const22.7'}), (24, {'value': '$const22.7'}), (26, {'res': '$const26.8'}), (28, {'value': '$const26.8'}), (30, {'res': '$const30.9'}), (32, {'value': '$const30.9'}), (34, {'res': '$const34.10'}), (36, {'value': '$const34.10'}), (38, {'res': '$const38.11'}), (40, {'value': '$const38.11'}), (42, {'res': '$interp_win42.12'}), (44, {'item': '$interp_win42.12', 'res': '$44load_attr.13'}), (46, {'res': '$const46.14'}), (48, {'index': '$const46.14', 'target': '$44load_attr.13', 'res': '$48binary_subscr.15'}), (50, {'value': '$48binary_subscr.15'}), (52, {'res': '$x52.16'}), (54, {'item': '$x52.16', 'res': '$54load_attr.17'}), (56, {'res': '$const56.18'}), (58, {'index': '$const56.18', 'target': '$54load_attr.17', 'res': '$58binary_subscr.19'}), (60, {'value': '$58binary_subscr.19'}), (62, {'res': '$t_out62.20'}), (64, {'item': '$t_out62.20', 'res': '$64load_attr.21'}), (66, {'res': '$const66.22'}), (68, {'index': '$const66.22', 'target': '$64load_attr.21', 'res': '$68binary_subscr.23'}), (70, {'value': '$68binary_subscr.23'}), (72, {'res': '$72load_global.24'}), (74, {'res': '$n_out74.25'}), (76, {'func': '$72load_global.24', 'args': ['$n_out74.25'], 'res': '$76call_function.26'}), (78, {'value': '$76call_function.26', 'res': '$78get_iter.27'})), outgoing_phis={'$phi80.0': '$78get_iter.27'}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$78get_iter.27',)})
2025-02-17 09:54:56,750 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=80 nstack_initial=1):
AdaptBlockInfo(insts=((80, {'iterator': '$phi80.0', 'pair': '$80for_iter.1', 'indval': '$80for_iter.2', 'pred': '$80for_iter.3'}),), outgoing_phis={'$phi82.1': '$80for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={378: (), 82: ('$phi80.0', '$80for_iter.2')})
2025-02-17 09:54:56,750 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=82 nstack_initial=2):
AdaptBlockInfo(insts=((82, {'value': '$phi82.1'}), (84, {'res': '$t_out84.2'}), (86, {'res': '$t86.3'}), (88, {'index': '$t86.3', 'target': '$t_out84.2', 'res': '$88binary_subscr.4'}), (90, {'value': '$88binary_subscr.4'}), (92, {'res': '$92load_global.5'}), (94, {'res': '$time_register94.6'}), (96, {'func': '$92load_global.5', 'args': ['$time_register94.6'], 'res': '$96call_function.7'}), (98, {'value': '$96call_function.7'}), (100, {'res': '$scale100.8'}), (102, {'res': '$time_register102.9'}), (104, {'res': '$n104.10'}), (106, {'lhs': '$time_register102.9', 'rhs': '$n104.10', 'res': '$106binary_subtract.11'}), (108, {'lhs': '$scale100.8', 'rhs': '$106binary_subtract.11', 'res': '$108binary_multiply.12'}), (110, {'value': '$108binary_multiply.12'}), (112, {'res': '$frac112.13'}), (114, {'res': '$num_table114.14'}), (116, {'lhs': '$frac112.13', 'rhs': '$num_table114.14', 'res': '$116binary_multiply.15'}), (118, {'value': '$116binary_multiply.15'}), (120, {'res': '$120load_global.16'}), (122, {'res': '$index_frac122.17'}), (124, {'func': '$120load_global.16', 'args': ['$index_frac122.17'], 'res': '$124call_function.18'}), (126, {'value': '$124call_function.18'}), (128, {'res': '$index_frac128.19'}), (130, {'res': '$offset130.20'}), (132, {'lhs': '$index_frac128.19', 'rhs': '$offset130.20', 'res': '$132binary_subtract.21'}), (134, {'value': '$132binary_subtract.21'}), (136, {'res': '$136load_global.22'}), (138, {'res': '$n138.23'}), (140, {'res': '$const140.24'}), (142, {'lhs': '$n138.23', 'rhs': '$const140.24', 'res': '$142binary_add.25'}), (144, {'res': '$nwin144.26'}), (146, {'res': '$offset146.27'}), (148, {'lhs': '$nwin144.26', 'rhs': '$offset146.27', 'res': '$148binary_subtract.28'}), (150, {'res': '$index_step150.29'}), (152, {'lhs': '$148binary_subtract.28', 'rhs': '$index_step150.29', 'res': '$152binary_floor_divide.30'}), (154, {'func': '$136load_global.22', 'args': ['$142binary_add.25', '$152binary_floor_divide.30'], 'res': '$154call_function.31'}), (156, {'value': '$154call_function.31'}), (158, {'res': '$158load_global.32'}), (160, {'res': '$i_max160.33'}), (162, {'func': '$158load_global.32', 'args': ['$i_max160.33'], 'res': '$162call_function.34'}), (164, {'value': '$162call_function.34', 'res': '$164get_iter.35'})), outgoing_phis={'$phi166.1': '$164get_iter.35'}, blockstack=(), active_try_block=None, outgoing_edgepushed={166: ('$phi82.0', '$164get_iter.35')})
2025-02-17 09:54:56,750 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=166 nstack_initial=2):
AdaptBlockInfo(insts=((166, {'iterator': '$phi166.1', 'pair': '$166for_iter.2', 'indval': '$166for_iter.3', 'pred': '$166for_iter.4'}),), outgoing_phis={'$phi168.2': '$166for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={236: ('$phi166.0',), 168: ('$phi166.0', '$phi166.1', '$166for_iter.3')})
2025-02-17 09:54:56,750 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=168 nstack_initial=3):
AdaptBlockInfo(insts=((168, {'value': '$phi168.2'}), (170, {'res': '$interp_win170.3'}), (172, {'res': '$offset172.4'}), (174, {'res': '$i174.5'}), (176, {'res': '$index_step176.6'}), (178, {'lhs': '$i174.5', 'rhs': '$index_step176.6', 'res': '$178binary_multiply.7'}), (180, {'lhs': '$offset172.4', 'rhs': '$178binary_multiply.7', 'res': '$180binary_add.8'}), (182, {'index': '$180binary_add.8', 'target': '$interp_win170.3', 'res': '$182binary_subscr.9'}), (184, {'res': '$eta184.10'}), (186, {'res': '$interp_delta186.11'}), (188, {'res': '$offset188.12'}), (190, {'res': '$i190.13'}), (192, {'res': '$index_step192.14'}), (194, {'lhs': '$i190.13', 'rhs': '$index_step192.14', 'res': '$194binary_multiply.15'}), (196, {'lhs': '$offset188.12', 'rhs': '$194binary_multiply.15', 'res': '$196binary_add.16'}), (198, {'index': '$196binary_add.16', 'target': '$interp_delta186.11', 'res': '$198binary_subscr.17'}), (200, {'lhs': '$eta184.10', 'rhs': '$198binary_subscr.17', 'res': '$200binary_multiply.18'}), (202, {'lhs': '$182binary_subscr.9', 'rhs': '$200binary_multiply.18', 'res': '$202binary_add.19'}), (204, {'value': '$202binary_add.19'}), (206, {'res': '$y206.20'}), (208, {'res': '$t208.21'}), (210, {'orig': ['$y206.20', '$t208.21'], 'duped': ['$210dup_top_two.22', '$210dup_top_two.23']}), (212, {'index': '$210dup_top_two.23', 'target': '$210dup_top_two.22', 'res': '$212binary_subscr.24'}), (214, {'res': '$weight214.25'}), (216, {'res': '$x216.26'}), (218, {'res': '$n218.27'}), (220, {'res': '$i220.28'}), (222, {'lhs': '$n218.27', 'rhs': '$i220.28', 'res': '$222binary_subtract.29'}), (224, {'index': '$222binary_subtract.29', 'target': '$x216.26', 'res': '$224binary_subscr.30'}), (226, {'lhs': '$weight214.25', 'rhs': '$224binary_subscr.30', 'res': '$226binary_multiply.31'}), (228, {'lhs': '$212binary_subscr.24', 'rhs': '$226binary_multiply.31', 'res': '$228inplace_add.32'}), (232, {'target': '$y206.20', 'index': '$t208.21', 'value': '$228inplace_add.32'}), (234, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={166: ('$phi168.0', '$phi168.1')})
2025-02-17 09:54:56,751 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=236 nstack_initial=1):
AdaptBlockInfo(insts=((236, {'res': '$scale236.1'}), (238, {'res': '$frac238.2'}), (240, {'lhs': '$scale236.1', 'rhs': '$frac238.2', 'res': '$240binary_subtract.3'}), (242, {'value': '$240binary_subtract.3'}), (244, {'res': '$frac244.4'}), (246, {'res': '$num_table246.5'}), (248, {'lhs': '$frac244.4', 'rhs': '$num_table246.5', 'res': '$248binary_multiply.6'}), (250, {'value': '$248binary_multiply.6'}), (252, {'res': '$252load_global.7'}), (254, {'res': '$index_frac254.8'}), (256, {'func': '$252load_global.7', 'args': ['$index_frac254.8'], 'res': '$256call_function.9'}), (258, {'value': '$256call_function.9'}), (260, {'res': '$index_frac260.10'}), (262, {'res': '$offset262.11'}), (264, {'lhs': '$index_frac260.10', 'rhs': '$offset262.11', 'res': '$264binary_subtract.12'}), (266, {'value': '$264binary_subtract.12'}), (268, {'res': '$268load_global.13'}), (270, {'res': '$n_orig270.14'}), (272, {'res': '$n272.15'}), (274, {'lhs': '$n_orig270.14', 'rhs': '$n272.15', 'res': '$274binary_subtract.16'}), (276, {'res': '$const276.17'}), (278, {'lhs': '$274binary_subtract.16', 'rhs': '$const276.17', 'res': '$278binary_subtract.18'}), (280, {'res': '$nwin280.19'}), (282, {'res': '$offset282.20'}), (284, {'lhs': '$nwin280.19', 'rhs': '$offset282.20', 'res': '$284binary_subtract.21'}), (286, {'res': '$index_step286.22'}), (288, {'lhs': '$284binary_subtract.21', 'rhs': '$index_step286.22', 'res': '$288binary_floor_divide.23'}), (290, {'func': '$268load_global.13', 'args': ['$278binary_subtract.18', '$288binary_floor_divide.23'], 'res': '$290call_function.24'}), (292, {'value': '$290call_function.24'}), (294, {'res': '$294load_global.25'}), (296, {'res': '$k_max296.26'}), (298, {'func': '$294load_global.25', 'args': ['$k_max296.26'], 'res': '$298call_function.27'}), (300, {'value': '$298call_function.27', 'res': '$300get_iter.28'})), outgoing_phis={'$phi302.1': '$300get_iter.28'}, blockstack=(), active_try_block=None, outgoing_edgepushed={302: ('$phi236.0', '$300get_iter.28')})
2025-02-17 09:54:56,751 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=302 nstack_initial=2):
AdaptBlockInfo(insts=((302, {'iterator': '$phi302.1', 'pair': '$302for_iter.2', 'indval': '$302for_iter.3', 'pred': '$302for_iter.4'}),), outgoing_phis={'$phi304.2': '$302for_iter.3'}, blockstack=(), active_try_block=None, outgoing_edgepushed={376: ('$phi302.0',), 304: ('$phi302.0', '$phi302.1', '$302for_iter.3')})
2025-02-17 09:54:56,751 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=304 nstack_initial=3):
AdaptBlockInfo(insts=((304, {'value': '$phi304.2'}), (306, {'res': '$interp_win306.3'}), (308, {'res': '$offset308.4'}), (310, {'res': '$k310.5'}), (312, {'res': '$index_step312.6'}), (314, {'lhs': '$k310.5', 'rhs': '$index_step312.6', 'res': '$314binary_multiply.7'}), (316, {'lhs': '$offset308.4', 'rhs': '$314binary_multiply.7', 'res': '$316binary_add.8'}), (318, {'index': '$316binary_add.8', 'target': '$interp_win306.3', 'res': '$318binary_subscr.9'}), (320, {'res': '$eta320.10'}), (322, {'res': '$interp_delta322.11'}), (324, {'res': '$offset324.12'}), (326, {'res': '$k326.13'}), (328, {'res': '$index_step328.14'}), (330, {'lhs': '$k326.13', 'rhs': '$index_step328.14', 'res': '$330binary_multiply.15'}), (332, {'lhs': '$offset324.12', 'rhs': '$330binary_multiply.15', 'res': '$332binary_add.16'}), (334, {'index': '$332binary_add.16', 'target': '$interp_delta322.11', 'res': '$334binary_subscr.17'}), (336, {'lhs': '$eta320.10', 'rhs': '$334binary_subscr.17', 'res': '$336binary_multiply.18'}), (338, {'lhs': '$318binary_subscr.9', 'rhs': '$336binary_multiply.18', 'res': '$338binary_add.19'}), (340, {'value': '$338binary_add.19'}), (342, {'res': '$y342.20'}), (344, {'res': '$t344.21'}), (346, {'orig': ['$y342.20', '$t344.21'], 'duped': ['$346dup_top_two.22', '$346dup_top_two.23']}), (348, {'index': '$346dup_top_two.23', 'target': '$346dup_top_two.22', 'res': '$348binary_subscr.24'}), (350, {'res': '$weight350.25'}), (352, {'res': '$x352.26'}), (354, {'res': '$n354.27'}), (356, {'res': '$k356.28'}), (358, {'lhs': '$n354.27', 'rhs': '$k356.28', 'res': '$358binary_add.29'}), (360, {'res': '$const360.30'}), (362, {'lhs': '$358binary_add.29', 'rhs': '$const360.30', 'res': '$362binary_add.31'}), (364, {'index': '$362binary_add.31', 'target': '$x352.26', 'res': '$364binary_subscr.32'}), (366, {'lhs': '$weight350.25', 'rhs': '$364binary_subscr.32', 'res': '$366binary_multiply.33'}), (368, {'lhs': '$348binary_subscr.24', 'rhs': '$366binary_multiply.33', 'res': '$368inplace_add.34'}), (372, {'target': '$y342.20', 'index': '$t344.21', 'value': '$368inplace_add.34'}), (374, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={302: ('$phi304.0', '$phi304.1')})
2025-02-17 09:54:56,751 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=376 nstack_initial=1):
AdaptBlockInfo(insts=((376, {}),), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={80: ('$phi376.0',)})
2025-02-17 09:54:56,751 - numba.core.byteflow - DEBUG - block_infos State(pc_initial=378 nstack_initial=0):
AdaptBlockInfo(insts=((378, {'res': '$const378.0'}), (380, {'retval': '$const378.0', 'castval': '$380return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
2025-02-17 09:54:56,757 - numba.core.interpreter - DEBUG - label 0:
    x = arg(0, name=x)                       ['x']
    t_out = arg(1, name=t_out)               ['t_out']
    interp_win = arg(2, name=interp_win)     ['interp_win']
    interp_delta = arg(3, name=interp_delta) ['interp_delta']
    num_table = arg(4, name=num_table)       ['num_table']
    scale = arg(5, name=scale)               ['scale']
    y = arg(6, name=y)                       ['y']
    $2load_global.0 = global(int: <class 'int'>) ['$2load_global.0']
    $8binary_multiply.3 = scale * num_table  ['$8binary_multiply.3', 'num_table', 'scale']
    index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8binary_multiply.3', 'index_step']
    time_register = const(float, 0.0)        ['time_register']
    n = const(int, 0)                        ['n']
    frac = const(float, 0.0)                 ['frac']
    index_frac = const(float, 0.0)           ['index_frac']
    offset = const(int, 0)                   ['offset']
    eta = const(float, 0.0)                  ['eta']
    weight = const(float, 0.0)               ['weight']
    $44load_attr.13 = getattr(value=interp_win, attr=shape) ['$44load_attr.13', 'interp_win']
    $const46.14 = const(int, 0)              ['$const46.14']
    nwin = getitem(value=$44load_attr.13, index=$const46.14, fn=<built-in function getitem>) ['$44load_attr.13', '$const46.14', 'nwin']
    $54load_attr.17 = getattr(value=x, attr=shape) ['$54load_attr.17', 'x']
    $const56.18 = const(int, 0)              ['$const56.18']
    n_orig = getitem(value=$54load_attr.17, index=$const56.18, fn=<built-in function getitem>) ['$54load_attr.17', '$const56.18', 'n_orig']
    $64load_attr.21 = getattr(value=t_out, attr=shape) ['$64load_attr.21', 't_out']
    $const66.22 = const(int, 0)              ['$const66.22']
    n_out = getitem(value=$64load_attr.21, index=$const66.22, fn=<built-in function getitem>) ['$64load_attr.21', '$const66.22', 'n_out']
    $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>) ['$72load_global.24']
    $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None) ['$72load_global.24', '$76call_function.26', 'n_out']
    $78get_iter.27 = getiter(value=$76call_function.26) ['$76call_function.26', '$78get_iter.27']
    $phi80.0 = $78get_iter.27                ['$78get_iter.27', '$phi80.0']
    jump 80                                  []
label 80:
    $80for_iter.1 = iternext(value=$phi80.0) ['$80for_iter.1', '$phi80.0']
    $80for_iter.2 = pair_first(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.2']
    $80for_iter.3 = pair_second(value=$80for_iter.1) ['$80for_iter.1', '$80for_iter.3']
    $phi82.1 = $80for_iter.2                 ['$80for_iter.2', '$phi82.1']
    branch $80for_iter.3, 82, 378            ['$80for_iter.3']
label 82:
    t = $phi82.1                             ['$phi82.1', 't']
    time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>) ['t', 't_out', 'time_register']
    $92load_global.5 = global(int: <class 'int'>) ['$92load_global.5']
    n = call $92load_global.5(time_register, func=$92load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None) ['$92load_global.5', 'n', 'time_register']
    $106binary_subtract.11 = time_register - n ['$106binary_subtract.11', 'n', 'time_register']
    frac = scale * $106binary_subtract.11    ['$106binary_subtract.11', 'frac', 'scale']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $120load_global.16 = global(int: <class 'int'>) ['$120load_global.16']
    offset = call $120load_global.16(index_frac, func=$120load_global.16, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$120load_global.16', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $136load_global.22 = global(min: <built-in function min>) ['$136load_global.22']
    $const140.24 = const(int, 1)             ['$const140.24']
    $142binary_add.25 = n + $const140.24     ['$142binary_add.25', '$const140.24', 'n']
    $148binary_subtract.28 = nwin - offset   ['$148binary_subtract.28', 'nwin', 'offset']
    $152binary_floor_divide.30 = $148binary_subtract.28 // index_step ['$148binary_subtract.28', '$152binary_floor_divide.30', 'index_step']
    i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$136load_global.22', '$142binary_add.25', '$152binary_floor_divide.30', 'i_max']
    $158load_global.32 = global(range: <class 'range'>) ['$158load_global.32']
    $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None) ['$158load_global.32', '$162call_function.34', 'i_max']
    $164get_iter.35 = getiter(value=$162call_function.34) ['$162call_function.34', '$164get_iter.35']
    $phi166.1 = $164get_iter.35              ['$164get_iter.35', '$phi166.1']
    jump 166                                 []
label 166:
    $166for_iter.2 = iternext(value=$phi166.1) ['$166for_iter.2', '$phi166.1']
    $166for_iter.3 = pair_first(value=$166for_iter.2) ['$166for_iter.2', '$166for_iter.3']
    $166for_iter.4 = pair_second(value=$166for_iter.2) ['$166for_iter.2', '$166for_iter.4']
    $phi168.2 = $166for_iter.3               ['$166for_iter.3', '$phi168.2']
    branch $166for_iter.4, 168, 236          ['$166for_iter.4']
label 168:
    i = $phi168.2                            ['$phi168.2', 'i']
    $178binary_multiply.7 = i * index_step   ['$178binary_multiply.7', 'i', 'index_step']
    $180binary_add.8 = offset + $178binary_multiply.7 ['$178binary_multiply.7', '$180binary_add.8', 'offset']
    $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>) ['$180binary_add.8', '$182binary_subscr.9', 'interp_win']
    $194binary_multiply.15 = i * index_step  ['$194binary_multiply.15', 'i', 'index_step']
    $196binary_add.16 = offset + $194binary_multiply.15 ['$194binary_multiply.15', '$196binary_add.16', 'offset']
    $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>) ['$196binary_add.16', '$198binary_subscr.17', 'interp_delta']
    $200binary_multiply.18 = eta * $198binary_subscr.17 ['$198binary_subscr.17', '$200binary_multiply.18', 'eta']
    weight = $182binary_subscr.9 + $200binary_multiply.18 ['$182binary_subscr.9', '$200binary_multiply.18', 'weight']
    $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$212binary_subscr.24', 't', 'y']
    $222binary_subtract.29 = n - i           ['$222binary_subtract.29', 'i', 'n']
    $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>) ['$222binary_subtract.29', '$224binary_subscr.30', 'x']
    $226binary_multiply.31 = weight * $224binary_subscr.30 ['$224binary_subscr.30', '$226binary_multiply.31', 'weight']
    $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined) ['$212binary_subscr.24', '$226binary_multiply.31', '$228inplace_add.32']
    y[t] = $228inplace_add.32                ['$228inplace_add.32', 't', 'y']
    jump 166                                 []
label 236:
    $240binary_subtract.3 = scale - frac     ['$240binary_subtract.3', 'frac', 'scale']
    frac = $240binary_subtract.3             ['$240binary_subtract.3', 'frac']
    index_frac = frac * num_table            ['frac', 'index_frac', 'num_table']
    $252load_global.7 = global(int: <class 'int'>) ['$252load_global.7']
    offset = call $252load_global.7(index_frac, func=$252load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None) ['$252load_global.7', 'index_frac', 'offset']
    eta = index_frac - offset                ['eta', 'index_frac', 'offset']
    $268load_global.13 = global(min: <built-in function min>) ['$268load_global.13']
    $274binary_subtract.16 = n_orig - n      ['$274binary_subtract.16', 'n', 'n_orig']
    $const276.17 = const(int, 1)             ['$const276.17']
    $278binary_subtract.18 = $274binary_subtract.16 - $const276.17 ['$274binary_subtract.16', '$278binary_subtract.18', '$const276.17']
    $284binary_subtract.21 = nwin - offset   ['$284binary_subtract.21', 'nwin', 'offset']
    $288binary_floor_divide.23 = $284binary_subtract.21 // index_step ['$284binary_subtract.21', '$288binary_floor_divide.23', 'index_step']
    k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$268load_global.13', '$278binary_subtract.18', '$288binary_floor_divide.23', 'k_max']
    $294load_global.25 = global(range: <class 'range'>) ['$294load_global.25']
    $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None) ['$294load_global.25', '$298call_function.27', 'k_max']
    $300get_iter.28 = getiter(value=$298call_function.27) ['$298call_function.27', '$300get_iter.28']
    $phi302.1 = $300get_iter.28              ['$300get_iter.28', '$phi302.1']
    jump 302                                 []
label 302:
    $302for_iter.2 = iternext(value=$phi302.1) ['$302for_iter.2', '$phi302.1']
    $302for_iter.3 = pair_first(value=$302for_iter.2) ['$302for_iter.2', '$302for_iter.3']
    $302for_iter.4 = pair_second(value=$302for_iter.2) ['$302for_iter.2', '$302for_iter.4']
    $phi304.2 = $302for_iter.3               ['$302for_iter.3', '$phi304.2']
    branch $302for_iter.4, 304, 376          ['$302for_iter.4']
label 304:
    k = $phi304.2                            ['$phi304.2', 'k']
    $314binary_multiply.7 = k * index_step   ['$314binary_multiply.7', 'index_step', 'k']
    $316binary_add.8 = offset + $314binary_multiply.7 ['$314binary_multiply.7', '$316binary_add.8', 'offset']
    $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>) ['$316binary_add.8', '$318binary_subscr.9', 'interp_win']
    $330binary_multiply.15 = k * index_step  ['$330binary_multiply.15', 'index_step', 'k']
    $332binary_add.16 = offset + $330binary_multiply.15 ['$330binary_multiply.15', '$332binary_add.16', 'offset']
    $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>) ['$332binary_add.16', '$334binary_subscr.17', 'interp_delta']
    $336binary_multiply.18 = eta * $334binary_subscr.17 ['$334binary_subscr.17', '$336binary_multiply.18', 'eta']
    weight = $318binary_subscr.9 + $336binary_multiply.18 ['$318binary_subscr.9', '$336binary_multiply.18', 'weight']
    $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>) ['$348binary_subscr.24', 't', 'y']
    $358binary_add.29 = n + k                ['$358binary_add.29', 'k', 'n']
    $const360.30 = const(int, 1)             ['$const360.30']
    $362binary_add.31 = $358binary_add.29 + $const360.30 ['$358binary_add.29', '$362binary_add.31', '$const360.30']
    $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>) ['$362binary_add.31', '$364binary_subscr.32', 'x']
    $366binary_multiply.33 = weight * $364binary_subscr.32 ['$364binary_subscr.32', '$366binary_multiply.33', 'weight']
    $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined) ['$348binary_subscr.24', '$366binary_multiply.33', '$368inplace_add.34']
    y[t] = $368inplace_add.34                ['$368inplace_add.34', 't', 'y']
    jump 302                                 []
label 376:
    jump 80                                  []
label 378:
    $const378.0 = const(NoneType, None)      ['$const378.0']
    $380return_value.1 = cast(value=$const378.0) ['$380return_value.1', '$const378.0']
    return $380return_value.1                ['$380return_value.1']

2025-02-17 09:54:56,800 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 0
2025-02-17 09:54:56,800 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001ED66053FD0>
2025-02-17 09:54:56,800 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-02-17 09:54:56,800 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-02-17 09:54:56,800 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-02-17 09:54:56,800 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-02-17 09:54:56,800 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-02-17 09:54:56,800 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-02-17 09:54:56,800 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-02-17 09:54:56,800 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-02-17 09:54:56,800 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-02-17 09:54:56,800 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,800 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-02-17 09:54:56,801 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-02-17 09:54:56,801 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-02-17 09:54:56,801 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-02-17 09:54:56,801 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-02-17 09:54:56,801 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-02-17 09:54:56,801 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-02-17 09:54:56,801 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-02-17 09:54:56,801 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-02-17 09:54:56,801 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-02-17 09:54:56,801 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-02-17 09:54:56,801 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-02-17 09:54:56,801 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-02-17 09:54:56,801 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-02-17 09:54:56,801 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-02-17 09:54:56,801 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-02-17 09:54:56,801 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-02-17 09:54:56,801 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,801 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-02-17 09:54:56,801 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-02-17 09:54:56,801 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:54:56,802 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 80
2025-02-17 09:54:56,802 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001ED66053FD0>
2025-02-17 09:54:56,802 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-02-17 09:54:56,802 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-02-17 09:54:56,802 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-02-17 09:54:56,802 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-02-17 09:54:56,802 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-02-17 09:54:56,802 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 82
2025-02-17 09:54:56,802 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001ED66053FD0>
2025-02-17 09:54:56,802 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-02-17 09:54:56,802 - numba.core.ssa - DEBUG - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,802 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-02-17 09:54:56,802 - numba.core.ssa - DEBUG - on stmt: n = call $92load_global.5(time_register, func=$92load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,802 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register - n
2025-02-17 09:54:56,802 - numba.core.ssa - DEBUG - on stmt: frac = scale * $106binary_subtract.11
2025-02-17 09:54:56,802 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-02-17 09:54:56,802 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-02-17 09:54:56,802 - numba.core.ssa - DEBUG - on stmt: offset = call $120load_global.16(index_frac, func=$120load_global.16, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,803 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-02-17 09:54:56,803 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-02-17 09:54:56,803 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-02-17 09:54:56,803 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n + $const140.24
2025-02-17 09:54:56,803 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset
2025-02-17 09:54:56,803 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-02-17 09:54:56,803 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,803 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-02-17 09:54:56,803 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,803 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-02-17 09:54:56,803 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-02-17 09:54:56,803 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:54:56,803 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 166
2025-02-17 09:54:56,803 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001ED66053FD0>
2025-02-17 09:54:56,803 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-02-17 09:54:56,803 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-02-17 09:54:56,803 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-02-17 09:54:56,803 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-02-17 09:54:56,804 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-02-17 09:54:56,804 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 168
2025-02-17 09:54:56,804 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001ED66053FD0>
2025-02-17 09:54:56,804 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-02-17 09:54:56,804 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-02-17 09:54:56,804 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset + $178binary_multiply.7
2025-02-17 09:54:56,804 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:54:56,804 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-02-17 09:54:56,804 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset + $194binary_multiply.15
2025-02-17 09:54:56,804 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:54:56,804 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-02-17 09:54:56,804 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-02-17 09:54:56,804 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,804 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n - i
2025-02-17 09:54:56,804 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-02-17 09:54:56,804 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-02-17 09:54:56,804 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:54:56,804 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-02-17 09:54:56,804 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:54:56,805 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 236
2025-02-17 09:54:56,805 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001ED66053FD0>
2025-02-17 09:54:56,805 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac
2025-02-17 09:54:56,805 - numba.core.ssa - DEBUG - on stmt: frac = $240binary_subtract.3
2025-02-17 09:54:56,805 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-02-17 09:54:56,805 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-02-17 09:54:56,805 - numba.core.ssa - DEBUG - on stmt: offset = call $252load_global.7(index_frac, func=$252load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,805 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-02-17 09:54:56,805 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-02-17 09:54:56,805 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n
2025-02-17 09:54:56,805 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-02-17 09:54:56,805 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-02-17 09:54:56,805 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset
2025-02-17 09:54:56,805 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-02-17 09:54:56,805 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,805 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-02-17 09:54:56,805 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,805 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-02-17 09:54:56,805 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-02-17 09:54:56,805 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:54:56,806 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 302
2025-02-17 09:54:56,806 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001ED66053FD0>
2025-02-17 09:54:56,806 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-02-17 09:54:56,806 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-02-17 09:54:56,806 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-02-17 09:54:56,806 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-02-17 09:54:56,806 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-02-17 09:54:56,806 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 304
2025-02-17 09:54:56,806 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001ED66053FD0>
2025-02-17 09:54:56,806 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-02-17 09:54:56,806 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-02-17 09:54:56,806 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset + $314binary_multiply.7
2025-02-17 09:54:56,806 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:54:56,806 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-02-17 09:54:56,806 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset + $330binary_multiply.15
2025-02-17 09:54:56,806 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:54:56,806 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-02-17 09:54:56,806 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-02-17 09:54:56,806 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,806 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n + k
2025-02-17 09:54:56,806 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-02-17 09:54:56,806 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-02-17 09:54:56,807 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-02-17 09:54:56,807 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-02-17 09:54:56,807 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:54:56,807 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-02-17 09:54:56,807 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:54:56,807 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 376
2025-02-17 09:54:56,807 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001ED66053FD0>
2025-02-17 09:54:56,807 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:54:56,807 - numba.core.ssa - DEBUG - ==== SSA block analysis pass on 378
2025-02-17 09:54:56,807 - numba.core.ssa - DEBUG - Running <numba.core.ssa._GatherDefsHandler object at 0x000001ED66053FD0>
2025-02-17 09:54:56,807 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-02-17 09:54:56,807 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-02-17 09:54:56,807 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-02-17 09:54:56,810 - numba.core.ssa - DEBUG - defs defaultdict(<class 'list'>,
            {'$106binary_subtract.11': [(<numba.core.ir.Assign object at 0x000001ED66041D50>,
                                         82)],
             '$120load_global.16': [(<numba.core.ir.Assign object at 0x000001ED66042560>,
                                     82)],
             '$136load_global.22': [(<numba.core.ir.Assign object at 0x000001ED66042EC0>,
                                     82)],
             '$142binary_add.25': [(<numba.core.ir.Assign object at 0x000001ED66043310>,
                                    82)],
             '$148binary_subtract.28': [(<numba.core.ir.Assign object at 0x000001ED660436D0>,
                                         82)],
             '$152binary_floor_divide.30': [(<numba.core.ir.Assign object at 0x000001ED66043970>,
                                             82)],
             '$158load_global.32': [(<numba.core.ir.Assign object at 0x000001ED66043D60>,
                                     82)],
             '$162call_function.34': [(<numba.core.ir.Assign object at 0x000001ED660480A0>,
                                       82)],
             '$164get_iter.35': [(<numba.core.ir.Assign object at 0x000001ED660481C0>,
                                  82)],
             '$166for_iter.2': [(<numba.core.ir.Assign object at 0x000001ED66041B10>,
                                 166)],
             '$166for_iter.3': [(<numba.core.ir.Assign object at 0x000001ED66041F30>,
                                 166)],
             '$166for_iter.4': [(<numba.core.ir.Assign object at 0x000001ED66042470>,
                                 166)],
             '$178binary_multiply.7': [(<numba.core.ir.Assign object at 0x000001ED660485B0>,
                                        168)],
             '$180binary_add.8': [(<numba.core.ir.Assign object at 0x000001ED66048730>,
                                   168)],
             '$182binary_subscr.9': [(<numba.core.ir.Assign object at 0x000001ED660488B0>,
                                      168)],
             '$194binary_multiply.15': [(<numba.core.ir.Assign object at 0x000001ED66048FD0>,
                                         168)],
             '$196binary_add.16': [(<numba.core.ir.Assign object at 0x000001ED66049150>,
                                    168)],
             '$198binary_subscr.17': [(<numba.core.ir.Assign object at 0x000001ED660492D0>,
                                       168)],
             '$200binary_multiply.18': [(<numba.core.ir.Assign object at 0x000001ED66049450>,
                                         168)],
             '$212binary_subscr.24': [(<numba.core.ir.Assign object at 0x000001ED66049C30>,
                                       168)],
             '$222binary_subtract.29': [(<numba.core.ir.Assign object at 0x000001ED6604A230>,
                                         168)],
             '$224binary_subscr.30': [(<numba.core.ir.Assign object at 0x000001ED6604A3B0>,
                                       168)],
             '$226binary_multiply.31': [(<numba.core.ir.Assign object at 0x000001ED6604A530>,
                                         168)],
             '$228inplace_add.32': [(<numba.core.ir.Assign object at 0x000001ED6604A6B0>,
                                     168)],
             '$240binary_subtract.3': [(<numba.core.ir.Assign object at 0x000001ED66049780>,
                                        236)],
             '$252load_global.7': [(<numba.core.ir.Assign object at 0x000001ED6604AC20>,
                                    236)],
             '$268load_global.13': [(<numba.core.ir.Assign object at 0x000001ED6604B580>,
                                     236)],
             '$274binary_subtract.16': [(<numba.core.ir.Assign object at 0x000001ED6604B970>,
                                         236)],
             '$278binary_subtract.18': [(<numba.core.ir.Assign object at 0x000001ED6604BC70>,
                                         236)],
             '$284binary_subtract.21': [(<numba.core.ir.Assign object at 0x000001ED66050070>,
                                         236)],
             '$288binary_floor_divide.23': [(<numba.core.ir.Assign object at 0x000001ED66050310>,
                                             236)],
             '$294load_global.25': [(<numba.core.ir.Assign object at 0x000001ED66050700>,
                                     236)],
             '$298call_function.27': [(<numba.core.ir.Assign object at 0x000001ED66050A00>,
                                       236)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x000001ED6600D9C0>,
                                  0)],
             '$300get_iter.28': [(<numba.core.ir.Assign object at 0x000001ED66050B20>,
                                  236)],
             '$302for_iter.2': [(<numba.core.ir.Assign object at 0x000001ED6604AE60>,
                                 302)],
             '$302for_iter.3': [(<numba.core.ir.Assign object at 0x000001ED6604B490>,
                                 302)],
             '$302for_iter.4': [(<numba.core.ir.Assign object at 0x000001ED6604B850>,
                                 302)],
             '$314binary_multiply.7': [(<numba.core.ir.Assign object at 0x000001ED66051270>,
                                        304)],
             '$316binary_add.8': [(<numba.core.ir.Assign object at 0x000001ED660513F0>,
                                   304)],
             '$318binary_subscr.9': [(<numba.core.ir.Assign object at 0x000001ED66051570>,
                                      304)],
             '$330binary_multiply.15': [(<numba.core.ir.Assign object at 0x000001ED66051C90>,
                                         304)],
             '$332binary_add.16': [(<numba.core.ir.Assign object at 0x000001ED66051E10>,
                                    304)],
             '$334binary_subscr.17': [(<numba.core.ir.Assign object at 0x000001ED66051F90>,
                                       304)],
             '$336binary_multiply.18': [(<numba.core.ir.Assign object at 0x000001ED66052110>,
                                         304)],
             '$348binary_subscr.24': [(<numba.core.ir.Assign object at 0x000001ED660528F0>,
                                       304)],
             '$358binary_add.29': [(<numba.core.ir.Assign object at 0x000001ED66052EF0>,
                                    304)],
             '$362binary_add.31': [(<numba.core.ir.Assign object at 0x000001ED660531F0>,
                                    304)],
             '$364binary_subscr.32': [(<numba.core.ir.Assign object at 0x000001ED66053370>,
                                       304)],
             '$366binary_multiply.33': [(<numba.core.ir.Assign object at 0x000001ED660534F0>,
                                         304)],
             '$368inplace_add.34': [(<numba.core.ir.Assign object at 0x000001ED66053670>,
                                     304)],
             '$380return_value.1': [(<numba.core.ir.Assign object at 0x000001ED660525F0>,
                                     378)],
             '$44load_attr.13': [(<numba.core.ir.Assign object at 0x000001ED6600F520>,
                                  0)],
             '$54load_attr.17': [(<numba.core.ir.Assign object at 0x000001ED6600FBE0>,
                                  0)],
             '$64load_attr.21': [(<numba.core.ir.Assign object at 0x000001ED660402E0>,
                                  0)],
             '$72load_global.24': [(<numba.core.ir.Assign object at 0x000001ED66040880>,
                                    0)],
             '$76call_function.26': [(<numba.core.ir.Assign object at 0x000001ED66040B80>,
                                      0)],
             '$78get_iter.27': [(<numba.core.ir.Assign object at 0x000001ED66040CA0>,
                                 0)],
             '$80for_iter.1': [(<numba.core.ir.Assign object at 0x000001ED6600F070>,
                                80)],
             '$80for_iter.2': [(<numba.core.ir.Assign object at 0x000001ED6600F9D0>,
                                80)],
             '$80for_iter.3': [(<numba.core.ir.Assign object at 0x000001ED66040160>,
                                80)],
             '$8binary_multiply.3': [(<numba.core.ir.Assign object at 0x000001ED6600DDB0>,
                                      0)],
             '$92load_global.5': [(<numba.core.ir.Assign object at 0x000001ED660414E0>,
                                   82)],
             '$const140.24': [(<numba.core.ir.Assign object at 0x000001ED66043160>,
                               82)],
             '$const276.17': [(<numba.core.ir.Assign object at 0x000001ED6604BAC0>,
                               236)],
             '$const360.30': [(<numba.core.ir.Assign object at 0x000001ED66053040>,
                               304)],
             '$const378.0': [(<numba.core.ir.Assign object at 0x000001ED66051B70>,
                              378)],
             '$const46.14': [(<numba.core.ir.Assign object at 0x000001ED6600F6A0>,
                              0)],
             '$const56.18': [(<numba.core.ir.Assign object at 0x000001ED6600FD60>,
                              0)],
             '$const66.22': [(<numba.core.ir.Assign object at 0x000001ED66040460>,
                              0)],
             '$phi166.1': [(<numba.core.ir.Assign object at 0x000001ED66041090>,
                            82)],
             '$phi168.2': [(<numba.core.ir.Assign object at 0x000001ED66041720>,
                            166)],
             '$phi302.1': [(<numba.core.ir.Assign object at 0x000001ED66048AC0>,
                            236)],
             '$phi304.2': [(<numba.core.ir.Assign object at 0x000001ED6604ADD0>,
                            302)],
             '$phi80.0': [(<numba.core.ir.Assign object at 0x000001ED6600DB70>,
                           0)],
             '$phi82.1': [(<numba.core.ir.Assign object at 0x000001ED6600EB30>,
                           80)],
             'eta': [(<numba.core.ir.Assign object at 0x000001ED6600EEC0>, 0),
                     (<numba.core.ir.Assign object at 0x000001ED66042CB0>, 82),
                     (<numba.core.ir.Assign object at 0x000001ED6604B370>,
                      236)],
             'frac': [(<numba.core.ir.Assign object at 0x000001ED6600E6E0>, 0),
                      (<numba.core.ir.Assign object at 0x000001ED66041ED0>, 82),
                      (<numba.core.ir.Assign object at 0x000001ED66049A20>,
                       236)],
             'i': [(<numba.core.ir.Assign object at 0x000001ED66042BF0>, 168)],
             'i_max': [(<numba.core.ir.Assign object at 0x000001ED66043B20>,
                        82)],
             'index_frac': [(<numba.core.ir.Assign object at 0x000001ED6600E980>,
                             0),
                            (<numba.core.ir.Assign object at 0x000001ED66042350>,
                             82),
                            (<numba.core.ir.Assign object at 0x000001ED6604AA10>,
                             236)],
             'index_step': [(<numba.core.ir.Assign object at 0x000001ED6600DF60>,
                             0)],
             'interp_delta': [(<numba.core.ir.Assign object at 0x000001ED6600CB80>,
                               0)],
             'interp_win': [(<numba.core.ir.Assign object at 0x000001ED6600D2A0>,
                             0)],
             'k': [(<numba.core.ir.Assign object at 0x000001ED66050C40>, 304)],
             'k_max': [(<numba.core.ir.Assign object at 0x000001ED660504C0>,
                        236)],
             'n': [(<numba.core.ir.Assign object at 0x000001ED6600E440>, 0),
                   (<numba.core.ir.Assign object at 0x000001ED660417E0>, 82)],
             'n_orig': [(<numba.core.ir.Assign object at 0x000001ED6605AEC0>,
                         0)],
             'n_out': [(<numba.core.ir.Assign object at 0x000001ED6605AF80>,
                        0)],
             'num_table': [(<numba.core.ir.Assign object at 0x000001ED6600CE20>,
                            0)],
             'nwin': [(<numba.core.ir.Assign object at 0x000001ED6605AE00>, 0)],
             'offset': [(<numba.core.ir.Assign object at 0x000001ED6600EC20>,
                         0),
                        (<numba.core.ir.Assign object at 0x000001ED66042860>,
                         82),
                        (<numba.core.ir.Assign object at 0x000001ED6604AF20>,
                         236)],
             'scale': [(<numba.core.ir.Assign object at 0x000001ED6600D720>,
                        0)],
             't': [(<numba.core.ir.Assign object at 0x000001ED66040EE0>, 82)],
             't_out': [(<numba.core.ir.Assign object at 0x000001ED6600D5A0>,
                        0)],
             'time_register': [(<numba.core.ir.Assign object at 0x000001ED6600E1A0>,
                                0),
                               (<numba.core.ir.Assign object at 0x000001ED660412D0>,
                                82)],
             'weight': [(<numba.core.ir.Assign object at 0x000001ED6600F160>,
                         0),
                        (<numba.core.ir.Assign object at 0x000001ED660495D0>,
                         168),
                        (<numba.core.ir.Assign object at 0x000001ED66052290>,
                         304)],
             'x': [(<numba.core.ir.Assign object at 0x000001ED6600D4E0>, 0)],
             'y': [(<numba.core.ir.Assign object at 0x000001ED6600D840>, 0)]})
2025-02-17 09:54:56,810 - numba.core.ssa - DEBUG - SSA violators <numba.core.utils.OrderedSet object at 0x000001ED6600CD30>
2025-02-17 09:54:56,810 - numba.core.ssa - DEBUG - Fix SSA violator on var time_register
2025-02-17 09:54:56,811 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-02-17 09:54:56,811 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,811 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-02-17 09:54:56,811 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-02-17 09:54:56,811 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-02-17 09:54:56,811 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-02-17 09:54:56,811 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-02-17 09:54:56,811 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-02-17 09:54:56,811 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-02-17 09:54:56,811 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-02-17 09:54:56,811 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-02-17 09:54:56,811 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,811 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-02-17 09:54:56,811 - numba.core.ssa - DEBUG - first assign: time_register
2025-02-17 09:54:56,811 - numba.core.ssa - DEBUG - replaced with: time_register = const(float, 0.0)
2025-02-17 09:54:56,811 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-02-17 09:54:56,811 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-02-17 09:54:56,811 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-02-17 09:54:56,811 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-02-17 09:54:56,811 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-02-17 09:54:56,812 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-02-17 09:54:56,812 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-02-17 09:54:56,812 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-02-17 09:54:56,812 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-02-17 09:54:56,812 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-02-17 09:54:56,812 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-02-17 09:54:56,812 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-02-17 09:54:56,812 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-02-17 09:54:56,812 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-02-17 09:54:56,812 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-02-17 09:54:56,812 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-02-17 09:54:56,812 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,812 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-02-17 09:54:56,812 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-02-17 09:54:56,812 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:54:56,812 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-02-17 09:54:56,812 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,812 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-02-17 09:54:56,812 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-02-17 09:54:56,812 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-02-17 09:54:56,812 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-02-17 09:54:56,812 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-02-17 09:54:56,812 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-02-17 09:54:56,812 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,813 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-02-17 09:54:56,813 - numba.core.ssa - DEBUG - on stmt: time_register = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,813 - numba.core.ssa - DEBUG - replaced with: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,813 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-02-17 09:54:56,813 - numba.core.ssa - DEBUG - on stmt: n = call $92load_global.5(time_register, func=$92load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,813 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register - n
2025-02-17 09:54:56,813 - numba.core.ssa - DEBUG - on stmt: frac = scale * $106binary_subtract.11
2025-02-17 09:54:56,813 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-02-17 09:54:56,813 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-02-17 09:54:56,813 - numba.core.ssa - DEBUG - on stmt: offset = call $120load_global.16(index_frac, func=$120load_global.16, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,813 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-02-17 09:54:56,813 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-02-17 09:54:56,813 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-02-17 09:54:56,813 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n + $const140.24
2025-02-17 09:54:56,813 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset
2025-02-17 09:54:56,813 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-02-17 09:54:56,813 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,813 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-02-17 09:54:56,813 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,813 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-02-17 09:54:56,813 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-02-17 09:54:56,814 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:54:56,814 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-02-17 09:54:56,814 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,814 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-02-17 09:54:56,814 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-02-17 09:54:56,814 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-02-17 09:54:56,814 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-02-17 09:54:56,814 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-02-17 09:54:56,814 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-02-17 09:54:56,814 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,814 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-02-17 09:54:56,814 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-02-17 09:54:56,814 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset + $178binary_multiply.7
2025-02-17 09:54:56,814 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:54:56,814 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-02-17 09:54:56,814 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset + $194binary_multiply.15
2025-02-17 09:54:56,814 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:54:56,814 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-02-17 09:54:56,814 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-02-17 09:54:56,814 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,814 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n - i
2025-02-17 09:54:56,814 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-02-17 09:54:56,814 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-02-17 09:54:56,814 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:54:56,815 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-02-17 09:54:56,815 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:54:56,815 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-02-17 09:54:56,815 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,815 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac
2025-02-17 09:54:56,815 - numba.core.ssa - DEBUG - on stmt: frac = $240binary_subtract.3
2025-02-17 09:54:56,815 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-02-17 09:54:56,815 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-02-17 09:54:56,815 - numba.core.ssa - DEBUG - on stmt: offset = call $252load_global.7(index_frac, func=$252load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,815 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-02-17 09:54:56,815 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-02-17 09:54:56,815 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n
2025-02-17 09:54:56,815 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-02-17 09:54:56,815 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-02-17 09:54:56,815 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset
2025-02-17 09:54:56,815 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-02-17 09:54:56,815 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,815 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-02-17 09:54:56,815 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,815 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-02-17 09:54:56,815 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-02-17 09:54:56,815 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:54:56,815 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-02-17 09:54:56,816 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,816 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-02-17 09:54:56,816 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-02-17 09:54:56,816 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-02-17 09:54:56,816 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-02-17 09:54:56,816 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-02-17 09:54:56,816 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-02-17 09:54:56,816 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,816 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-02-17 09:54:56,816 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-02-17 09:54:56,816 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset + $314binary_multiply.7
2025-02-17 09:54:56,816 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:54:56,816 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-02-17 09:54:56,816 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset + $330binary_multiply.15
2025-02-17 09:54:56,816 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:54:56,816 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-02-17 09:54:56,816 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-02-17 09:54:56,816 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,816 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n + k
2025-02-17 09:54:56,816 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-02-17 09:54:56,816 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-02-17 09:54:56,816 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-02-17 09:54:56,816 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-02-17 09:54:56,816 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:54:56,817 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-02-17 09:54:56,817 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:54:56,817 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-02-17 09:54:56,817 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,817 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:54:56,817 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-02-17 09:54:56,817 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,817 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-02-17 09:54:56,817 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-02-17 09:54:56,817 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-02-17 09:54:56,817 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001ED6600D150>],
             82: [<numba.core.ir.Assign object at 0x000001ED6600D000>]})
2025-02-17 09:54:56,817 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-02-17 09:54:56,817 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,817 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-02-17 09:54:56,817 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-02-17 09:54:56,817 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-02-17 09:54:56,817 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-02-17 09:54:56,817 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-02-17 09:54:56,817 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-02-17 09:54:56,817 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-02-17 09:54:56,817 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-02-17 09:54:56,818 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-02-17 09:54:56,818 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,818 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-02-17 09:54:56,818 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-02-17 09:54:56,818 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-02-17 09:54:56,818 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-02-17 09:54:56,818 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-02-17 09:54:56,818 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-02-17 09:54:56,818 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-02-17 09:54:56,818 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-02-17 09:54:56,818 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-02-17 09:54:56,818 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-02-17 09:54:56,818 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-02-17 09:54:56,818 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-02-17 09:54:56,818 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-02-17 09:54:56,818 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-02-17 09:54:56,818 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-02-17 09:54:56,818 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-02-17 09:54:56,818 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-02-17 09:54:56,819 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,819 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-02-17 09:54:56,819 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-02-17 09:54:56,819 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:54:56,819 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-02-17 09:54:56,819 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,819 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-02-17 09:54:56,819 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-02-17 09:54:56,819 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-02-17 09:54:56,819 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-02-17 09:54:56,819 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-02-17 09:54:56,819 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-02-17 09:54:56,819 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,819 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-02-17 09:54:56,819 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,819 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-02-17 09:54:56,819 - numba.core.ssa - DEBUG - on stmt: n = call $92load_global.5(time_register, func=$92load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,819 - numba.core.ssa - DEBUG - find_def var='time_register' stmt=n = call $92load_global.5(time_register, func=$92load_global.5, args=[Var(time_register, interpn.py:10)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,819 - numba.core.ssa - DEBUG - replaced with: n = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,820 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register - n
2025-02-17 09:54:56,820 - numba.core.ssa - DEBUG - find_def var='time_register' stmt=$106binary_subtract.11 = time_register - n
2025-02-17 09:54:56,820 - numba.core.ssa - DEBUG - replaced with: $106binary_subtract.11 = time_register.1 - n
2025-02-17 09:54:56,820 - numba.core.ssa - DEBUG - on stmt: frac = scale * $106binary_subtract.11
2025-02-17 09:54:56,820 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-02-17 09:54:56,820 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-02-17 09:54:56,820 - numba.core.ssa - DEBUG - on stmt: offset = call $120load_global.16(index_frac, func=$120load_global.16, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,820 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-02-17 09:54:56,820 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-02-17 09:54:56,820 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-02-17 09:54:56,820 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n + $const140.24
2025-02-17 09:54:56,820 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset
2025-02-17 09:54:56,820 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-02-17 09:54:56,820 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,820 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-02-17 09:54:56,820 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,820 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-02-17 09:54:56,820 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-02-17 09:54:56,820 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:54:56,821 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-02-17 09:54:56,821 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,821 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-02-17 09:54:56,821 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-02-17 09:54:56,821 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-02-17 09:54:56,821 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-02-17 09:54:56,821 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-02-17 09:54:56,821 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-02-17 09:54:56,821 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,821 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-02-17 09:54:56,821 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-02-17 09:54:56,821 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset + $178binary_multiply.7
2025-02-17 09:54:56,821 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:54:56,821 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-02-17 09:54:56,821 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset + $194binary_multiply.15
2025-02-17 09:54:56,821 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:54:56,821 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-02-17 09:54:56,821 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-02-17 09:54:56,821 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,821 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n - i
2025-02-17 09:54:56,821 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-02-17 09:54:56,821 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-02-17 09:54:56,822 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:54:56,822 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-02-17 09:54:56,822 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:54:56,822 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-02-17 09:54:56,822 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,822 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac
2025-02-17 09:54:56,822 - numba.core.ssa - DEBUG - on stmt: frac = $240binary_subtract.3
2025-02-17 09:54:56,822 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-02-17 09:54:56,822 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-02-17 09:54:56,822 - numba.core.ssa - DEBUG - on stmt: offset = call $252load_global.7(index_frac, func=$252load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,822 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-02-17 09:54:56,822 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-02-17 09:54:56,822 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n
2025-02-17 09:54:56,822 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-02-17 09:54:56,822 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-02-17 09:54:56,822 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset
2025-02-17 09:54:56,822 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-02-17 09:54:56,822 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,822 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-02-17 09:54:56,822 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,823 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-02-17 09:54:56,823 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-02-17 09:54:56,823 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:54:56,823 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-02-17 09:54:56,823 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,823 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-02-17 09:54:56,823 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-02-17 09:54:56,823 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-02-17 09:54:56,823 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-02-17 09:54:56,823 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-02-17 09:54:56,823 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-02-17 09:54:56,823 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,823 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-02-17 09:54:56,823 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-02-17 09:54:56,823 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset + $314binary_multiply.7
2025-02-17 09:54:56,823 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:54:56,823 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-02-17 09:54:56,823 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset + $330binary_multiply.15
2025-02-17 09:54:56,823 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:54:56,823 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-02-17 09:54:56,823 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-02-17 09:54:56,823 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,824 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n + k
2025-02-17 09:54:56,824 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-02-17 09:54:56,824 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-02-17 09:54:56,824 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-02-17 09:54:56,824 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-02-17 09:54:56,824 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:54:56,824 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-02-17 09:54:56,824 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:54:56,824 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-02-17 09:54:56,824 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,824 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:54:56,824 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-02-17 09:54:56,824 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,824 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-02-17 09:54:56,824 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-02-17 09:54:56,824 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-02-17 09:54:56,824 - numba.core.ssa - DEBUG - Fix SSA violator on var n
2025-02-17 09:54:56,824 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-02-17 09:54:56,824 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CDC0>
2025-02-17 09:54:56,824 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-02-17 09:54:56,824 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-02-17 09:54:56,824 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-02-17 09:54:56,824 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-02-17 09:54:56,825 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-02-17 09:54:56,825 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-02-17 09:54:56,825 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-02-17 09:54:56,825 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-02-17 09:54:56,825 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-02-17 09:54:56,825 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,825 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-02-17 09:54:56,825 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-02-17 09:54:56,825 - numba.core.ssa - DEBUG - first assign: n
2025-02-17 09:54:56,825 - numba.core.ssa - DEBUG - replaced with: n = const(int, 0)
2025-02-17 09:54:56,825 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-02-17 09:54:56,825 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-02-17 09:54:56,825 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-02-17 09:54:56,825 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-02-17 09:54:56,825 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-02-17 09:54:56,825 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-02-17 09:54:56,825 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-02-17 09:54:56,825 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-02-17 09:54:56,825 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-02-17 09:54:56,825 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-02-17 09:54:56,825 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-02-17 09:54:56,825 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-02-17 09:54:56,825 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-02-17 09:54:56,825 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-02-17 09:54:56,826 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-02-17 09:54:56,826 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,826 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-02-17 09:54:56,826 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-02-17 09:54:56,826 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:54:56,826 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-02-17 09:54:56,826 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CDC0>
2025-02-17 09:54:56,826 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-02-17 09:54:56,826 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-02-17 09:54:56,826 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-02-17 09:54:56,826 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-02-17 09:54:56,826 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-02-17 09:54:56,826 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-02-17 09:54:56,826 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CDC0>
2025-02-17 09:54:56,826 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-02-17 09:54:56,826 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,826 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-02-17 09:54:56,826 - numba.core.ssa - DEBUG - on stmt: n = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,826 - numba.core.ssa - DEBUG - replaced with: n.1 = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,826 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register.1 - n
2025-02-17 09:54:56,826 - numba.core.ssa - DEBUG - on stmt: frac = scale * $106binary_subtract.11
2025-02-17 09:54:56,826 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-02-17 09:54:56,826 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-02-17 09:54:56,827 - numba.core.ssa - DEBUG - on stmt: offset = call $120load_global.16(index_frac, func=$120load_global.16, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,827 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-02-17 09:54:56,827 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-02-17 09:54:56,827 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-02-17 09:54:56,827 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n + $const140.24
2025-02-17 09:54:56,827 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset
2025-02-17 09:54:56,827 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-02-17 09:54:56,827 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,827 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-02-17 09:54:56,827 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,827 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-02-17 09:54:56,827 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-02-17 09:54:56,827 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:54:56,827 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-02-17 09:54:56,827 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CDC0>
2025-02-17 09:54:56,827 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-02-17 09:54:56,827 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-02-17 09:54:56,827 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-02-17 09:54:56,827 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-02-17 09:54:56,827 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-02-17 09:54:56,827 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-02-17 09:54:56,827 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CDC0>
2025-02-17 09:54:56,827 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-02-17 09:54:56,828 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-02-17 09:54:56,828 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset + $178binary_multiply.7
2025-02-17 09:54:56,828 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:54:56,828 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-02-17 09:54:56,828 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset + $194binary_multiply.15
2025-02-17 09:54:56,828 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:54:56,828 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-02-17 09:54:56,828 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-02-17 09:54:56,828 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,828 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n - i
2025-02-17 09:54:56,828 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-02-17 09:54:56,828 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-02-17 09:54:56,828 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:54:56,828 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-02-17 09:54:56,828 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:54:56,828 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-02-17 09:54:56,828 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CDC0>
2025-02-17 09:54:56,828 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac
2025-02-17 09:54:56,828 - numba.core.ssa - DEBUG - on stmt: frac = $240binary_subtract.3
2025-02-17 09:54:56,828 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-02-17 09:54:56,828 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-02-17 09:54:56,828 - numba.core.ssa - DEBUG - on stmt: offset = call $252load_global.7(index_frac, func=$252load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,828 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-02-17 09:54:56,828 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-02-17 09:54:56,829 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n
2025-02-17 09:54:56,829 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-02-17 09:54:56,829 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-02-17 09:54:56,829 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset
2025-02-17 09:54:56,829 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-02-17 09:54:56,829 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,829 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-02-17 09:54:56,829 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,829 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-02-17 09:54:56,829 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-02-17 09:54:56,829 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:54:56,829 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-02-17 09:54:56,829 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CDC0>
2025-02-17 09:54:56,829 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-02-17 09:54:56,829 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-02-17 09:54:56,829 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-02-17 09:54:56,829 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-02-17 09:54:56,829 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-02-17 09:54:56,829 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-02-17 09:54:56,829 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CDC0>
2025-02-17 09:54:56,829 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-02-17 09:54:56,829 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-02-17 09:54:56,829 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset + $314binary_multiply.7
2025-02-17 09:54:56,829 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:54:56,830 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-02-17 09:54:56,830 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset + $330binary_multiply.15
2025-02-17 09:54:56,830 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:54:56,830 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-02-17 09:54:56,830 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-02-17 09:54:56,830 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,830 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n + k
2025-02-17 09:54:56,830 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-02-17 09:54:56,830 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-02-17 09:54:56,830 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-02-17 09:54:56,830 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-02-17 09:54:56,830 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:54:56,830 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-02-17 09:54:56,830 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:54:56,830 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-02-17 09:54:56,830 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CDC0>
2025-02-17 09:54:56,830 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:54:56,830 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-02-17 09:54:56,830 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CDC0>
2025-02-17 09:54:56,830 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-02-17 09:54:56,830 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-02-17 09:54:56,830 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-02-17 09:54:56,830 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001ED6600CF70>],
             82: [<numba.core.ir.Assign object at 0x000001ED6600D0F0>]})
2025-02-17 09:54:56,831 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-02-17 09:54:56,831 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED66053CA0>
2025-02-17 09:54:56,831 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-02-17 09:54:56,831 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-02-17 09:54:56,831 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-02-17 09:54:56,831 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-02-17 09:54:56,831 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-02-17 09:54:56,831 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-02-17 09:54:56,831 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-02-17 09:54:56,831 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-02-17 09:54:56,831 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-02-17 09:54:56,831 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,831 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-02-17 09:54:56,831 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-02-17 09:54:56,831 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-02-17 09:54:56,831 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-02-17 09:54:56,831 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-02-17 09:54:56,831 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-02-17 09:54:56,831 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-02-17 09:54:56,831 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-02-17 09:54:56,831 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-02-17 09:54:56,831 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-02-17 09:54:56,831 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-02-17 09:54:56,831 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-02-17 09:54:56,832 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-02-17 09:54:56,832 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-02-17 09:54:56,832 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-02-17 09:54:56,832 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-02-17 09:54:56,832 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-02-17 09:54:56,832 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,832 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-02-17 09:54:56,832 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-02-17 09:54:56,832 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:54:56,832 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-02-17 09:54:56,832 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED66053CA0>
2025-02-17 09:54:56,832 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-02-17 09:54:56,832 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-02-17 09:54:56,832 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-02-17 09:54:56,832 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-02-17 09:54:56,832 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-02-17 09:54:56,832 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-02-17 09:54:56,832 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED66053CA0>
2025-02-17 09:54:56,832 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-02-17 09:54:56,832 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,832 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-02-17 09:54:56,832 - numba.core.ssa - DEBUG - on stmt: n.1 = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,832 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register.1 - n
2025-02-17 09:54:56,833 - numba.core.ssa - DEBUG - find_def var='n' stmt=$106binary_subtract.11 = time_register.1 - n
2025-02-17 09:54:56,833 - numba.core.ssa - DEBUG - replaced with: $106binary_subtract.11 = time_register.1 - n.1
2025-02-17 09:54:56,833 - numba.core.ssa - DEBUG - on stmt: frac = scale * $106binary_subtract.11
2025-02-17 09:54:56,833 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-02-17 09:54:56,833 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-02-17 09:54:56,833 - numba.core.ssa - DEBUG - on stmt: offset = call $120load_global.16(index_frac, func=$120load_global.16, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,833 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-02-17 09:54:56,833 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-02-17 09:54:56,833 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-02-17 09:54:56,833 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n + $const140.24
2025-02-17 09:54:56,833 - numba.core.ssa - DEBUG - find_def var='n' stmt=$142binary_add.25 = n + $const140.24
2025-02-17 09:54:56,833 - numba.core.ssa - DEBUG - replaced with: $142binary_add.25 = n.1 + $const140.24
2025-02-17 09:54:56,833 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset
2025-02-17 09:54:56,833 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-02-17 09:54:56,833 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,833 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-02-17 09:54:56,833 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,833 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-02-17 09:54:56,833 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-02-17 09:54:56,834 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:54:56,834 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-02-17 09:54:56,834 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED66053CA0>
2025-02-17 09:54:56,834 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-02-17 09:54:56,834 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-02-17 09:54:56,834 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-02-17 09:54:56,834 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-02-17 09:54:56,834 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-02-17 09:54:56,834 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-02-17 09:54:56,834 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED66053CA0>
2025-02-17 09:54:56,834 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-02-17 09:54:56,834 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-02-17 09:54:56,834 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset + $178binary_multiply.7
2025-02-17 09:54:56,834 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:54:56,834 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-02-17 09:54:56,834 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset + $194binary_multiply.15
2025-02-17 09:54:56,834 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:54:56,834 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-02-17 09:54:56,834 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-02-17 09:54:56,834 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,835 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n - i
2025-02-17 09:54:56,835 - numba.core.ssa - DEBUG - find_def var='n' stmt=$222binary_subtract.29 = n - i
2025-02-17 09:54:56,835 - numba.core.ssa - DEBUG - find_def_from_top label 168
2025-02-17 09:54:56,835 - numba.core.ssa - DEBUG - idom 166 from label 168
2025-02-17 09:54:56,835 - numba.core.ssa - DEBUG - find_def_from_bottom label 166
2025-02-17 09:54:56,835 - numba.core.ssa - DEBUG - find_def_from_top label 166
2025-02-17 09:54:56,835 - numba.core.ssa - DEBUG - idom 82 from label 166
2025-02-17 09:54:56,835 - numba.core.ssa - DEBUG - find_def_from_bottom label 82
2025-02-17 09:54:56,835 - numba.core.ssa - DEBUG - replaced with: $222binary_subtract.29 = n.1 - i
2025-02-17 09:54:56,835 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-02-17 09:54:56,835 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-02-17 09:54:56,835 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:54:56,835 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-02-17 09:54:56,835 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:54:56,835 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-02-17 09:54:56,835 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED66053CA0>
2025-02-17 09:54:56,835 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac
2025-02-17 09:54:56,835 - numba.core.ssa - DEBUG - on stmt: frac = $240binary_subtract.3
2025-02-17 09:54:56,835 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-02-17 09:54:56,835 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-02-17 09:54:56,835 - numba.core.ssa - DEBUG - on stmt: offset = call $252load_global.7(index_frac, func=$252load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,835 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-02-17 09:54:56,836 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-02-17 09:54:56,836 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n
2025-02-17 09:54:56,836 - numba.core.ssa - DEBUG - find_def var='n' stmt=$274binary_subtract.16 = n_orig - n
2025-02-17 09:54:56,836 - numba.core.ssa - DEBUG - find_def_from_top label 236
2025-02-17 09:54:56,836 - numba.core.ssa - DEBUG - idom 166 from label 236
2025-02-17 09:54:56,836 - numba.core.ssa - DEBUG - find_def_from_bottom label 166
2025-02-17 09:54:56,836 - numba.core.ssa - DEBUG - find_def_from_top label 166
2025-02-17 09:54:56,836 - numba.core.ssa - DEBUG - idom 82 from label 166
2025-02-17 09:54:56,836 - numba.core.ssa - DEBUG - find_def_from_bottom label 82
2025-02-17 09:54:56,836 - numba.core.ssa - DEBUG - replaced with: $274binary_subtract.16 = n_orig - n.1
2025-02-17 09:54:56,836 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-02-17 09:54:56,836 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-02-17 09:54:56,836 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset
2025-02-17 09:54:56,836 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-02-17 09:54:56,836 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,836 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-02-17 09:54:56,836 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,836 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-02-17 09:54:56,836 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-02-17 09:54:56,836 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:54:56,836 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-02-17 09:54:56,836 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED66053CA0>
2025-02-17 09:54:56,837 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-02-17 09:54:56,837 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-02-17 09:54:56,837 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-02-17 09:54:56,837 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-02-17 09:54:56,837 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-02-17 09:54:56,837 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-02-17 09:54:56,837 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED66053CA0>
2025-02-17 09:54:56,837 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-02-17 09:54:56,837 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-02-17 09:54:56,837 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset + $314binary_multiply.7
2025-02-17 09:54:56,837 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:54:56,837 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-02-17 09:54:56,837 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset + $330binary_multiply.15
2025-02-17 09:54:56,837 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:54:56,837 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-02-17 09:54:56,837 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-02-17 09:54:56,837 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,837 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n + k
2025-02-17 09:54:56,837 - numba.core.ssa - DEBUG - find_def var='n' stmt=$358binary_add.29 = n + k
2025-02-17 09:54:56,837 - numba.core.ssa - DEBUG - find_def_from_top label 304
2025-02-17 09:54:56,837 - numba.core.ssa - DEBUG - idom 302 from label 304
2025-02-17 09:54:56,837 - numba.core.ssa - DEBUG - find_def_from_bottom label 302
2025-02-17 09:54:56,837 - numba.core.ssa - DEBUG - find_def_from_top label 302
2025-02-17 09:54:56,837 - numba.core.ssa - DEBUG - idom 236 from label 302
2025-02-17 09:54:56,838 - numba.core.ssa - DEBUG - find_def_from_bottom label 236
2025-02-17 09:54:56,838 - numba.core.ssa - DEBUG - find_def_from_top label 236
2025-02-17 09:54:56,838 - numba.core.ssa - DEBUG - idom 166 from label 236
2025-02-17 09:54:56,838 - numba.core.ssa - DEBUG - find_def_from_bottom label 166
2025-02-17 09:54:56,838 - numba.core.ssa - DEBUG - find_def_from_top label 166
2025-02-17 09:54:56,838 - numba.core.ssa - DEBUG - idom 82 from label 166
2025-02-17 09:54:56,838 - numba.core.ssa - DEBUG - find_def_from_bottom label 82
2025-02-17 09:54:56,838 - numba.core.ssa - DEBUG - replaced with: $358binary_add.29 = n.1 + k
2025-02-17 09:54:56,838 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-02-17 09:54:56,838 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-02-17 09:54:56,838 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-02-17 09:54:56,838 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-02-17 09:54:56,838 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:54:56,838 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-02-17 09:54:56,838 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:54:56,838 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-02-17 09:54:56,838 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED66053CA0>
2025-02-17 09:54:56,838 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:54:56,838 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-02-17 09:54:56,838 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED66053CA0>
2025-02-17 09:54:56,838 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-02-17 09:54:56,838 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-02-17 09:54:56,838 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-02-17 09:54:56,838 - numba.core.ssa - DEBUG - Fix SSA violator on var frac
2025-02-17 09:54:56,839 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-02-17 09:54:56,839 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,839 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-02-17 09:54:56,839 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-02-17 09:54:56,839 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-02-17 09:54:56,839 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-02-17 09:54:56,839 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-02-17 09:54:56,839 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-02-17 09:54:56,839 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-02-17 09:54:56,839 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-02-17 09:54:56,839 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-02-17 09:54:56,839 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,839 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-02-17 09:54:56,839 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-02-17 09:54:56,839 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-02-17 09:54:56,839 - numba.core.ssa - DEBUG - first assign: frac
2025-02-17 09:54:56,839 - numba.core.ssa - DEBUG - replaced with: frac = const(float, 0.0)
2025-02-17 09:54:56,839 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-02-17 09:54:56,839 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-02-17 09:54:56,839 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-02-17 09:54:56,839 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-02-17 09:54:56,839 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-02-17 09:54:56,839 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-02-17 09:54:56,839 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-02-17 09:54:56,839 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-02-17 09:54:56,840 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-02-17 09:54:56,840 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-02-17 09:54:56,840 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-02-17 09:54:56,840 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-02-17 09:54:56,840 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-02-17 09:54:56,840 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-02-17 09:54:56,840 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,840 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-02-17 09:54:56,840 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-02-17 09:54:56,840 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:54:56,840 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-02-17 09:54:56,840 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,840 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-02-17 09:54:56,840 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-02-17 09:54:56,840 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-02-17 09:54:56,840 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-02-17 09:54:56,840 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-02-17 09:54:56,840 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-02-17 09:54:56,840 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,840 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-02-17 09:54:56,840 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,840 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-02-17 09:54:56,840 - numba.core.ssa - DEBUG - on stmt: n.1 = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,840 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register.1 - n.1
2025-02-17 09:54:56,841 - numba.core.ssa - DEBUG - on stmt: frac = scale * $106binary_subtract.11
2025-02-17 09:54:56,841 - numba.core.ssa - DEBUG - replaced with: frac.1 = scale * $106binary_subtract.11
2025-02-17 09:54:56,841 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-02-17 09:54:56,841 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-02-17 09:54:56,841 - numba.core.ssa - DEBUG - on stmt: offset = call $120load_global.16(index_frac, func=$120load_global.16, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,841 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-02-17 09:54:56,841 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-02-17 09:54:56,841 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-02-17 09:54:56,841 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n.1 + $const140.24
2025-02-17 09:54:56,841 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset
2025-02-17 09:54:56,841 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-02-17 09:54:56,841 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,841 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-02-17 09:54:56,841 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,841 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-02-17 09:54:56,841 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-02-17 09:54:56,841 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:54:56,841 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-02-17 09:54:56,841 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,841 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-02-17 09:54:56,841 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-02-17 09:54:56,841 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-02-17 09:54:56,841 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-02-17 09:54:56,842 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-02-17 09:54:56,842 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-02-17 09:54:56,842 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,842 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-02-17 09:54:56,842 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-02-17 09:54:56,842 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset + $178binary_multiply.7
2025-02-17 09:54:56,842 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:54:56,842 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-02-17 09:54:56,842 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset + $194binary_multiply.15
2025-02-17 09:54:56,842 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:54:56,842 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-02-17 09:54:56,842 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-02-17 09:54:56,842 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,842 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n.1 - i
2025-02-17 09:54:56,842 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-02-17 09:54:56,842 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-02-17 09:54:56,842 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:54:56,842 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-02-17 09:54:56,842 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:54:56,842 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-02-17 09:54:56,842 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,842 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac
2025-02-17 09:54:56,842 - numba.core.ssa - DEBUG - on stmt: frac = $240binary_subtract.3
2025-02-17 09:54:56,842 - numba.core.ssa - DEBUG - replaced with: frac.2 = $240binary_subtract.3
2025-02-17 09:54:56,842 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-02-17 09:54:56,843 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-02-17 09:54:56,843 - numba.core.ssa - DEBUG - on stmt: offset = call $252load_global.7(index_frac, func=$252load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,843 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-02-17 09:54:56,843 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-02-17 09:54:56,843 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n.1
2025-02-17 09:54:56,843 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-02-17 09:54:56,843 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-02-17 09:54:56,843 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset
2025-02-17 09:54:56,843 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-02-17 09:54:56,843 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,843 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-02-17 09:54:56,843 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,843 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-02-17 09:54:56,843 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-02-17 09:54:56,843 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:54:56,843 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-02-17 09:54:56,843 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,843 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-02-17 09:54:56,843 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-02-17 09:54:56,843 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-02-17 09:54:56,843 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-02-17 09:54:56,843 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-02-17 09:54:56,843 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-02-17 09:54:56,844 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,844 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-02-17 09:54:56,844 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-02-17 09:54:56,844 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset + $314binary_multiply.7
2025-02-17 09:54:56,844 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:54:56,844 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-02-17 09:54:56,844 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset + $330binary_multiply.15
2025-02-17 09:54:56,844 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:54:56,844 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-02-17 09:54:56,844 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-02-17 09:54:56,844 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,844 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n.1 + k
2025-02-17 09:54:56,844 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-02-17 09:54:56,844 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-02-17 09:54:56,844 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-02-17 09:54:56,844 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-02-17 09:54:56,844 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:54:56,844 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-02-17 09:54:56,844 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:54:56,844 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-02-17 09:54:56,844 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,844 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:54:56,844 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-02-17 09:54:56,844 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,845 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-02-17 09:54:56,845 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-02-17 09:54:56,845 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-02-17 09:54:56,845 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001ED6600C7C0>],
             82: [<numba.core.ir.Assign object at 0x000001ED66053910>],
             236: [<numba.core.ir.Assign object at 0x000001ED66053F10>]})
2025-02-17 09:54:56,845 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-02-17 09:54:56,845 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED66053970>
2025-02-17 09:54:56,845 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-02-17 09:54:56,845 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-02-17 09:54:56,845 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-02-17 09:54:56,845 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-02-17 09:54:56,845 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-02-17 09:54:56,845 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-02-17 09:54:56,845 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-02-17 09:54:56,845 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-02-17 09:54:56,845 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-02-17 09:54:56,845 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,845 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-02-17 09:54:56,845 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-02-17 09:54:56,845 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-02-17 09:54:56,845 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-02-17 09:54:56,845 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-02-17 09:54:56,845 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-02-17 09:54:56,845 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-02-17 09:54:56,846 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-02-17 09:54:56,846 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-02-17 09:54:56,846 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-02-17 09:54:56,846 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-02-17 09:54:56,846 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-02-17 09:54:56,846 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-02-17 09:54:56,846 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-02-17 09:54:56,846 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-02-17 09:54:56,846 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-02-17 09:54:56,846 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-02-17 09:54:56,846 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,846 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-02-17 09:54:56,846 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-02-17 09:54:56,846 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:54:56,846 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-02-17 09:54:56,846 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED66053970>
2025-02-17 09:54:56,846 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-02-17 09:54:56,846 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-02-17 09:54:56,846 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-02-17 09:54:56,846 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-02-17 09:54:56,846 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-02-17 09:54:56,846 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-02-17 09:54:56,846 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED66053970>
2025-02-17 09:54:56,846 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-02-17 09:54:56,847 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,847 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-02-17 09:54:56,847 - numba.core.ssa - DEBUG - on stmt: n.1 = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,847 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register.1 - n.1
2025-02-17 09:54:56,847 - numba.core.ssa - DEBUG - on stmt: frac.1 = scale * $106binary_subtract.11
2025-02-17 09:54:56,847 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-02-17 09:54:56,847 - numba.core.ssa - DEBUG - find_def var='frac' stmt=index_frac = frac * num_table
2025-02-17 09:54:56,847 - numba.core.ssa - DEBUG - replaced with: index_frac = frac.1 * num_table
2025-02-17 09:54:56,847 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-02-17 09:54:56,847 - numba.core.ssa - DEBUG - on stmt: offset = call $120load_global.16(index_frac, func=$120load_global.16, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,847 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-02-17 09:54:56,847 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-02-17 09:54:56,847 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-02-17 09:54:56,847 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n.1 + $const140.24
2025-02-17 09:54:56,847 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset
2025-02-17 09:54:56,847 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-02-17 09:54:56,847 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,847 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-02-17 09:54:56,847 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,847 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-02-17 09:54:56,847 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-02-17 09:54:56,848 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:54:56,848 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-02-17 09:54:56,848 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED66053970>
2025-02-17 09:54:56,848 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-02-17 09:54:56,848 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-02-17 09:54:56,848 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-02-17 09:54:56,848 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-02-17 09:54:56,848 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-02-17 09:54:56,848 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-02-17 09:54:56,848 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED66053970>
2025-02-17 09:54:56,848 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-02-17 09:54:56,848 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-02-17 09:54:56,848 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset + $178binary_multiply.7
2025-02-17 09:54:56,848 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:54:56,848 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-02-17 09:54:56,848 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset + $194binary_multiply.15
2025-02-17 09:54:56,848 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:54:56,848 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-02-17 09:54:56,848 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-02-17 09:54:56,848 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,848 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n.1 - i
2025-02-17 09:54:56,848 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-02-17 09:54:56,848 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-02-17 09:54:56,849 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:54:56,849 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-02-17 09:54:56,849 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:54:56,849 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-02-17 09:54:56,849 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED66053970>
2025-02-17 09:54:56,849 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac
2025-02-17 09:54:56,849 - numba.core.ssa - DEBUG - find_def var='frac' stmt=$240binary_subtract.3 = scale - frac
2025-02-17 09:54:56,849 - numba.core.ssa - DEBUG - find_def_from_top label 236
2025-02-17 09:54:56,849 - numba.core.ssa - DEBUG - idom 166 from label 236
2025-02-17 09:54:56,849 - numba.core.ssa - DEBUG - find_def_from_bottom label 166
2025-02-17 09:54:56,849 - numba.core.ssa - DEBUG - find_def_from_top label 166
2025-02-17 09:54:56,849 - numba.core.ssa - DEBUG - idom 82 from label 166
2025-02-17 09:54:56,849 - numba.core.ssa - DEBUG - find_def_from_bottom label 82
2025-02-17 09:54:56,849 - numba.core.ssa - DEBUG - replaced with: $240binary_subtract.3 = scale - frac.1
2025-02-17 09:54:56,849 - numba.core.ssa - DEBUG - on stmt: frac.2 = $240binary_subtract.3
2025-02-17 09:54:56,849 - numba.core.ssa - DEBUG - on stmt: index_frac = frac * num_table
2025-02-17 09:54:56,849 - numba.core.ssa - DEBUG - find_def var='frac' stmt=index_frac = frac * num_table
2025-02-17 09:54:56,849 - numba.core.ssa - DEBUG - replaced with: index_frac = frac.2 * num_table
2025-02-17 09:54:56,849 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-02-17 09:54:56,849 - numba.core.ssa - DEBUG - on stmt: offset = call $252load_global.7(index_frac, func=$252load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,850 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-02-17 09:54:56,850 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-02-17 09:54:56,850 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n.1
2025-02-17 09:54:56,850 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-02-17 09:54:56,850 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-02-17 09:54:56,850 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset
2025-02-17 09:54:56,850 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-02-17 09:54:56,850 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,850 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-02-17 09:54:56,850 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,850 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-02-17 09:54:56,850 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-02-17 09:54:56,850 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:54:56,850 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-02-17 09:54:56,850 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED66053970>
2025-02-17 09:54:56,850 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-02-17 09:54:56,850 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-02-17 09:54:56,850 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-02-17 09:54:56,850 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-02-17 09:54:56,850 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-02-17 09:54:56,850 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-02-17 09:54:56,851 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED66053970>
2025-02-17 09:54:56,851 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-02-17 09:54:56,851 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-02-17 09:54:56,851 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset + $314binary_multiply.7
2025-02-17 09:54:56,851 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:54:56,851 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-02-17 09:54:56,851 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset + $330binary_multiply.15
2025-02-17 09:54:56,851 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:54:56,851 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-02-17 09:54:56,851 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-02-17 09:54:56,851 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,851 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n.1 + k
2025-02-17 09:54:56,851 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-02-17 09:54:56,851 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-02-17 09:54:56,851 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-02-17 09:54:56,851 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-02-17 09:54:56,851 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:54:56,851 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-02-17 09:54:56,851 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:54:56,851 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-02-17 09:54:56,851 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED66053970>
2025-02-17 09:54:56,851 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:54:56,851 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-02-17 09:54:56,852 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED66053970>
2025-02-17 09:54:56,852 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-02-17 09:54:56,852 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-02-17 09:54:56,852 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-02-17 09:54:56,852 - numba.core.ssa - DEBUG - Fix SSA violator on var index_frac
2025-02-17 09:54:56,852 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-02-17 09:54:56,852 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CDF0>
2025-02-17 09:54:56,852 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-02-17 09:54:56,852 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-02-17 09:54:56,852 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-02-17 09:54:56,852 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-02-17 09:54:56,852 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-02-17 09:54:56,852 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-02-17 09:54:56,852 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-02-17 09:54:56,852 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-02-17 09:54:56,852 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-02-17 09:54:56,852 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,852 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-02-17 09:54:56,852 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-02-17 09:54:56,852 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-02-17 09:54:56,852 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-02-17 09:54:56,852 - numba.core.ssa - DEBUG - first assign: index_frac
2025-02-17 09:54:56,852 - numba.core.ssa - DEBUG - replaced with: index_frac = const(float, 0.0)
2025-02-17 09:54:56,852 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-02-17 09:54:56,853 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-02-17 09:54:56,853 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-02-17 09:54:56,853 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-02-17 09:54:56,853 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-02-17 09:54:56,853 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-02-17 09:54:56,853 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-02-17 09:54:56,853 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-02-17 09:54:56,853 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-02-17 09:54:56,853 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-02-17 09:54:56,853 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-02-17 09:54:56,853 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-02-17 09:54:56,853 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-02-17 09:54:56,853 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,853 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-02-17 09:54:56,853 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-02-17 09:54:56,853 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:54:56,853 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-02-17 09:54:56,853 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CDF0>
2025-02-17 09:54:56,853 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-02-17 09:54:56,853 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-02-17 09:54:56,853 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-02-17 09:54:56,853 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-02-17 09:54:56,853 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-02-17 09:54:56,853 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-02-17 09:54:56,853 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CDF0>
2025-02-17 09:54:56,854 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-02-17 09:54:56,854 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,854 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-02-17 09:54:56,854 - numba.core.ssa - DEBUG - on stmt: n.1 = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,854 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register.1 - n.1
2025-02-17 09:54:56,854 - numba.core.ssa - DEBUG - on stmt: frac.1 = scale * $106binary_subtract.11
2025-02-17 09:54:56,854 - numba.core.ssa - DEBUG - on stmt: index_frac = frac.1 * num_table
2025-02-17 09:54:56,854 - numba.core.ssa - DEBUG - replaced with: index_frac.1 = frac.1 * num_table
2025-02-17 09:54:56,854 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-02-17 09:54:56,854 - numba.core.ssa - DEBUG - on stmt: offset = call $120load_global.16(index_frac, func=$120load_global.16, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,854 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-02-17 09:54:56,854 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-02-17 09:54:56,854 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-02-17 09:54:56,854 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n.1 + $const140.24
2025-02-17 09:54:56,854 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset
2025-02-17 09:54:56,854 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-02-17 09:54:56,854 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,854 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-02-17 09:54:56,854 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,854 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-02-17 09:54:56,854 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-02-17 09:54:56,854 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:54:56,854 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-02-17 09:54:56,855 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CDF0>
2025-02-17 09:54:56,855 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-02-17 09:54:56,855 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-02-17 09:54:56,855 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-02-17 09:54:56,855 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-02-17 09:54:56,855 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-02-17 09:54:56,855 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-02-17 09:54:56,855 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CDF0>
2025-02-17 09:54:56,855 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-02-17 09:54:56,855 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-02-17 09:54:56,855 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset + $178binary_multiply.7
2025-02-17 09:54:56,855 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:54:56,855 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-02-17 09:54:56,855 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset + $194binary_multiply.15
2025-02-17 09:54:56,855 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:54:56,855 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-02-17 09:54:56,855 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-02-17 09:54:56,855 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,855 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n.1 - i
2025-02-17 09:54:56,855 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-02-17 09:54:56,855 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-02-17 09:54:56,855 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:54:56,855 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-02-17 09:54:56,855 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:54:56,856 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-02-17 09:54:56,856 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CDF0>
2025-02-17 09:54:56,856 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac.1
2025-02-17 09:54:56,856 - numba.core.ssa - DEBUG - on stmt: frac.2 = $240binary_subtract.3
2025-02-17 09:54:56,856 - numba.core.ssa - DEBUG - on stmt: index_frac = frac.2 * num_table
2025-02-17 09:54:56,856 - numba.core.ssa - DEBUG - replaced with: index_frac.2 = frac.2 * num_table
2025-02-17 09:54:56,856 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-02-17 09:54:56,856 - numba.core.ssa - DEBUG - on stmt: offset = call $252load_global.7(index_frac, func=$252load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,856 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-02-17 09:54:56,856 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-02-17 09:54:56,856 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n.1
2025-02-17 09:54:56,856 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-02-17 09:54:56,856 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-02-17 09:54:56,856 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset
2025-02-17 09:54:56,856 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-02-17 09:54:56,856 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,856 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-02-17 09:54:56,856 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,856 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-02-17 09:54:56,856 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-02-17 09:54:56,856 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:54:56,856 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-02-17 09:54:56,856 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CDF0>
2025-02-17 09:54:56,856 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-02-17 09:54:56,857 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-02-17 09:54:56,857 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-02-17 09:54:56,857 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-02-17 09:54:56,857 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-02-17 09:54:56,857 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-02-17 09:54:56,857 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CDF0>
2025-02-17 09:54:56,857 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-02-17 09:54:56,857 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-02-17 09:54:56,857 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset + $314binary_multiply.7
2025-02-17 09:54:56,857 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:54:56,857 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-02-17 09:54:56,857 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset + $330binary_multiply.15
2025-02-17 09:54:56,857 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:54:56,857 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-02-17 09:54:56,857 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-02-17 09:54:56,857 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,857 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n.1 + k
2025-02-17 09:54:56,857 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-02-17 09:54:56,857 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-02-17 09:54:56,857 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-02-17 09:54:56,857 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-02-17 09:54:56,857 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:54:56,857 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-02-17 09:54:56,857 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:54:56,858 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-02-17 09:54:56,858 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CDF0>
2025-02-17 09:54:56,858 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:54:56,858 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-02-17 09:54:56,858 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600CDF0>
2025-02-17 09:54:56,858 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-02-17 09:54:56,858 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-02-17 09:54:56,858 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-02-17 09:54:56,858 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001ED6600CC70>],
             82: [<numba.core.ir.Assign object at 0x000001ED66053D30>],
             236: [<numba.core.ir.Assign object at 0x000001ED66059960>]})
2025-02-17 09:54:56,858 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-02-17 09:54:56,858 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED66053EB0>
2025-02-17 09:54:56,858 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-02-17 09:54:56,858 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-02-17 09:54:56,858 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-02-17 09:54:56,858 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-02-17 09:54:56,858 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-02-17 09:54:56,858 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-02-17 09:54:56,858 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-02-17 09:54:56,858 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-02-17 09:54:56,858 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-02-17 09:54:56,858 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,858 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-02-17 09:54:56,858 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-02-17 09:54:56,859 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-02-17 09:54:56,859 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-02-17 09:54:56,859 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-02-17 09:54:56,859 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-02-17 09:54:56,859 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-02-17 09:54:56,859 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-02-17 09:54:56,859 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-02-17 09:54:56,859 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-02-17 09:54:56,859 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-02-17 09:54:56,859 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-02-17 09:54:56,859 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-02-17 09:54:56,859 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-02-17 09:54:56,859 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-02-17 09:54:56,859 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-02-17 09:54:56,859 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-02-17 09:54:56,859 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,859 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-02-17 09:54:56,859 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-02-17 09:54:56,859 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:54:56,859 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-02-17 09:54:56,859 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED66053EB0>
2025-02-17 09:54:56,859 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-02-17 09:54:56,859 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-02-17 09:54:56,859 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-02-17 09:54:56,860 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-02-17 09:54:56,860 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-02-17 09:54:56,860 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-02-17 09:54:56,860 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED66053EB0>
2025-02-17 09:54:56,860 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-02-17 09:54:56,860 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,860 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-02-17 09:54:56,860 - numba.core.ssa - DEBUG - on stmt: n.1 = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,860 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register.1 - n.1
2025-02-17 09:54:56,860 - numba.core.ssa - DEBUG - on stmt: frac.1 = scale * $106binary_subtract.11
2025-02-17 09:54:56,860 - numba.core.ssa - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-02-17 09:54:56,860 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-02-17 09:54:56,860 - numba.core.ssa - DEBUG - on stmt: offset = call $120load_global.16(index_frac, func=$120load_global.16, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,860 - numba.core.ssa - DEBUG - find_def var='index_frac' stmt=offset = call $120load_global.16(index_frac, func=$120load_global.16, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,860 - numba.core.ssa - DEBUG - replaced with: offset = call $120load_global.16(index_frac.1, func=$120load_global.16, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,860 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-02-17 09:54:56,860 - numba.core.ssa - DEBUG - find_def var='index_frac' stmt=eta = index_frac - offset
2025-02-17 09:54:56,860 - numba.core.ssa - DEBUG - replaced with: eta = index_frac.1 - offset
2025-02-17 09:54:56,860 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-02-17 09:54:56,860 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-02-17 09:54:56,861 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n.1 + $const140.24
2025-02-17 09:54:56,861 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset
2025-02-17 09:54:56,861 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-02-17 09:54:56,861 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,861 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-02-17 09:54:56,861 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,861 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-02-17 09:54:56,861 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-02-17 09:54:56,861 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:54:56,861 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-02-17 09:54:56,861 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED66053EB0>
2025-02-17 09:54:56,861 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-02-17 09:54:56,861 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-02-17 09:54:56,861 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-02-17 09:54:56,861 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-02-17 09:54:56,861 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-02-17 09:54:56,861 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-02-17 09:54:56,861 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED66053EB0>
2025-02-17 09:54:56,861 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-02-17 09:54:56,861 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-02-17 09:54:56,861 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset + $178binary_multiply.7
2025-02-17 09:54:56,861 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:54:56,862 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-02-17 09:54:56,862 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset + $194binary_multiply.15
2025-02-17 09:54:56,862 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:54:56,862 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-02-17 09:54:56,862 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-02-17 09:54:56,862 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,862 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n.1 - i
2025-02-17 09:54:56,862 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-02-17 09:54:56,862 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-02-17 09:54:56,862 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:54:56,862 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-02-17 09:54:56,862 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:54:56,862 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-02-17 09:54:56,862 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED66053EB0>
2025-02-17 09:54:56,862 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac.1
2025-02-17 09:54:56,862 - numba.core.ssa - DEBUG - on stmt: frac.2 = $240binary_subtract.3
2025-02-17 09:54:56,862 - numba.core.ssa - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-02-17 09:54:56,862 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-02-17 09:54:56,862 - numba.core.ssa - DEBUG - on stmt: offset = call $252load_global.7(index_frac, func=$252load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,862 - numba.core.ssa - DEBUG - find_def var='index_frac' stmt=offset = call $252load_global.7(index_frac, func=$252load_global.7, args=[Var(index_frac, interpn.py:14)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,862 - numba.core.ssa - DEBUG - replaced with: offset = call $252load_global.7(index_frac.2, func=$252load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,862 - numba.core.ssa - DEBUG - on stmt: eta = index_frac - offset
2025-02-17 09:54:56,863 - numba.core.ssa - DEBUG - find_def var='index_frac' stmt=eta = index_frac - offset
2025-02-17 09:54:56,863 - numba.core.ssa - DEBUG - replaced with: eta = index_frac.2 - offset
2025-02-17 09:54:56,863 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-02-17 09:54:56,863 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n.1
2025-02-17 09:54:56,863 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-02-17 09:54:56,863 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-02-17 09:54:56,863 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset
2025-02-17 09:54:56,863 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-02-17 09:54:56,863 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,863 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-02-17 09:54:56,863 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,863 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-02-17 09:54:56,863 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-02-17 09:54:56,863 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:54:56,863 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-02-17 09:54:56,863 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED66053EB0>
2025-02-17 09:54:56,863 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-02-17 09:54:56,863 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-02-17 09:54:56,863 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-02-17 09:54:56,863 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-02-17 09:54:56,863 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-02-17 09:54:56,864 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-02-17 09:54:56,864 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED66053EB0>
2025-02-17 09:54:56,864 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-02-17 09:54:56,864 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-02-17 09:54:56,864 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset + $314binary_multiply.7
2025-02-17 09:54:56,864 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:54:56,864 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-02-17 09:54:56,864 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset + $330binary_multiply.15
2025-02-17 09:54:56,864 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:54:56,864 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-02-17 09:54:56,864 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-02-17 09:54:56,864 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,864 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n.1 + k
2025-02-17 09:54:56,864 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-02-17 09:54:56,864 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-02-17 09:54:56,864 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-02-17 09:54:56,864 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-02-17 09:54:56,864 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:54:56,864 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-02-17 09:54:56,864 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:54:56,864 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-02-17 09:54:56,864 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED66053EB0>
2025-02-17 09:54:56,864 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:54:56,865 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-02-17 09:54:56,865 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED66053EB0>
2025-02-17 09:54:56,865 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-02-17 09:54:56,865 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-02-17 09:54:56,865 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-02-17 09:54:56,865 - numba.core.ssa - DEBUG - Fix SSA violator on var offset
2025-02-17 09:54:56,865 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-02-17 09:54:56,865 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600D240>
2025-02-17 09:54:56,865 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-02-17 09:54:56,865 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-02-17 09:54:56,865 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-02-17 09:54:56,865 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-02-17 09:54:56,865 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-02-17 09:54:56,865 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-02-17 09:54:56,865 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-02-17 09:54:56,865 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-02-17 09:54:56,865 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-02-17 09:54:56,865 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,865 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-02-17 09:54:56,865 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-02-17 09:54:56,865 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-02-17 09:54:56,865 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-02-17 09:54:56,866 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-02-17 09:54:56,866 - numba.core.ssa - DEBUG - first assign: offset
2025-02-17 09:54:56,866 - numba.core.ssa - DEBUG - replaced with: offset = const(int, 0)
2025-02-17 09:54:56,866 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-02-17 09:54:56,866 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-02-17 09:54:56,866 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-02-17 09:54:56,866 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-02-17 09:54:56,866 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-02-17 09:54:56,866 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-02-17 09:54:56,866 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-02-17 09:54:56,866 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-02-17 09:54:56,866 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-02-17 09:54:56,866 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-02-17 09:54:56,866 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-02-17 09:54:56,866 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-02-17 09:54:56,866 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,866 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-02-17 09:54:56,866 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-02-17 09:54:56,866 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:54:56,866 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-02-17 09:54:56,866 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600D240>
2025-02-17 09:54:56,866 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-02-17 09:54:56,866 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-02-17 09:54:56,866 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-02-17 09:54:56,867 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-02-17 09:54:56,867 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-02-17 09:54:56,867 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-02-17 09:54:56,867 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600D240>
2025-02-17 09:54:56,867 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-02-17 09:54:56,867 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,867 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-02-17 09:54:56,867 - numba.core.ssa - DEBUG - on stmt: n.1 = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,867 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register.1 - n.1
2025-02-17 09:54:56,867 - numba.core.ssa - DEBUG - on stmt: frac.1 = scale * $106binary_subtract.11
2025-02-17 09:54:56,867 - numba.core.ssa - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-02-17 09:54:56,867 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-02-17 09:54:56,867 - numba.core.ssa - DEBUG - on stmt: offset = call $120load_global.16(index_frac.1, func=$120load_global.16, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,867 - numba.core.ssa - DEBUG - replaced with: offset.1 = call $120load_global.16(index_frac.1, func=$120load_global.16, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,867 - numba.core.ssa - DEBUG - on stmt: eta = index_frac.1 - offset
2025-02-17 09:54:56,867 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-02-17 09:54:56,867 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-02-17 09:54:56,867 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n.1 + $const140.24
2025-02-17 09:54:56,867 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset
2025-02-17 09:54:56,867 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-02-17 09:54:56,867 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,867 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-02-17 09:54:56,867 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,868 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-02-17 09:54:56,868 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-02-17 09:54:56,868 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:54:56,868 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-02-17 09:54:56,868 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600D240>
2025-02-17 09:54:56,868 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-02-17 09:54:56,868 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-02-17 09:54:56,868 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-02-17 09:54:56,868 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-02-17 09:54:56,868 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-02-17 09:54:56,868 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-02-17 09:54:56,868 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600D240>
2025-02-17 09:54:56,868 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-02-17 09:54:56,868 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-02-17 09:54:56,868 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset + $178binary_multiply.7
2025-02-17 09:54:56,868 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:54:56,868 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-02-17 09:54:56,868 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset + $194binary_multiply.15
2025-02-17 09:54:56,868 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:54:56,868 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-02-17 09:54:56,868 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-02-17 09:54:56,868 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,868 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n.1 - i
2025-02-17 09:54:56,868 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-02-17 09:54:56,869 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-02-17 09:54:56,869 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:54:56,869 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-02-17 09:54:56,869 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:54:56,869 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-02-17 09:54:56,869 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600D240>
2025-02-17 09:54:56,869 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac.1
2025-02-17 09:54:56,869 - numba.core.ssa - DEBUG - on stmt: frac.2 = $240binary_subtract.3
2025-02-17 09:54:56,869 - numba.core.ssa - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-02-17 09:54:56,869 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-02-17 09:54:56,869 - numba.core.ssa - DEBUG - on stmt: offset = call $252load_global.7(index_frac.2, func=$252load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,869 - numba.core.ssa - DEBUG - replaced with: offset.2 = call $252load_global.7(index_frac.2, func=$252load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,869 - numba.core.ssa - DEBUG - on stmt: eta = index_frac.2 - offset
2025-02-17 09:54:56,869 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-02-17 09:54:56,869 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n.1
2025-02-17 09:54:56,869 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-02-17 09:54:56,869 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-02-17 09:54:56,869 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset
2025-02-17 09:54:56,869 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-02-17 09:54:56,869 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,869 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-02-17 09:54:56,869 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,869 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-02-17 09:54:56,870 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-02-17 09:54:56,870 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:54:56,870 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-02-17 09:54:56,870 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600D240>
2025-02-17 09:54:56,870 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-02-17 09:54:56,870 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-02-17 09:54:56,870 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-02-17 09:54:56,870 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-02-17 09:54:56,870 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-02-17 09:54:56,870 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-02-17 09:54:56,870 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600D240>
2025-02-17 09:54:56,870 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-02-17 09:54:56,870 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-02-17 09:54:56,870 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset + $314binary_multiply.7
2025-02-17 09:54:56,870 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:54:56,870 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-02-17 09:54:56,870 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset + $330binary_multiply.15
2025-02-17 09:54:56,870 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:54:56,870 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-02-17 09:54:56,870 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-02-17 09:54:56,870 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,870 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n.1 + k
2025-02-17 09:54:56,870 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-02-17 09:54:56,870 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-02-17 09:54:56,870 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-02-17 09:54:56,871 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-02-17 09:54:56,871 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:54:56,871 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-02-17 09:54:56,871 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:54:56,871 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-02-17 09:54:56,871 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600D240>
2025-02-17 09:54:56,871 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:54:56,871 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-02-17 09:54:56,871 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600D240>
2025-02-17 09:54:56,871 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-02-17 09:54:56,871 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-02-17 09:54:56,871 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-02-17 09:54:56,871 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001ED66053C70>],
             82: [<numba.core.ir.Assign object at 0x000001ED6605A020>],
             236: [<numba.core.ir.Assign object at 0x000001ED660598A0>]})
2025-02-17 09:54:56,871 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-02-17 09:54:56,871 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,871 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-02-17 09:54:56,871 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-02-17 09:54:56,871 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-02-17 09:54:56,871 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-02-17 09:54:56,871 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-02-17 09:54:56,871 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-02-17 09:54:56,871 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-02-17 09:54:56,871 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-02-17 09:54:56,872 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-02-17 09:54:56,872 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,872 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-02-17 09:54:56,872 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-02-17 09:54:56,872 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-02-17 09:54:56,872 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-02-17 09:54:56,872 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-02-17 09:54:56,872 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-02-17 09:54:56,872 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-02-17 09:54:56,872 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-02-17 09:54:56,872 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-02-17 09:54:56,872 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-02-17 09:54:56,872 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-02-17 09:54:56,872 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-02-17 09:54:56,872 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-02-17 09:54:56,872 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-02-17 09:54:56,872 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-02-17 09:54:56,872 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-02-17 09:54:56,872 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-02-17 09:54:56,872 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,872 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-02-17 09:54:56,872 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-02-17 09:54:56,872 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:54:56,872 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-02-17 09:54:56,873 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,873 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-02-17 09:54:56,873 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-02-17 09:54:56,873 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-02-17 09:54:56,873 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-02-17 09:54:56,873 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-02-17 09:54:56,873 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-02-17 09:54:56,873 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,873 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-02-17 09:54:56,873 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,873 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-02-17 09:54:56,873 - numba.core.ssa - DEBUG - on stmt: n.1 = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,873 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register.1 - n.1
2025-02-17 09:54:56,873 - numba.core.ssa - DEBUG - on stmt: frac.1 = scale * $106binary_subtract.11
2025-02-17 09:54:56,873 - numba.core.ssa - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-02-17 09:54:56,873 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-02-17 09:54:56,873 - numba.core.ssa - DEBUG - on stmt: offset.1 = call $120load_global.16(index_frac.1, func=$120load_global.16, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,873 - numba.core.ssa - DEBUG - on stmt: eta = index_frac.1 - offset
2025-02-17 09:54:56,873 - numba.core.ssa - DEBUG - find_def var='offset' stmt=eta = index_frac.1 - offset
2025-02-17 09:54:56,873 - numba.core.ssa - DEBUG - replaced with: eta = index_frac.1 - offset.1
2025-02-17 09:54:56,873 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-02-17 09:54:56,873 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-02-17 09:54:56,874 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n.1 + $const140.24
2025-02-17 09:54:56,874 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset
2025-02-17 09:54:56,874 - numba.core.ssa - DEBUG - find_def var='offset' stmt=$148binary_subtract.28 = nwin - offset
2025-02-17 09:54:56,874 - numba.core.ssa - DEBUG - replaced with: $148binary_subtract.28 = nwin - offset.1
2025-02-17 09:54:56,874 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-02-17 09:54:56,874 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,874 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-02-17 09:54:56,874 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,874 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-02-17 09:54:56,874 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-02-17 09:54:56,874 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:54:56,874 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-02-17 09:54:56,874 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,874 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-02-17 09:54:56,874 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-02-17 09:54:56,874 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-02-17 09:54:56,874 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-02-17 09:54:56,874 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-02-17 09:54:56,874 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-02-17 09:54:56,874 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,874 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-02-17 09:54:56,874 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-02-17 09:54:56,875 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset + $178binary_multiply.7
2025-02-17 09:54:56,875 - numba.core.ssa - DEBUG - find_def var='offset' stmt=$180binary_add.8 = offset + $178binary_multiply.7
2025-02-17 09:54:56,875 - numba.core.ssa - DEBUG - find_def_from_top label 168
2025-02-17 09:54:56,875 - numba.core.ssa - DEBUG - idom 166 from label 168
2025-02-17 09:54:56,875 - numba.core.ssa - DEBUG - find_def_from_bottom label 166
2025-02-17 09:54:56,875 - numba.core.ssa - DEBUG - find_def_from_top label 166
2025-02-17 09:54:56,875 - numba.core.ssa - DEBUG - idom 82 from label 166
2025-02-17 09:54:56,875 - numba.core.ssa - DEBUG - find_def_from_bottom label 82
2025-02-17 09:54:56,875 - numba.core.ssa - DEBUG - replaced with: $180binary_add.8 = offset.1 + $178binary_multiply.7
2025-02-17 09:54:56,875 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:54:56,875 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-02-17 09:54:56,875 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset + $194binary_multiply.15
2025-02-17 09:54:56,875 - numba.core.ssa - DEBUG - find_def var='offset' stmt=$196binary_add.16 = offset + $194binary_multiply.15
2025-02-17 09:54:56,875 - numba.core.ssa - DEBUG - find_def_from_top label 168
2025-02-17 09:54:56,875 - numba.core.ssa - DEBUG - idom 166 from label 168
2025-02-17 09:54:56,875 - numba.core.ssa - DEBUG - find_def_from_bottom label 166
2025-02-17 09:54:56,875 - numba.core.ssa - DEBUG - find_def_from_top label 166
2025-02-17 09:54:56,875 - numba.core.ssa - DEBUG - idom 82 from label 166
2025-02-17 09:54:56,875 - numba.core.ssa - DEBUG - find_def_from_bottom label 82
2025-02-17 09:54:56,875 - numba.core.ssa - DEBUG - replaced with: $196binary_add.16 = offset.1 + $194binary_multiply.15
2025-02-17 09:54:56,875 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:54:56,875 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-02-17 09:54:56,875 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-02-17 09:54:56,875 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,876 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n.1 - i
2025-02-17 09:54:56,876 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-02-17 09:54:56,876 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-02-17 09:54:56,876 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:54:56,876 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-02-17 09:54:56,876 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:54:56,876 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-02-17 09:54:56,876 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,876 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac.1
2025-02-17 09:54:56,876 - numba.core.ssa - DEBUG - on stmt: frac.2 = $240binary_subtract.3
2025-02-17 09:54:56,876 - numba.core.ssa - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-02-17 09:54:56,876 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-02-17 09:54:56,876 - numba.core.ssa - DEBUG - on stmt: offset.2 = call $252load_global.7(index_frac.2, func=$252load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,876 - numba.core.ssa - DEBUG - on stmt: eta = index_frac.2 - offset
2025-02-17 09:54:56,876 - numba.core.ssa - DEBUG - find_def var='offset' stmt=eta = index_frac.2 - offset
2025-02-17 09:54:56,876 - numba.core.ssa - DEBUG - replaced with: eta = index_frac.2 - offset.2
2025-02-17 09:54:56,876 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-02-17 09:54:56,876 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n.1
2025-02-17 09:54:56,876 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-02-17 09:54:56,876 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-02-17 09:54:56,876 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset
2025-02-17 09:54:56,876 - numba.core.ssa - DEBUG - find_def var='offset' stmt=$284binary_subtract.21 = nwin - offset
2025-02-17 09:54:56,877 - numba.core.ssa - DEBUG - replaced with: $284binary_subtract.21 = nwin - offset.2
2025-02-17 09:54:56,877 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-02-17 09:54:56,877 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,877 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-02-17 09:54:56,877 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,877 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-02-17 09:54:56,877 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-02-17 09:54:56,877 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:54:56,877 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-02-17 09:54:56,877 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,877 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-02-17 09:54:56,877 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-02-17 09:54:56,877 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-02-17 09:54:56,877 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-02-17 09:54:56,877 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-02-17 09:54:56,877 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-02-17 09:54:56,877 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,877 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-02-17 09:54:56,877 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-02-17 09:54:56,877 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset + $314binary_multiply.7
2025-02-17 09:54:56,877 - numba.core.ssa - DEBUG - find_def var='offset' stmt=$316binary_add.8 = offset + $314binary_multiply.7
2025-02-17 09:54:56,877 - numba.core.ssa - DEBUG - find_def_from_top label 304
2025-02-17 09:54:56,878 - numba.core.ssa - DEBUG - idom 302 from label 304
2025-02-17 09:54:56,878 - numba.core.ssa - DEBUG - find_def_from_bottom label 302
2025-02-17 09:54:56,878 - numba.core.ssa - DEBUG - find_def_from_top label 302
2025-02-17 09:54:56,878 - numba.core.ssa - DEBUG - idom 236 from label 302
2025-02-17 09:54:56,878 - numba.core.ssa - DEBUG - find_def_from_bottom label 236
2025-02-17 09:54:56,878 - numba.core.ssa - DEBUG - replaced with: $316binary_add.8 = offset.2 + $314binary_multiply.7
2025-02-17 09:54:56,878 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:54:56,878 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-02-17 09:54:56,878 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset + $330binary_multiply.15
2025-02-17 09:54:56,878 - numba.core.ssa - DEBUG - find_def var='offset' stmt=$332binary_add.16 = offset + $330binary_multiply.15
2025-02-17 09:54:56,878 - numba.core.ssa - DEBUG - find_def_from_top label 304
2025-02-17 09:54:56,878 - numba.core.ssa - DEBUG - idom 302 from label 304
2025-02-17 09:54:56,878 - numba.core.ssa - DEBUG - find_def_from_bottom label 302
2025-02-17 09:54:56,878 - numba.core.ssa - DEBUG - find_def_from_top label 302
2025-02-17 09:54:56,878 - numba.core.ssa - DEBUG - idom 236 from label 302
2025-02-17 09:54:56,878 - numba.core.ssa - DEBUG - find_def_from_bottom label 236
2025-02-17 09:54:56,878 - numba.core.ssa - DEBUG - replaced with: $332binary_add.16 = offset.2 + $330binary_multiply.15
2025-02-17 09:54:56,878 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:54:56,878 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-02-17 09:54:56,878 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-02-17 09:54:56,878 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,878 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n.1 + k
2025-02-17 09:54:56,878 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-02-17 09:54:56,878 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-02-17 09:54:56,879 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-02-17 09:54:56,879 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-02-17 09:54:56,879 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:54:56,879 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-02-17 09:54:56,879 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:54:56,879 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-02-17 09:54:56,879 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,879 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:54:56,879 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-02-17 09:54:56,879 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600CBE0>
2025-02-17 09:54:56,879 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-02-17 09:54:56,879 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-02-17 09:54:56,879 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-02-17 09:54:56,879 - numba.core.ssa - DEBUG - Fix SSA violator on var eta
2025-02-17 09:54:56,879 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-02-17 09:54:56,879 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED66053D90>
2025-02-17 09:54:56,879 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-02-17 09:54:56,879 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-02-17 09:54:56,879 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-02-17 09:54:56,879 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-02-17 09:54:56,879 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-02-17 09:54:56,879 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-02-17 09:54:56,879 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-02-17 09:54:56,879 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-02-17 09:54:56,880 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-02-17 09:54:56,880 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,880 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-02-17 09:54:56,880 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-02-17 09:54:56,880 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-02-17 09:54:56,880 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-02-17 09:54:56,880 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-02-17 09:54:56,880 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-02-17 09:54:56,880 - numba.core.ssa - DEBUG - first assign: eta
2025-02-17 09:54:56,880 - numba.core.ssa - DEBUG - replaced with: eta = const(float, 0.0)
2025-02-17 09:54:56,880 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-02-17 09:54:56,880 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-02-17 09:54:56,880 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-02-17 09:54:56,880 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-02-17 09:54:56,880 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-02-17 09:54:56,880 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-02-17 09:54:56,880 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-02-17 09:54:56,880 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-02-17 09:54:56,880 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-02-17 09:54:56,880 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-02-17 09:54:56,880 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-02-17 09:54:56,880 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,880 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-02-17 09:54:56,880 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-02-17 09:54:56,881 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:54:56,881 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-02-17 09:54:56,881 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED66053D90>
2025-02-17 09:54:56,881 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-02-17 09:54:56,881 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-02-17 09:54:56,881 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-02-17 09:54:56,881 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-02-17 09:54:56,881 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-02-17 09:54:56,881 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-02-17 09:54:56,881 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED66053D90>
2025-02-17 09:54:56,881 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-02-17 09:54:56,881 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,881 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-02-17 09:54:56,881 - numba.core.ssa - DEBUG - on stmt: n.1 = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,881 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register.1 - n.1
2025-02-17 09:54:56,881 - numba.core.ssa - DEBUG - on stmt: frac.1 = scale * $106binary_subtract.11
2025-02-17 09:54:56,881 - numba.core.ssa - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-02-17 09:54:56,881 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-02-17 09:54:56,881 - numba.core.ssa - DEBUG - on stmt: offset.1 = call $120load_global.16(index_frac.1, func=$120load_global.16, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,881 - numba.core.ssa - DEBUG - on stmt: eta = index_frac.1 - offset.1
2025-02-17 09:54:56,881 - numba.core.ssa - DEBUG - replaced with: eta.1 = index_frac.1 - offset.1
2025-02-17 09:54:56,882 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-02-17 09:54:56,882 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-02-17 09:54:56,882 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n.1 + $const140.24
2025-02-17 09:54:56,882 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset.1
2025-02-17 09:54:56,882 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-02-17 09:54:56,882 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,882 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-02-17 09:54:56,882 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,882 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-02-17 09:54:56,882 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-02-17 09:54:56,882 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:54:56,882 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-02-17 09:54:56,882 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED66053D90>
2025-02-17 09:54:56,882 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-02-17 09:54:56,882 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-02-17 09:54:56,882 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-02-17 09:54:56,882 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-02-17 09:54:56,882 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-02-17 09:54:56,882 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-02-17 09:54:56,882 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED66053D90>
2025-02-17 09:54:56,882 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-02-17 09:54:56,882 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-02-17 09:54:56,883 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset.1 + $178binary_multiply.7
2025-02-17 09:54:56,883 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:54:56,883 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-02-17 09:54:56,883 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset.1 + $194binary_multiply.15
2025-02-17 09:54:56,883 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:54:56,883 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-02-17 09:54:56,883 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-02-17 09:54:56,883 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,883 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n.1 - i
2025-02-17 09:54:56,883 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-02-17 09:54:56,883 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-02-17 09:54:56,883 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:54:56,883 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-02-17 09:54:56,883 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:54:56,883 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-02-17 09:54:56,883 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED66053D90>
2025-02-17 09:54:56,883 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac.1
2025-02-17 09:54:56,883 - numba.core.ssa - DEBUG - on stmt: frac.2 = $240binary_subtract.3
2025-02-17 09:54:56,883 - numba.core.ssa - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-02-17 09:54:56,883 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-02-17 09:54:56,883 - numba.core.ssa - DEBUG - on stmt: offset.2 = call $252load_global.7(index_frac.2, func=$252load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,883 - numba.core.ssa - DEBUG - on stmt: eta = index_frac.2 - offset.2
2025-02-17 09:54:56,883 - numba.core.ssa - DEBUG - replaced with: eta.2 = index_frac.2 - offset.2
2025-02-17 09:54:56,883 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-02-17 09:54:56,884 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n.1
2025-02-17 09:54:56,884 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-02-17 09:54:56,884 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-02-17 09:54:56,884 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset.2
2025-02-17 09:54:56,884 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-02-17 09:54:56,884 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,884 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-02-17 09:54:56,884 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,884 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-02-17 09:54:56,884 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-02-17 09:54:56,884 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:54:56,884 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-02-17 09:54:56,884 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED66053D90>
2025-02-17 09:54:56,884 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-02-17 09:54:56,884 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-02-17 09:54:56,884 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-02-17 09:54:56,884 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-02-17 09:54:56,884 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-02-17 09:54:56,884 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-02-17 09:54:56,884 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED66053D90>
2025-02-17 09:54:56,884 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-02-17 09:54:56,884 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-02-17 09:54:56,884 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset.2 + $314binary_multiply.7
2025-02-17 09:54:56,885 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:54:56,885 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-02-17 09:54:56,885 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset.2 + $330binary_multiply.15
2025-02-17 09:54:56,885 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:54:56,885 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-02-17 09:54:56,885 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-02-17 09:54:56,885 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,885 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n.1 + k
2025-02-17 09:54:56,885 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-02-17 09:54:56,885 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-02-17 09:54:56,885 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-02-17 09:54:56,885 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-02-17 09:54:56,885 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:54:56,885 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-02-17 09:54:56,885 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:54:56,885 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-02-17 09:54:56,885 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED66053D90>
2025-02-17 09:54:56,885 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:54:56,885 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-02-17 09:54:56,885 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED66053D90>
2025-02-17 09:54:56,885 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-02-17 09:54:56,885 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-02-17 09:54:56,885 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-02-17 09:54:56,886 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001ED6600C640>],
             82: [<numba.core.ir.Assign object at 0x000001ED6605A6B0>],
             236: [<numba.core.ir.Assign object at 0x000001ED66059E10>]})
2025-02-17 09:54:56,886 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-02-17 09:54:56,886 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600CDF0>
2025-02-17 09:54:56,886 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-02-17 09:54:56,886 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-02-17 09:54:56,886 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-02-17 09:54:56,886 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-02-17 09:54:56,886 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-02-17 09:54:56,886 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-02-17 09:54:56,886 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-02-17 09:54:56,886 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-02-17 09:54:56,886 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-02-17 09:54:56,886 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,886 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-02-17 09:54:56,886 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-02-17 09:54:56,886 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-02-17 09:54:56,886 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-02-17 09:54:56,886 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-02-17 09:54:56,886 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-02-17 09:54:56,886 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-02-17 09:54:56,886 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-02-17 09:54:56,886 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-02-17 09:54:56,886 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-02-17 09:54:56,886 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-02-17 09:54:56,887 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-02-17 09:54:56,887 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-02-17 09:54:56,887 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-02-17 09:54:56,887 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-02-17 09:54:56,887 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-02-17 09:54:56,887 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-02-17 09:54:56,887 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,887 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-02-17 09:54:56,887 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-02-17 09:54:56,887 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:54:56,887 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-02-17 09:54:56,887 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600CDF0>
2025-02-17 09:54:56,887 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-02-17 09:54:56,887 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-02-17 09:54:56,887 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-02-17 09:54:56,887 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-02-17 09:54:56,887 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-02-17 09:54:56,887 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-02-17 09:54:56,887 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600CDF0>
2025-02-17 09:54:56,887 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-02-17 09:54:56,887 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,887 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-02-17 09:54:56,887 - numba.core.ssa - DEBUG - on stmt: n.1 = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,888 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register.1 - n.1
2025-02-17 09:54:56,888 - numba.core.ssa - DEBUG - on stmt: frac.1 = scale * $106binary_subtract.11
2025-02-17 09:54:56,888 - numba.core.ssa - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-02-17 09:54:56,888 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-02-17 09:54:56,888 - numba.core.ssa - DEBUG - on stmt: offset.1 = call $120load_global.16(index_frac.1, func=$120load_global.16, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,888 - numba.core.ssa - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-02-17 09:54:56,888 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-02-17 09:54:56,888 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-02-17 09:54:56,888 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n.1 + $const140.24
2025-02-17 09:54:56,888 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset.1
2025-02-17 09:54:56,888 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-02-17 09:54:56,888 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,888 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-02-17 09:54:56,888 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,888 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-02-17 09:54:56,888 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-02-17 09:54:56,888 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:54:56,888 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-02-17 09:54:56,888 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600CDF0>
2025-02-17 09:54:56,888 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-02-17 09:54:56,888 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-02-17 09:54:56,888 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-02-17 09:54:56,888 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-02-17 09:54:56,889 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-02-17 09:54:56,889 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-02-17 09:54:56,889 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600CDF0>
2025-02-17 09:54:56,889 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-02-17 09:54:56,889 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-02-17 09:54:56,889 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset.1 + $178binary_multiply.7
2025-02-17 09:54:56,889 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:54:56,889 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-02-17 09:54:56,889 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset.1 + $194binary_multiply.15
2025-02-17 09:54:56,889 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:54:56,889 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta * $198binary_subscr.17
2025-02-17 09:54:56,889 - numba.core.ssa - DEBUG - find_def var='eta' stmt=$200binary_multiply.18 = eta * $198binary_subscr.17
2025-02-17 09:54:56,889 - numba.core.ssa - DEBUG - find_def_from_top label 168
2025-02-17 09:54:56,889 - numba.core.ssa - DEBUG - idom 166 from label 168
2025-02-17 09:54:56,889 - numba.core.ssa - DEBUG - find_def_from_bottom label 166
2025-02-17 09:54:56,889 - numba.core.ssa - DEBUG - find_def_from_top label 166
2025-02-17 09:54:56,889 - numba.core.ssa - DEBUG - idom 82 from label 166
2025-02-17 09:54:56,889 - numba.core.ssa - DEBUG - find_def_from_bottom label 82
2025-02-17 09:54:56,889 - numba.core.ssa - DEBUG - replaced with: $200binary_multiply.18 = eta.1 * $198binary_subscr.17
2025-02-17 09:54:56,889 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-02-17 09:54:56,889 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,889 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n.1 - i
2025-02-17 09:54:56,889 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-02-17 09:54:56,890 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-02-17 09:54:56,890 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:54:56,890 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-02-17 09:54:56,890 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:54:56,890 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-02-17 09:54:56,890 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600CDF0>
2025-02-17 09:54:56,890 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac.1
2025-02-17 09:54:56,890 - numba.core.ssa - DEBUG - on stmt: frac.2 = $240binary_subtract.3
2025-02-17 09:54:56,890 - numba.core.ssa - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-02-17 09:54:56,890 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-02-17 09:54:56,890 - numba.core.ssa - DEBUG - on stmt: offset.2 = call $252load_global.7(index_frac.2, func=$252load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,890 - numba.core.ssa - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-02-17 09:54:56,890 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-02-17 09:54:56,890 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n.1
2025-02-17 09:54:56,890 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-02-17 09:54:56,890 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-02-17 09:54:56,890 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset.2
2025-02-17 09:54:56,890 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-02-17 09:54:56,890 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,890 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-02-17 09:54:56,890 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,890 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-02-17 09:54:56,891 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-02-17 09:54:56,891 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:54:56,891 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-02-17 09:54:56,891 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600CDF0>
2025-02-17 09:54:56,891 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-02-17 09:54:56,891 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-02-17 09:54:56,891 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-02-17 09:54:56,891 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-02-17 09:54:56,891 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-02-17 09:54:56,891 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-02-17 09:54:56,891 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600CDF0>
2025-02-17 09:54:56,891 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-02-17 09:54:56,891 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-02-17 09:54:56,891 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset.2 + $314binary_multiply.7
2025-02-17 09:54:56,891 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:54:56,891 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-02-17 09:54:56,891 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset.2 + $330binary_multiply.15
2025-02-17 09:54:56,891 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:54:56,891 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta * $334binary_subscr.17
2025-02-17 09:54:56,891 - numba.core.ssa - DEBUG - find_def var='eta' stmt=$336binary_multiply.18 = eta * $334binary_subscr.17
2025-02-17 09:54:56,891 - numba.core.ssa - DEBUG - find_def_from_top label 304
2025-02-17 09:54:56,891 - numba.core.ssa - DEBUG - idom 302 from label 304
2025-02-17 09:54:56,891 - numba.core.ssa - DEBUG - find_def_from_bottom label 302
2025-02-17 09:54:56,892 - numba.core.ssa - DEBUG - find_def_from_top label 302
2025-02-17 09:54:56,892 - numba.core.ssa - DEBUG - idom 236 from label 302
2025-02-17 09:54:56,892 - numba.core.ssa - DEBUG - find_def_from_bottom label 236
2025-02-17 09:54:56,892 - numba.core.ssa - DEBUG - replaced with: $336binary_multiply.18 = eta.2 * $334binary_subscr.17
2025-02-17 09:54:56,892 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-02-17 09:54:56,892 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,892 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n.1 + k
2025-02-17 09:54:56,892 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-02-17 09:54:56,892 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-02-17 09:54:56,892 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-02-17 09:54:56,892 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-02-17 09:54:56,892 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:54:56,892 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-02-17 09:54:56,892 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:54:56,892 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-02-17 09:54:56,892 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600CDF0>
2025-02-17 09:54:56,892 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:54:56,892 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-02-17 09:54:56,892 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600CDF0>
2025-02-17 09:54:56,892 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-02-17 09:54:56,892 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-02-17 09:54:56,892 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-02-17 09:54:56,892 - numba.core.ssa - DEBUG - Fix SSA violator on var weight
2025-02-17 09:54:56,892 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-02-17 09:54:56,893 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600D240>
2025-02-17 09:54:56,893 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-02-17 09:54:56,893 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-02-17 09:54:56,893 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-02-17 09:54:56,893 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-02-17 09:54:56,893 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-02-17 09:54:56,893 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-02-17 09:54:56,893 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-02-17 09:54:56,893 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-02-17 09:54:56,893 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-02-17 09:54:56,893 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,893 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-02-17 09:54:56,893 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-02-17 09:54:56,893 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-02-17 09:54:56,893 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-02-17 09:54:56,893 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-02-17 09:54:56,893 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-02-17 09:54:56,893 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-02-17 09:54:56,893 - numba.core.ssa - DEBUG - first assign: weight
2025-02-17 09:54:56,893 - numba.core.ssa - DEBUG - replaced with: weight = const(float, 0.0)
2025-02-17 09:54:56,893 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-02-17 09:54:56,893 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-02-17 09:54:56,893 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-02-17 09:54:56,893 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-02-17 09:54:56,893 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-02-17 09:54:56,894 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-02-17 09:54:56,894 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-02-17 09:54:56,894 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-02-17 09:54:56,894 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-02-17 09:54:56,894 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-02-17 09:54:56,894 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,894 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-02-17 09:54:56,894 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-02-17 09:54:56,894 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:54:56,894 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-02-17 09:54:56,894 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600D240>
2025-02-17 09:54:56,894 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-02-17 09:54:56,894 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-02-17 09:54:56,894 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-02-17 09:54:56,894 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-02-17 09:54:56,894 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-02-17 09:54:56,894 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-02-17 09:54:56,894 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600D240>
2025-02-17 09:54:56,894 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-02-17 09:54:56,894 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,894 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-02-17 09:54:56,894 - numba.core.ssa - DEBUG - on stmt: n.1 = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,894 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register.1 - n.1
2025-02-17 09:54:56,895 - numba.core.ssa - DEBUG - on stmt: frac.1 = scale * $106binary_subtract.11
2025-02-17 09:54:56,895 - numba.core.ssa - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-02-17 09:54:56,895 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-02-17 09:54:56,895 - numba.core.ssa - DEBUG - on stmt: offset.1 = call $120load_global.16(index_frac.1, func=$120load_global.16, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,895 - numba.core.ssa - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-02-17 09:54:56,895 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-02-17 09:54:56,895 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-02-17 09:54:56,895 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n.1 + $const140.24
2025-02-17 09:54:56,895 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset.1
2025-02-17 09:54:56,895 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-02-17 09:54:56,895 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,895 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-02-17 09:54:56,895 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,895 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-02-17 09:54:56,895 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-02-17 09:54:56,895 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:54:56,895 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-02-17 09:54:56,895 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600D240>
2025-02-17 09:54:56,895 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-02-17 09:54:56,895 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-02-17 09:54:56,895 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-02-17 09:54:56,895 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-02-17 09:54:56,895 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-02-17 09:54:56,895 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-02-17 09:54:56,896 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600D240>
2025-02-17 09:54:56,896 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-02-17 09:54:56,896 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-02-17 09:54:56,896 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset.1 + $178binary_multiply.7
2025-02-17 09:54:56,896 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:54:56,896 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-02-17 09:54:56,896 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset.1 + $194binary_multiply.15
2025-02-17 09:54:56,896 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:54:56,896 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta.1 * $198binary_subscr.17
2025-02-17 09:54:56,896 - numba.core.ssa - DEBUG - on stmt: weight = $182binary_subscr.9 + $200binary_multiply.18
2025-02-17 09:54:56,896 - numba.core.ssa - DEBUG - replaced with: weight.1 = $182binary_subscr.9 + $200binary_multiply.18
2025-02-17 09:54:56,896 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,896 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n.1 - i
2025-02-17 09:54:56,896 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-02-17 09:54:56,896 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-02-17 09:54:56,896 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:54:56,896 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-02-17 09:54:56,896 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:54:56,896 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-02-17 09:54:56,896 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600D240>
2025-02-17 09:54:56,896 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac.1
2025-02-17 09:54:56,896 - numba.core.ssa - DEBUG - on stmt: frac.2 = $240binary_subtract.3
2025-02-17 09:54:56,896 - numba.core.ssa - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-02-17 09:54:56,896 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-02-17 09:54:56,897 - numba.core.ssa - DEBUG - on stmt: offset.2 = call $252load_global.7(index_frac.2, func=$252load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,897 - numba.core.ssa - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-02-17 09:54:56,897 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-02-17 09:54:56,897 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n.1
2025-02-17 09:54:56,897 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-02-17 09:54:56,897 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-02-17 09:54:56,897 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset.2
2025-02-17 09:54:56,897 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-02-17 09:54:56,897 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,897 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-02-17 09:54:56,897 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,897 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-02-17 09:54:56,897 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-02-17 09:54:56,897 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:54:56,897 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-02-17 09:54:56,897 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600D240>
2025-02-17 09:54:56,897 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-02-17 09:54:56,898 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-02-17 09:54:56,898 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-02-17 09:54:56,898 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-02-17 09:54:56,898 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-02-17 09:54:56,898 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-02-17 09:54:56,898 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600D240>
2025-02-17 09:54:56,898 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-02-17 09:54:56,898 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-02-17 09:54:56,898 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset.2 + $314binary_multiply.7
2025-02-17 09:54:56,898 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:54:56,898 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-02-17 09:54:56,898 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset.2 + $330binary_multiply.15
2025-02-17 09:54:56,898 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:54:56,898 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta.2 * $334binary_subscr.17
2025-02-17 09:54:56,898 - numba.core.ssa - DEBUG - on stmt: weight = $318binary_subscr.9 + $336binary_multiply.18
2025-02-17 09:54:56,898 - numba.core.ssa - DEBUG - replaced with: weight.2 = $318binary_subscr.9 + $336binary_multiply.18
2025-02-17 09:54:56,898 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,898 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n.1 + k
2025-02-17 09:54:56,898 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-02-17 09:54:56,898 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-02-17 09:54:56,898 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-02-17 09:54:56,899 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-02-17 09:54:56,899 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:54:56,899 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-02-17 09:54:56,899 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:54:56,899 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-02-17 09:54:56,899 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600D240>
2025-02-17 09:54:56,899 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:54:56,899 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-02-17 09:54:56,899 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FreshVarHandler object at 0x000001ED6600D240>
2025-02-17 09:54:56,899 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-02-17 09:54:56,899 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-02-17 09:54:56,899 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-02-17 09:54:56,899 - numba.core.ssa - DEBUG - Replaced assignments: defaultdict(<class 'list'>,
            {0: [<numba.core.ir.Assign object at 0x000001ED66053D00>],
             168: [<numba.core.ir.Assign object at 0x000001ED66059B70>],
             304: [<numba.core.ir.Assign object at 0x000001ED66059270>]})
2025-02-17 09:54:56,899 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 0
2025-02-17 09:54:56,899 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600D240>
2025-02-17 09:54:56,899 - numba.core.ssa - DEBUG - on stmt: x = arg(0, name=x)
2025-02-17 09:54:56,899 - numba.core.ssa - DEBUG - on stmt: t_out = arg(1, name=t_out)
2025-02-17 09:54:56,899 - numba.core.ssa - DEBUG - on stmt: interp_win = arg(2, name=interp_win)
2025-02-17 09:54:56,899 - numba.core.ssa - DEBUG - on stmt: interp_delta = arg(3, name=interp_delta)
2025-02-17 09:54:56,899 - numba.core.ssa - DEBUG - on stmt: num_table = arg(4, name=num_table)
2025-02-17 09:54:56,899 - numba.core.ssa - DEBUG - on stmt: scale = arg(5, name=scale)
2025-02-17 09:54:56,899 - numba.core.ssa - DEBUG - on stmt: y = arg(6, name=y)
2025-02-17 09:54:56,899 - numba.core.ssa - DEBUG - on stmt: $2load_global.0 = global(int: <class 'int'>)
2025-02-17 09:54:56,899 - numba.core.ssa - DEBUG - on stmt: $8binary_multiply.3 = scale * num_table
2025-02-17 09:54:56,900 - numba.core.ssa - DEBUG - on stmt: index_step = call $2load_global.0($8binary_multiply.3, func=$2load_global.0, args=[Var($8binary_multiply.3, interpn.py:9)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,900 - numba.core.ssa - DEBUG - on stmt: time_register = const(float, 0.0)
2025-02-17 09:54:56,900 - numba.core.ssa - DEBUG - on stmt: n = const(int, 0)
2025-02-17 09:54:56,900 - numba.core.ssa - DEBUG - on stmt: frac = const(float, 0.0)
2025-02-17 09:54:56,900 - numba.core.ssa - DEBUG - on stmt: index_frac = const(float, 0.0)
2025-02-17 09:54:56,900 - numba.core.ssa - DEBUG - on stmt: offset = const(int, 0)
2025-02-17 09:54:56,900 - numba.core.ssa - DEBUG - on stmt: eta = const(float, 0.0)
2025-02-17 09:54:56,900 - numba.core.ssa - DEBUG - on stmt: weight = const(float, 0.0)
2025-02-17 09:54:56,900 - numba.core.ssa - DEBUG - on stmt: $44load_attr.13 = getattr(value=interp_win, attr=shape)
2025-02-17 09:54:56,900 - numba.core.ssa - DEBUG - on stmt: $const46.14 = const(int, 0)
2025-02-17 09:54:56,900 - numba.core.ssa - DEBUG - on stmt: nwin = static_getitem(value=$44load_attr.13, index=0, index_var=$const46.14, fn=<built-in function getitem>)
2025-02-17 09:54:56,900 - numba.core.ssa - DEBUG - on stmt: $54load_attr.17 = getattr(value=x, attr=shape)
2025-02-17 09:54:56,900 - numba.core.ssa - DEBUG - on stmt: $const56.18 = const(int, 0)
2025-02-17 09:54:56,900 - numba.core.ssa - DEBUG - on stmt: n_orig = static_getitem(value=$54load_attr.17, index=0, index_var=$const56.18, fn=<built-in function getitem>)
2025-02-17 09:54:56,900 - numba.core.ssa - DEBUG - on stmt: $64load_attr.21 = getattr(value=t_out, attr=shape)
2025-02-17 09:54:56,900 - numba.core.ssa - DEBUG - on stmt: $const66.22 = const(int, 0)
2025-02-17 09:54:56,900 - numba.core.ssa - DEBUG - on stmt: n_out = static_getitem(value=$64load_attr.21, index=0, index_var=$const66.22, fn=<built-in function getitem>)
2025-02-17 09:54:56,900 - numba.core.ssa - DEBUG - on stmt: $72load_global.24 = global(prange: <class 'numba.misc.special.prange'>)
2025-02-17 09:54:56,900 - numba.core.ssa - DEBUG - on stmt: $76call_function.26 = call $72load_global.24(n_out, func=$72load_global.24, args=[Var(n_out, interpn.py:21)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,900 - numba.core.ssa - DEBUG - on stmt: $78get_iter.27 = getiter(value=$76call_function.26)
2025-02-17 09:54:56,900 - numba.core.ssa - DEBUG - on stmt: $phi80.0 = $78get_iter.27
2025-02-17 09:54:56,900 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:54:56,900 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 80
2025-02-17 09:54:56,900 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600D240>
2025-02-17 09:54:56,901 - numba.core.ssa - DEBUG - on stmt: $80for_iter.1 = iternext(value=$phi80.0)
2025-02-17 09:54:56,901 - numba.core.ssa - DEBUG - on stmt: $80for_iter.2 = pair_first(value=$80for_iter.1)
2025-02-17 09:54:56,901 - numba.core.ssa - DEBUG - on stmt: $80for_iter.3 = pair_second(value=$80for_iter.1)
2025-02-17 09:54:56,901 - numba.core.ssa - DEBUG - on stmt: $phi82.1 = $80for_iter.2
2025-02-17 09:54:56,901 - numba.core.ssa - DEBUG - on stmt: branch $80for_iter.3, 82, 378
2025-02-17 09:54:56,901 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 82
2025-02-17 09:54:56,901 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600D240>
2025-02-17 09:54:56,901 - numba.core.ssa - DEBUG - on stmt: t = $phi82.1
2025-02-17 09:54:56,901 - numba.core.ssa - DEBUG - on stmt: time_register.1 = getitem(value=t_out, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,901 - numba.core.ssa - DEBUG - on stmt: $92load_global.5 = global(int: <class 'int'>)
2025-02-17 09:54:56,901 - numba.core.ssa - DEBUG - on stmt: n.1 = call $92load_global.5(time_register.1, func=$92load_global.5, args=[Var(time_register.1, interpn.py:24)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,901 - numba.core.ssa - DEBUG - on stmt: $106binary_subtract.11 = time_register.1 - n.1
2025-02-17 09:54:56,901 - numba.core.ssa - DEBUG - on stmt: frac.1 = scale * $106binary_subtract.11
2025-02-17 09:54:56,901 - numba.core.ssa - DEBUG - on stmt: index_frac.1 = frac.1 * num_table
2025-02-17 09:54:56,901 - numba.core.ssa - DEBUG - on stmt: $120load_global.16 = global(int: <class 'int'>)
2025-02-17 09:54:56,901 - numba.core.ssa - DEBUG - on stmt: offset.1 = call $120load_global.16(index_frac.1, func=$120load_global.16, args=[Var(index_frac.1, interpn.py:33)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,901 - numba.core.ssa - DEBUG - on stmt: eta.1 = index_frac.1 - offset.1
2025-02-17 09:54:56,901 - numba.core.ssa - DEBUG - on stmt: $136load_global.22 = global(min: <built-in function min>)
2025-02-17 09:54:56,901 - numba.core.ssa - DEBUG - on stmt: $const140.24 = const(int, 1)
2025-02-17 09:54:56,901 - numba.core.ssa - DEBUG - on stmt: $142binary_add.25 = n.1 + $const140.24
2025-02-17 09:54:56,901 - numba.core.ssa - DEBUG - on stmt: $148binary_subtract.28 = nwin - offset.1
2025-02-17 09:54:56,901 - numba.core.ssa - DEBUG - on stmt: $152binary_floor_divide.30 = $148binary_subtract.28 // index_step
2025-02-17 09:54:56,901 - numba.core.ssa - DEBUG - on stmt: i_max = call $136load_global.22($142binary_add.25, $152binary_floor_divide.30, func=$136load_global.22, args=[Var($142binary_add.25, interpn.py:40), Var($152binary_floor_divide.30, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,902 - numba.core.ssa - DEBUG - on stmt: $158load_global.32 = global(range: <class 'range'>)
2025-02-17 09:54:56,902 - numba.core.ssa - DEBUG - on stmt: $162call_function.34 = call $158load_global.32(i_max, func=$158load_global.32, args=[Var(i_max, interpn.py:40)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,902 - numba.core.ssa - DEBUG - on stmt: $164get_iter.35 = getiter(value=$162call_function.34)
2025-02-17 09:54:56,902 - numba.core.ssa - DEBUG - on stmt: $phi166.1 = $164get_iter.35
2025-02-17 09:54:56,902 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:54:56,902 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 166
2025-02-17 09:54:56,902 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600D240>
2025-02-17 09:54:56,902 - numba.core.ssa - DEBUG - on stmt: $166for_iter.2 = iternext(value=$phi166.1)
2025-02-17 09:54:56,902 - numba.core.ssa - DEBUG - on stmt: $166for_iter.3 = pair_first(value=$166for_iter.2)
2025-02-17 09:54:56,902 - numba.core.ssa - DEBUG - on stmt: $166for_iter.4 = pair_second(value=$166for_iter.2)
2025-02-17 09:54:56,902 - numba.core.ssa - DEBUG - on stmt: $phi168.2 = $166for_iter.3
2025-02-17 09:54:56,902 - numba.core.ssa - DEBUG - on stmt: branch $166for_iter.4, 168, 236
2025-02-17 09:54:56,902 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 168
2025-02-17 09:54:56,902 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600D240>
2025-02-17 09:54:56,902 - numba.core.ssa - DEBUG - on stmt: i = $phi168.2
2025-02-17 09:54:56,902 - numba.core.ssa - DEBUG - on stmt: $178binary_multiply.7 = i * index_step
2025-02-17 09:54:56,902 - numba.core.ssa - DEBUG - on stmt: $180binary_add.8 = offset.1 + $178binary_multiply.7
2025-02-17 09:54:56,902 - numba.core.ssa - DEBUG - on stmt: $182binary_subscr.9 = getitem(value=interp_win, index=$180binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:54:56,902 - numba.core.ssa - DEBUG - on stmt: $194binary_multiply.15 = i * index_step
2025-02-17 09:54:56,902 - numba.core.ssa - DEBUG - on stmt: $196binary_add.16 = offset.1 + $194binary_multiply.15
2025-02-17 09:54:56,902 - numba.core.ssa - DEBUG - on stmt: $198binary_subscr.17 = getitem(value=interp_delta, index=$196binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:54:56,902 - numba.core.ssa - DEBUG - on stmt: $200binary_multiply.18 = eta.1 * $198binary_subscr.17
2025-02-17 09:54:56,902 - numba.core.ssa - DEBUG - on stmt: weight.1 = $182binary_subscr.9 + $200binary_multiply.18
2025-02-17 09:54:56,903 - numba.core.ssa - DEBUG - on stmt: $212binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,903 - numba.core.ssa - DEBUG - on stmt: $222binary_subtract.29 = n.1 - i
2025-02-17 09:54:56,903 - numba.core.ssa - DEBUG - on stmt: $224binary_subscr.30 = getitem(value=x, index=$222binary_subtract.29, fn=<built-in function getitem>)
2025-02-17 09:54:56,903 - numba.core.ssa - DEBUG - on stmt: $226binary_multiply.31 = weight * $224binary_subscr.30
2025-02-17 09:54:56,903 - numba.core.ssa - DEBUG - find_def var='weight' stmt=$226binary_multiply.31 = weight * $224binary_subscr.30
2025-02-17 09:54:56,903 - numba.core.ssa - DEBUG - replaced with: $226binary_multiply.31 = weight.1 * $224binary_subscr.30
2025-02-17 09:54:56,903 - numba.core.ssa - DEBUG - on stmt: $228inplace_add.32 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$212binary_subscr.24, rhs=$226binary_multiply.31, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:54:56,903 - numba.core.ssa - DEBUG - on stmt: y[t] = $228inplace_add.32
2025-02-17 09:54:56,903 - numba.core.ssa - DEBUG - on stmt: jump 166
2025-02-17 09:54:56,903 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 236
2025-02-17 09:54:56,903 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600D240>
2025-02-17 09:54:56,903 - numba.core.ssa - DEBUG - on stmt: $240binary_subtract.3 = scale - frac.1
2025-02-17 09:54:56,903 - numba.core.ssa - DEBUG - on stmt: frac.2 = $240binary_subtract.3
2025-02-17 09:54:56,903 - numba.core.ssa - DEBUG - on stmt: index_frac.2 = frac.2 * num_table
2025-02-17 09:54:56,903 - numba.core.ssa - DEBUG - on stmt: $252load_global.7 = global(int: <class 'int'>)
2025-02-17 09:54:56,903 - numba.core.ssa - DEBUG - on stmt: offset.2 = call $252load_global.7(index_frac.2, func=$252load_global.7, args=[Var(index_frac.2, interpn.py:53)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,903 - numba.core.ssa - DEBUG - on stmt: eta.2 = index_frac.2 - offset.2
2025-02-17 09:54:56,903 - numba.core.ssa - DEBUG - on stmt: $268load_global.13 = global(min: <built-in function min>)
2025-02-17 09:54:56,903 - numba.core.ssa - DEBUG - on stmt: $274binary_subtract.16 = n_orig - n.1
2025-02-17 09:54:56,903 - numba.core.ssa - DEBUG - on stmt: $const276.17 = const(int, 1)
2025-02-17 09:54:56,903 - numba.core.ssa - DEBUG - on stmt: $278binary_subtract.18 = $274binary_subtract.16 - $const276.17
2025-02-17 09:54:56,903 - numba.core.ssa - DEBUG - on stmt: $284binary_subtract.21 = nwin - offset.2
2025-02-17 09:54:56,904 - numba.core.ssa - DEBUG - on stmt: $288binary_floor_divide.23 = $284binary_subtract.21 // index_step
2025-02-17 09:54:56,904 - numba.core.ssa - DEBUG - on stmt: k_max = call $268load_global.13($278binary_subtract.18, $288binary_floor_divide.23, func=$268load_global.13, args=[Var($278binary_subtract.18, interpn.py:60), Var($288binary_floor_divide.23, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,904 - numba.core.ssa - DEBUG - on stmt: $294load_global.25 = global(range: <class 'range'>)
2025-02-17 09:54:56,904 - numba.core.ssa - DEBUG - on stmt: $298call_function.27 = call $294load_global.25(k_max, func=$294load_global.25, args=[Var(k_max, interpn.py:60)], kws=(), vararg=None, varkwarg=None, target=None)
2025-02-17 09:54:56,904 - numba.core.ssa - DEBUG - on stmt: $300get_iter.28 = getiter(value=$298call_function.27)
2025-02-17 09:54:56,904 - numba.core.ssa - DEBUG - on stmt: $phi302.1 = $300get_iter.28
2025-02-17 09:54:56,904 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:54:56,904 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 302
2025-02-17 09:54:56,904 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600D240>
2025-02-17 09:54:56,904 - numba.core.ssa - DEBUG - on stmt: $302for_iter.2 = iternext(value=$phi302.1)
2025-02-17 09:54:56,904 - numba.core.ssa - DEBUG - on stmt: $302for_iter.3 = pair_first(value=$302for_iter.2)
2025-02-17 09:54:56,904 - numba.core.ssa - DEBUG - on stmt: $302for_iter.4 = pair_second(value=$302for_iter.2)
2025-02-17 09:54:56,904 - numba.core.ssa - DEBUG - on stmt: $phi304.2 = $302for_iter.3
2025-02-17 09:54:56,904 - numba.core.ssa - DEBUG - on stmt: branch $302for_iter.4, 304, 376
2025-02-17 09:54:56,904 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 304
2025-02-17 09:54:56,904 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600D240>
2025-02-17 09:54:56,904 - numba.core.ssa - DEBUG - on stmt: k = $phi304.2
2025-02-17 09:54:56,904 - numba.core.ssa - DEBUG - on stmt: $314binary_multiply.7 = k * index_step
2025-02-17 09:54:56,904 - numba.core.ssa - DEBUG - on stmt: $316binary_add.8 = offset.2 + $314binary_multiply.7
2025-02-17 09:54:56,904 - numba.core.ssa - DEBUG - on stmt: $318binary_subscr.9 = getitem(value=interp_win, index=$316binary_add.8, fn=<built-in function getitem>)
2025-02-17 09:54:56,904 - numba.core.ssa - DEBUG - on stmt: $330binary_multiply.15 = k * index_step
2025-02-17 09:54:56,904 - numba.core.ssa - DEBUG - on stmt: $332binary_add.16 = offset.2 + $330binary_multiply.15
2025-02-17 09:54:56,904 - numba.core.ssa - DEBUG - on stmt: $334binary_subscr.17 = getitem(value=interp_delta, index=$332binary_add.16, fn=<built-in function getitem>)
2025-02-17 09:54:56,905 - numba.core.ssa - DEBUG - on stmt: $336binary_multiply.18 = eta.2 * $334binary_subscr.17
2025-02-17 09:54:56,905 - numba.core.ssa - DEBUG - on stmt: weight.2 = $318binary_subscr.9 + $336binary_multiply.18
2025-02-17 09:54:56,905 - numba.core.ssa - DEBUG - on stmt: $348binary_subscr.24 = getitem(value=y, index=t, fn=<built-in function getitem>)
2025-02-17 09:54:56,905 - numba.core.ssa - DEBUG - on stmt: $358binary_add.29 = n.1 + k
2025-02-17 09:54:56,905 - numba.core.ssa - DEBUG - on stmt: $const360.30 = const(int, 1)
2025-02-17 09:54:56,905 - numba.core.ssa - DEBUG - on stmt: $362binary_add.31 = $358binary_add.29 + $const360.30
2025-02-17 09:54:56,905 - numba.core.ssa - DEBUG - on stmt: $364binary_subscr.32 = getitem(value=x, index=$362binary_add.31, fn=<built-in function getitem>)
2025-02-17 09:54:56,905 - numba.core.ssa - DEBUG - on stmt: $366binary_multiply.33 = weight * $364binary_subscr.32
2025-02-17 09:54:56,905 - numba.core.ssa - DEBUG - find_def var='weight' stmt=$366binary_multiply.33 = weight * $364binary_subscr.32
2025-02-17 09:54:56,905 - numba.core.ssa - DEBUG - replaced with: $366binary_multiply.33 = weight.2 * $364binary_subscr.32
2025-02-17 09:54:56,905 - numba.core.ssa - DEBUG - on stmt: $368inplace_add.34 = inplace_binop(fn=<built-in function iadd>, immutable_fn=<built-in function add>, lhs=$348binary_subscr.24, rhs=$366binary_multiply.33, static_lhs=Undefined, static_rhs=Undefined)
2025-02-17 09:54:56,905 - numba.core.ssa - DEBUG - on stmt: y[t] = $368inplace_add.34
2025-02-17 09:54:56,905 - numba.core.ssa - DEBUG - on stmt: jump 302
2025-02-17 09:54:56,905 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 376
2025-02-17 09:54:56,905 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600D240>
2025-02-17 09:54:56,905 - numba.core.ssa - DEBUG - on stmt: jump 80
2025-02-17 09:54:56,905 - numba.core.ssa - DEBUG - ==== SSA block rewrite pass on 378
2025-02-17 09:54:56,905 - numba.core.ssa - DEBUG - Running <numba.core.ssa._FixSSAVars object at 0x000001ED6600D240>
2025-02-17 09:54:56,905 - numba.core.ssa - DEBUG - on stmt: $const378.0 = const(NoneType, None)
2025-02-17 09:54:56,905 - numba.core.ssa - DEBUG - on stmt: $380return_value.1 = cast(value=$const378.0)
2025-02-17 09:54:56,905 - numba.core.ssa - DEBUG - on stmt: return $380return_value.1
2025-02-17 10:53:42,559 - matplotlib - DEBUG - matplotlib data path: C:\Users\junwe\miniconda3\envs\accent_recog\lib\site-packages\matplotlib\mpl-data
2025-02-17 10:53:42,580 - matplotlib - DEBUG - CONFIGDIR=C:\Users\junwe\.matplotlib
2025-02-17 10:53:42,583 - matplotlib - DEBUG - interactive is False
2025-02-17 10:53:42,583 - matplotlib - DEBUG - platform is win32
2025-02-17 10:53:42,674 - matplotlib - DEBUG - CACHEDIR=C:\Users\junwe\.matplotlib
2025-02-17 10:53:42,681 - matplotlib.font_manager - DEBUG - Using fontManager instance from C:\Users\junwe\.matplotlib\fontlist-v390.json
2025-02-17 10:53:43,318 - matplotlib.pyplot - DEBUG - Loaded backend tkagg version 8.6.
2025-02-17 10:53:43,502 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-02-17 10:53:43,502 - PIL.PngImagePlugin - DEBUG - STREAM b'sBIT' 41 4
2025-02-17 10:53:43,502 - PIL.PngImagePlugin - DEBUG - b'sBIT' 41 4 (unknown)
2025-02-17 10:53:43,502 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 57 9
2025-02-17 10:53:43,502 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 78 1189
2025-02-17 10:53:43,516 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-02-17 10:53:43,517 - PIL.PngImagePlugin - DEBUG - STREAM b'sBIT' 41 4
2025-02-17 10:53:43,517 - PIL.PngImagePlugin - DEBUG - b'sBIT' 41 4 (unknown)
2025-02-17 10:53:43,517 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 57 9
2025-02-17 10:53:43,517 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 78 2994
2025-02-17 10:53:43,553 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-02-17 10:53:43,553 - PIL.PngImagePlugin - DEBUG - STREAM b'sBIT' 41 4
2025-02-17 10:53:43,553 - PIL.PngImagePlugin - DEBUG - b'sBIT' 41 4 (unknown)
2025-02-17 10:53:43,553 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 57 9
2025-02-17 10:53:43,553 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 78 696
2025-02-17 10:53:43,556 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-02-17 10:53:43,556 - PIL.PngImagePlugin - DEBUG - STREAM b'sBIT' 41 4
2025-02-17 10:53:43,556 - PIL.PngImagePlugin - DEBUG - b'sBIT' 41 4 (unknown)
2025-02-17 10:53:43,556 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 57 9
2025-02-17 10:53:43,557 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 78 526
2025-02-17 10:53:43,559 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-02-17 10:53:43,559 - PIL.PngImagePlugin - DEBUG - STREAM b'sBIT' 41 4
2025-02-17 10:53:43,559 - PIL.PngImagePlugin - DEBUG - b'sBIT' 41 4 (unknown)
2025-02-17 10:53:43,559 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 57 9
2025-02-17 10:53:43,559 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 78 499
2025-02-17 10:53:43,561 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-02-17 10:53:43,561 - PIL.PngImagePlugin - DEBUG - STREAM b'sBIT' 41 4
2025-02-17 10:53:43,561 - PIL.PngImagePlugin - DEBUG - b'sBIT' 41 4 (unknown)
2025-02-17 10:53:43,561 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 57 9
2025-02-17 10:53:43,561 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 78 673
2025-02-17 10:53:43,563 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-02-17 10:53:43,563 - PIL.PngImagePlugin - DEBUG - STREAM b'sBIT' 41 4
2025-02-17 10:53:43,563 - PIL.PngImagePlugin - DEBUG - b'sBIT' 41 4 (unknown)
2025-02-17 10:53:43,563 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 57 9
2025-02-17 10:53:43,563 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 78 922
2025-02-17 10:53:43,565 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-02-17 10:53:43,565 - PIL.PngImagePlugin - DEBUG - STREAM b'sBIT' 41 4
2025-02-17 10:53:43,565 - PIL.PngImagePlugin - DEBUG - b'sBIT' 41 4 (unknown)
2025-02-17 10:53:43,565 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 57 9
2025-02-17 10:53:43,565 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 78 568
2025-02-17 10:53:43,567 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-02-17 10:53:43,567 - PIL.PngImagePlugin - DEBUG - STREAM b'sBIT' 41 4
2025-02-17 10:53:43,567 - PIL.PngImagePlugin - DEBUG - b'sBIT' 41 4 (unknown)
2025-02-17 10:53:43,567 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 57 9
2025-02-17 10:53:43,567 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 78 626
2025-02-17 10:53:43,571 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0.
2025-02-17 10:53:43,571 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,571 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,572 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,572 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,572 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,572 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-02-17 10:53:43,572 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,572 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-02-17 10:53:43,572 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,572 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,572 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,572 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,572 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,572 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,573 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,573 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,573 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,573 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-02-17 10:53:43,573 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,573 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,573 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,573 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,573 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,573 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,573 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,574 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,574 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,574 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,574 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,574 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,574 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,574 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,574 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-02-17 10:53:43,574 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,574 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,574 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,574 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,575 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,575 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,575 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamCLM-Bold.ttf', name='Miriam CLM', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,575 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSR.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,575 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-BlackIt.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-02-17 10:53:43,575 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoNaskhArabicUI-Bold.ttf', name='Noto Naskh Arabic UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,575 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-Black.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-17 10:53:43,575 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGENG.TTF', name='Niagara Engraved', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,575 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Bold.ttf', name='Source Code Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,575 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,575 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,575 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-It.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,575 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,575 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Sitka.ttc', name='Sitka Small', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,575 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEB.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-17 10:53:43,576 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNT.TTF', name='Elephant', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,576 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaI.ttc', name='Sitka Small', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,576 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,576 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKBI.TTF', name='Rockwell', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,576 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,576 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoKufiArabic-Bold.ttf', name='Noto Kufi Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,576 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-17 10:53:43,576 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,576 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDYSTO.TTF', name='Goudy Stout', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,576 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,576 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArmenian-Regular.ttf', name='Noto Sans Armenian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,576 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-17 10:53:43,576 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,577 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIST.TTF', name='Calisto MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,577 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-BoldIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,577 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerifCondensed-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-02-17 10:53:43,577 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,577 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Amiri-Bold.ttf', name='Amiri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,577 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansGeorgian-Regular.ttf', name='Noto Sans Georgian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,577 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Bold.ttf', name='Noto Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,577 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,577 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,577 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKB.TTF', name='Rockwell', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,577 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansHebrew-Bold.ttf', name='Noto Sans Hebrew', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,577 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidCLM-Medium.otf', name='David CLM', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-17 10:53:43,577 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,577 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-17 10:53:43,577 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-17 10:53:43,578 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILBI___.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,578 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADM.TTF', name='Franklin Gothic Demi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,578 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JOKERMAN.TTF', name='Jokerman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,578 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,578 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABKIT.TTF', name='Franklin Gothic Book', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,578 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,578 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,578 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaB.ttc', name='Sitka Small', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,578 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,578 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-LightIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-17 10:53:43,578 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuehlCLM-BoldOblique.ttf', name='Frank Ruehl CLM', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,578 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,578 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-LightItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-17 10:53:43,578 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamMonoCLM-BoldOblique.ttf', name='Miriam Mono CLM', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,578 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-LightItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-17 10:53:43,578 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKI.TTF', name='Rockwell', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,578 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-17 10:53:43,578 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,579 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Regular.ttf', name='Noto Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,579 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAGE.TTF', name='Rage Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,579 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,579 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LATINWD.TTF', name='Wide Latin', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-02-17 10:53:43,579 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,579 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-17 10:53:43,579 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,579 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,579 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FTLTLT.TTF', name='Footlight MT Light', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-17 10:53:43,579 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,579 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinBiolinum_RI_G.ttf', name='Linux Biolinum G', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,579 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\IMPRISHA.TTF', name='Imprint MT Shadow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,579 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-BoldIt.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,580 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,580 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.9713636363636367
2025-02-17 10:53:43,580 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,580 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifHebrew-Bold.ttf', name='Noto Serif Hebrew', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,580 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,580 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXDI.TTF', name='Lucida Fax', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-17 10:53:43,580 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCRIPTBL.TTF', name='Script MT Bold', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,580 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARLRDBD.TTF', name='Arial Rounded MT Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,580 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKBI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,580 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2025-02-17 10:53:43,580 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Condensed.ttf', name='Noto Serif', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-17 10:53:43,580 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NachlieliCLM-Bold.otf', name='Nachlieli CLM', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-17 10:53:43,580 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,580 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,580 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-Light.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-17 10:53:43,581 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,581 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBkBasI.ttf', name='Gentium Book Basic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,581 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.6863636363636365
2025-02-17 10:53:43,581 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOS.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,581 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,581 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,581 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,581 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArabic-Bold.ttf', name='Noto Sans Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,581 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 6.888636363636364
2025-02-17 10:53:43,581 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuhlHofshi-Bold.otf', name='Frank Ruhl Hofshi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,581 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansCondensed-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 1.25
2025-02-17 10:53:43,581 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 7.698636363636363
2025-02-17 10:53:43,581 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifLao-Regular.ttf', name='Noto Serif Lao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,581 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamLibre-Bold.otf', name='Miriam Libre', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,581 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAX.TTF', name='Lucida Fax', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,581 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,581 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCM_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,581 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILSANUB.TTF', name='Gill Sans Ultra Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,582 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-CondensedItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-02-17 10:53:43,582 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,582 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-17 10:53:43,582 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,582 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,582 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NachlieliCLM-BoldOblique.otf', name='Nachlieli CLM', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-17 10:53:43,582 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTI.TTF', name='Calisto MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,582 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoKufiArabic-Regular.ttf', name='Noto Kufi Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,582 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Light.ttf', name='Source Code Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-17 10:53:43,582 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTB.TTF', name='Calisto MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,582 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,582 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-17 10:53:43,582 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,582 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,582 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,582 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidCLM-MediumItalic.otf', name='David CLM', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-02-17 10:53:43,582 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_R_G.ttf', name='Linux Libertine G', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,582 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,583 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-17 10:53:43,583 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NIAGSOL.TTF', name='Niagara Solid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,583 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLB.TTF', name='Bell MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,583 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuehlCLM-Medium.ttf', name='Frank Ruehl CLM', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-17 10:53:43,583 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,583 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansLisu-Regular.ttf', name='Noto Sans Lisu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,583 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,583 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamMonoCLM-Book.ttf', name='Miriam Mono CLM', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,583 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,583 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PER_____.TTF', name='Perpetua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,583 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LCALLIG.TTF', name='Lucida Calligraphy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,583 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,583 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BROADW.TTF', name='Broadway', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,583 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,583 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 6.8986363636363635
2025-02-17 10:53:43,583 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTAUR.TTF', name='Centaur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,583 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,583 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,583 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Alef-Regular.ttf', name='Alef', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,584 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VLADIMIR.TTF', name='Vladimir Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,584 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-ExtraLightIt.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=200, stretch='normal', size='scalable')) = 11.24
2025-02-17 10:53:43,584 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-CondensedBoldItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-02-17 10:53:43,584 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,584 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,584 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCMI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,584 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Rubik-Regular.ttf', name='Rubik', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,584 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifArmenian-Regular.ttf', name='Noto Serif Armenian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,584 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-CondensedBold.ttf', name='Noto Serif', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-17 10:53:43,584 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Carlito-Regular.ttf', name='Carlito', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,584 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,584 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,584 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHVIT.TTF', name='Franklin Gothic Heavy', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,584 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caladea-Italic.ttf', name='Caladea', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,584 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Scheherazade-Regular.ttf', name='Scheherazade', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,584 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\RAVIE.TTF', name='Ravie', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,584 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSI.TTF', name='Goudy Old Style', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,584 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITED.TTF', name='Lucida Bright', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-17 10:53:43,585 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,585 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PARCHM.TTF', name='Parchment', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,585 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoNaskhArabic-Regular.ttf', name='Noto Naskh Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,585 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,585 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,585 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-17 10:53:43,585 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-17 10:53:43,585 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,585 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ReemKufi-Regular.ttf', name='Reem Kufi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,585 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuhlHofshi-Regular.otf', name='Frank Ruhl Hofshi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,585 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Medium.ttf', name='Source Code Pro', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-17 10:53:43,585 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,585 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,585 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSB.TTF', name='Berlin Sans FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,585 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELLI.TTF', name='Bell MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,585 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-17 10:53:43,585 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuehlCLM-MediumOblique.ttf', name='Frank Ruehl CLM', style='oblique', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-02-17 10:53:43,585 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-Regular.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,586 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,586 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,586 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BAUHS93.TTF', name='Bauhaus 93', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,586 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-BlackIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-02-17 10:53:43,586 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AmiriQuran.ttf', name='Amiri Quran', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,586 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,586 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BASKVILL.TTF', name='Baskerville Old Face', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,586 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,586 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCK.TTF', name='Rockwell', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,586 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Semibold.ttf', name='Source Code Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-17 10:53:43,586 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-CondensedBold.ttf', name='Noto Sans', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-17 10:53:43,586 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caladea-BoldItalic.ttf', name='Caladea', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,586 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Carlito-Italic.ttf', name='Carlito', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,586 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_B.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,586 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILI____.TTF', name='Gill Sans MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,586 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,586 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 6.698636363636363
2025-02-17 10:53:43,587 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENSCBK.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,587 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-17 10:53:43,587 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoNaskhArabic-Bold.ttf', name='Noto Naskh Arabic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,587 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 6.613636363636363
2025-02-17 10:53:43,587 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-ExtraLight.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-02-17 10:53:43,587 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIL_____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,587 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,587 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCKEB.TTF', name='Rockwell Extra Bold', style='normal', variant='normal', weight=800, stretch='normal', size='scalable')) = 10.43
2025-02-17 10:53:43,587 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCC____.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-17 10:53:43,587 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_RB_G.ttf', name='Linux Libertine G', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,587 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifHebrew-Regular.ttf', name='Noto Serif Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,587 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifGeorgian-Bold.ttf', name='Noto Serif Georgian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,587 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ONYX.TTF', name='Onyx', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,587 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAMDCN.TTF', name='Franklin Gothic Medium Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-17 10:53:43,587 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,587 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,587 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-BlackIt.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-02-17 10:53:43,587 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,588 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArabicUI-Bold.ttf', name='Noto Sans Arabic UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,588 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRUSHSCI.TTF', name='Brush Script MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,588 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,588 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,588 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBkBasB.ttf', name='Gentium Book Basic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,588 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FrankRuehlCLM-Bold.ttf', name='Frank Ruehl CLM', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,588 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-02-17 10:53:43,588 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PALSCRI.TTF', name='Palace Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,588 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,588 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,588 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCM____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-17 10:53:43,588 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SHOWG.TTF', name='Showcard Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,588 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FORTE.TTF', name='Forte', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,588 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans-ExtraLight.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 0.24
2025-02-17 10:53:43,588 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-ExtraLightIt.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=200, stretch='normal', size='scalable')) = 11.24
2025-02-17 10:53:43,588 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,588 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Light.ttf', name='Noto Sans', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-17 10:53:43,588 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,589 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,589 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoe.ttf', name='Segoe Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-17 10:53:43,589 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFI.TTF', name='Californian FB', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,589 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,589 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VIVALDII.TTF', name='Vivaldi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,589 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Rubik-BoldItalic.ttf', name='Rubik', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,589 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,589 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-17 10:53:43,589 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,589 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,589 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-LightIt.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-17 10:53:43,589 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,589 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-Black.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-17 10:53:43,589 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ALGER.TTF', name='Algerian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,589 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBasB.ttf', name='Gentium Basic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,589 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,589 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2025-02-17 10:53:43,589 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBkBasBI.ttf', name='Gentium Book Basic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,590 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,590 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,590 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,590 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,590 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Black.ttf', name='Source Code Pro', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2025-02-17 10:53:43,590 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerifCondensed-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-02-17 10:53:43,590 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,590 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,590 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASDEMI.TTF', name='Eras Demi ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,590 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,590 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,590 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\STENCIL.TTF', name='Stencil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,590 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArabicUI-Regular.ttf', name='Noto Sans Arabic UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,590 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-ExtraLightIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=200, stretch='normal', size='scalable')) = 11.24
2025-02-17 10:53:43,590 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_R.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,590 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_RZ_G.ttf', name='Linux Libertine G', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-17 10:53:43,590 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansCondensed-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 1.535
2025-02-17 10:53:43,590 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-17 10:53:43,590 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_RZI_G.ttf', name='Linux Libertine G', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-17 10:53:43,591 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCB_____.TTF', name='Tw Cen MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,591 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-ExtraLight.ttf', name='Source Code Pro', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-02-17 10:53:43,591 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CASTELAR.TTF', name='Castellar', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,591 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITEDI.TTF', name='Lucida Bright', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-17 10:53:43,591 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-Bold.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,591 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,591 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CHILLER.TTF', name='Chiller', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,591 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTILI.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-17 10:53:43,591 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NachlieliCLM-LightOblique.otf', name='Nachlieli CLM', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-17 10:53:43,591 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERTI.TTF', name='High Tower Text', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,591 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\VINERITC.TTF', name='Viner Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,591 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LBRITE.TTF', name='Lucida Bright', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,591 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-CondensedItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-02-17 10:53:43,591 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArabic-Regular.ttf', name='Noto Sans Arabic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,591 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CBI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-02-17 10:53:43,591 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,591 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-17 10:53:43,591 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCEDSCR.TTF', name='Edwardian Script ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,592 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBkBasR.ttf', name='Gentium Book Basic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,592 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Carlito-Bold.ttf', name='Carlito', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,592 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-17 10:53:43,592 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,592 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,592 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-Semibold.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-17 10:53:43,592 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLSNECB.TTF', name='Gill Sans MT Ext Condensed Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-17 10:53:43,592 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,592 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GOUDOSB.TTF', name='Goudy Old Style', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,592 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,592 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRABK.TTF', name='Franklin Gothic Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,592 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCB____.TTF', name='Tw Cen MT Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-17 10:53:43,592 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BELL.TTF', name='Bell MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,593 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,593 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,593 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LFAXD.TTF', name='Lucida Fax', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-17 10:53:43,593 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASLGHT.TTF', name='Eras Light ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,593 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,593 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansGeorgian-Bold.ttf', name='Noto Sans Georgian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,593 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-17 10:53:43,593 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,593 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GIGI.TTF', name='Gigi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,593 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_RI_G.ttf', name='Linux Libertine G', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,593 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPEBO.TTF', name='Lucida Sans Typewriter', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-17 10:53:43,593 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ELEPHNTI.TTF', name='Elephant', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,593 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,593 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinBiolinum_R_G.ttf', name='Linux Biolinum G', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,593 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MATURASC.TTF', name='Matura MT Script Capitals', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,593 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYR.TTF', name='Agency FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,594 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCCEB.TTF', name='Tw Cen MT Condensed Extra Bold', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-17 10:53:43,594 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,594 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\AGENCYB.TTF', name='Agency FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,594 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-02-17 10:53:43,594 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ROCCB___.TTF', name='Rockwell Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-17 10:53:43,594 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,594 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,594 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansLao-Regular.ttf', name='Noto Sans Lao', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,594 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-17 10:53:43,594 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,594 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASMD.TTF', name='Eras Medium ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,594 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,594 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARLOWSI.TTF', name='Harlow Solid Italic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,594 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMIT.TTF', name='Franklin Gothic Demi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,594 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRAHV.TTF', name='Franklin Gothic Heavy', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,594 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-ExtraLight.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 10.24
2025-02-17 10:53:43,594 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 6.413636363636363
2025-02-17 10:53:43,594 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansCondensed-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 0.5349999999999999
2025-02-17 10:53:43,595 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CR.TTF', name='Bodoni MT', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-17 10:53:43,595 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeb.ttf', name='Segoe Condensed', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-17 10:53:43,595 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 7.413636363636363
2025-02-17 10:53:43,595 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFB.TTF', name='Californian FB', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,595 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,595 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,595 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidLibre-Regular.ttf', name='David Libre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,595 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BERNHC.TTF', name='Bernard MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-17 10:53:43,595 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifLao-Bold.ttf', name='Noto Serif Lao', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,595 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,595 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SitkaZ.ttc', name='Sitka Small', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,595 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-It.ttf', name='Source Code Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,595 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\EmojiOneColor-SVGinOT.ttf', name='EmojiOne Color', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,595 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifArmenian-Bold.ttf', name='Noto Serif Armenian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,596 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OLDENGL.TTF', name='Old English Text MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,596 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COLONNA.TTF', name='Colonna MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,596 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,596 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-SemiboldIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-17 10:53:43,596 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,596 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,596 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSDI.TTF', name='Lucida Sans', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-17 10:53:43,596 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERBI___.TTF', name='Perpetua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,596 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,596 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CURLZ___.TTF', name='Curlz MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,596 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Alef-Bold.ttf', name='Alef', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,596 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,596 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,596 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2025-02-17 10:53:43,597 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBasI.ttf', name='Gentium Basic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,597 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Rubik-Italic.ttf', name='Rubik', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,597 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,597 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-BoldIt.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,597 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidCLM-Bold.otf', name='David CLM', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,597 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,597 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,597 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-SemiboldIt.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-17 10:53:43,597 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GLECB.TTF', name='Gloucester MT Extra Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-17 10:53:43,597 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 7.613636363636363
2025-02-17 10:53:43,597 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-MediumIt.ttf', name='Source Code Pro', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2025-02-17 10:53:43,597 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-Light.ttf', name='Source Serif Pro', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-17 10:53:43,597 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Bold.ttf', name='Noto Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,597 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,597 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTL.TTF', name='Copperplate Gothic Light', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,597 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.971363636363637
2025-02-17 10:53:43,597 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANS.TTF', name='Lucida Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,597 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,598 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamLibre-Regular.otf', name='Miriam Libre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,598 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,598 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALIFR.TTF', name='Californian FB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,598 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\POORICH.TTF', name='Poor Richard', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,598 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.6863636363636365
2025-02-17 10:53:43,598 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-17 10:53:43,598 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansCondensed.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 0.25
2025-02-17 10:53:43,598 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,598 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MTEXTRA.TTF', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,598 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILC____.TTF', name='Gill Sans MT Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-17 10:53:43,598 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinBiolinum_RB_G.ttf', name='Linux Biolinum G', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,598 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-It.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,598 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COPRGTB.TTF', name='Copperplate Gothic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,598 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Regular.ttf', name='Noto Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,598 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KUNSTLER.TTF', name='Kunstler Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,598 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LTYPE.TTF', name='Lucida Sans Typewriter', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,598 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,598 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,599 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,599 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,599 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_PSTC.TTF', name='Bodoni MT', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-17 10:53:43,599 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FRADMCN.TTF', name='Franklin Gothic Demi Cond', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-17 10:53:43,599 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERTIBD.TTF', name='Perpetua Titling MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,599 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,599 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,599 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,599 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_DR_G.ttf', name='Linux Libertine Display G', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,599 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2025-02-17 10:53:43,599 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-17 10:53:43,599 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Amiri-BoldSlanted.ttf', name='Amiri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,599 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,599 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,599 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,599 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,599 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ITCBLKAD.TTF', name='Blackadder ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,599 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,600 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKI.TTF', name='Century Schoolbook', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,600 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamCLM-Book.ttf', name='Miriam CLM', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,600 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,600 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,600 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BLAI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2025-02-17 10:53:43,600 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-BoldItalic.ttf', name='Noto Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,600 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,600 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILLUBCD.TTF', name='Gill Sans Ultra Bold Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-17 10:53:43,600 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,600 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidCLM-BoldItalic.otf', name='David CLM', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,600 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,600 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,600 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-BoldItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,600 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerifCondensed-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-17 10:53:43,600 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\TCBI____.TTF', name='Tw Cen MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,600 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DavidLibre-Bold.ttf', name='David Libre', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,600 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_I.TTF', name='Bodoni MT', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,601 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Rubik-Bold.ttf', name='Rubik', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,601 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-CondensedBoldItalic.ttf', name='Noto Sans', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-02-17 10:53:43,601 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAIAN.TTF', name='Maiandra GD', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,601 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2025-02-17 10:53:43,601 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,601 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerifGeorgian-Regular.ttf', name='Noto Serif Georgian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,601 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\OCRAEXT.TTF', name='OCR A Extended', style='normal', variant='normal', weight=400, stretch='expanded', size='scalable')) = 10.25
2025-02-17 10:53:43,601 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caladea-Bold.ttf', name='Caladea', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,601 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Light.ttf', name='Noto Serif', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-17 10:53:43,601 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-17 10:53:43,601 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSerifPro-LightIt.ttf', name='Source Serif Pro', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-17 10:53:43,601 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBasBI.ttf', name='Gentium Basic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,602 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,602 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,602 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansLao-Bold.ttf', name='Noto Sans Lao', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,602 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,602 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRLNSDB.TTF', name='Berlin Sans FB Demi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,602 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ENGR.TTF', name='Engravers MT', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-17 10:53:43,602 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2025-02-17 10:53:43,602 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Condensed.ttf', name='Noto Sans', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-17 10:53:43,602 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-Regular.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,602 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Carlito-BoldItalic.ttf', name='Carlito', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,602 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\INFROMAN.TTF', name='Informal Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,602 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SCHLBKB.TTF', name='Century Schoolbook', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,602 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HARNGTON.TTF', name='Harrington', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,602 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,602 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerifCondensed.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-17 10:53:43,602 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GenBasR.ttf', name='Gentium Basic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,603 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,603 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,603 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERB____.TTF', name='Perpetua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,603 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,603 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,603 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MOD20.TTF', name='Modern No. 20', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,603 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,603 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2025-02-17 10:53:43,603 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,603 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PERI____.TTF', name='Perpetua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,603 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,603 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LSANSD.TTF', name='Lucida Sans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-17 10:53:43,603 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansArmenian-Bold.ttf', name='Noto Sans Armenian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,603 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,603 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2025-02-17 10:53:43,603 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NachlieliCLM-Light.otf', name='Nachlieli CLM', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-17 10:53:43,603 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-Semibold.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2025-02-17 10:53:43,603 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Caladea-Regular.ttf', name='Caladea', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,604 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2025-02-17 10:53:43,604 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,604 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,604 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_CB.TTF', name='Bodoni MT', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2025-02-17 10:53:43,604 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,604 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,604 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,604 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BRITANIC.TTF', name='Britannic Bold', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,604 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,604 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ERASBD.TTF', name='Eras Bold ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,604 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,604 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceCodePro-Regular.ttf', name='Source Code Pro', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,604 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,604 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\COOPBL.TTF', name='Cooper Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,604 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2025-02-17 10:53:43,604 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LinLibertine_RBI_G.ttf', name='Linux Libertine G', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,604 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\HTOWERT.TTF', name='High Tower Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,604 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Amiri-Slanted.ttf', name='Amiri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,605 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,605 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,605 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSans-Italic.ttf', name='Noto Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,605 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,605 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Amiri-Regular.ttf', name='Amiri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,605 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,605 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSerif-Italic.ttf', name='Noto Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,605 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,605 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SNAP____.TTF', name='Snap ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,605 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,605 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,605 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,605 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,605 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamMonoCLM-Bold.ttf', name='Miriam Mono CLM', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,605 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MAGNETOB.TTF', name='Magneto', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,605 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoSansHebrew-Regular.ttf', name='Noto Sans Hebrew', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,605 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2025-02-17 10:53:43,606 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,606 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-Bold.ttf', name='Source Sans Pro', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,606 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\GILB____.TTF', name='Gill Sans MT', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,606 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,606 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\CALISTBI.TTF', name='Calisto MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,606 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\NotoNaskhArabicUI-Regular.ttf', name='Noto Naskh Arabic UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,606 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOD_BI.TTF', name='Bodoni MT', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,606 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,606 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 7.8986363636363635
2025-02-17 10:53:43,606 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2025-02-17 10:53:43,606 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\ReemKufi-Bold.ttf', name='Reem Kufi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,606 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\SourceSansPro-SemiboldIt.ttf', name='Source Sans Pro', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2025-02-17 10:53:43,606 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\PLAYBILL.TTF', name='Playbill', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,606 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,606 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2025-02-17 10:53:43,606 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\FELIXTI.TTF', name='Felix Titling', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2025-02-17 10:53:43,606 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2025-02-17 10:53:43,606 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\Scheherazade-Bold.ttf', name='Scheherazade', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2025-02-17 10:53:43,607 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='C:\\Windows\\Fonts\\MiriamMonoCLM-BookOblique.ttf', name='Miriam Mono CLM', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2025-02-17 10:53:43,607 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=10.0 to DejaVu Sans ('C:\\Users\\junwe\\miniconda3\\envs\\accent_recog\\lib\\site-packages\\matplotlib\\mpl-data\\fonts\\ttf\\DejaVuSans.ttf') with score of 0.050000.
2025-02-17 10:53:43,658 - matplotlib.colorbar - DEBUG - locator: <matplotlib.ticker.AutoLocator object at 0x000001F163A13130>
2025-02-17 11:50:58,248 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-02-17 11:50:58,248 - PIL.PngImagePlugin - DEBUG - STREAM b'sBIT' 41 4
2025-02-17 11:50:58,249 - PIL.PngImagePlugin - DEBUG - b'sBIT' 41 4 (unknown)
2025-02-17 11:50:58,249 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 57 9
2025-02-17 11:50:58,249 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 78 1189
2025-02-17 11:50:58,253 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-02-17 11:50:58,253 - PIL.PngImagePlugin - DEBUG - STREAM b'sBIT' 41 4
2025-02-17 11:50:58,253 - PIL.PngImagePlugin - DEBUG - b'sBIT' 41 4 (unknown)
2025-02-17 11:50:58,253 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 57 9
2025-02-17 11:50:58,253 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 78 2994
2025-02-17 11:50:58,260 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-02-17 11:50:58,260 - PIL.PngImagePlugin - DEBUG - STREAM b'sBIT' 41 4
2025-02-17 11:50:58,260 - PIL.PngImagePlugin - DEBUG - b'sBIT' 41 4 (unknown)
2025-02-17 11:50:58,260 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 57 9
2025-02-17 11:50:58,260 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 78 696
2025-02-17 11:50:58,262 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-02-17 11:50:58,262 - PIL.PngImagePlugin - DEBUG - STREAM b'sBIT' 41 4
2025-02-17 11:50:58,262 - PIL.PngImagePlugin - DEBUG - b'sBIT' 41 4 (unknown)
2025-02-17 11:50:58,262 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 57 9
2025-02-17 11:50:58,262 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 78 526
2025-02-17 11:50:58,263 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-02-17 11:50:58,264 - PIL.PngImagePlugin - DEBUG - STREAM b'sBIT' 41 4
2025-02-17 11:50:58,264 - PIL.PngImagePlugin - DEBUG - b'sBIT' 41 4 (unknown)
2025-02-17 11:50:58,264 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 57 9
2025-02-17 11:50:58,264 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 78 499
2025-02-17 11:50:58,265 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-02-17 11:50:58,265 - PIL.PngImagePlugin - DEBUG - STREAM b'sBIT' 41 4
2025-02-17 11:50:58,265 - PIL.PngImagePlugin - DEBUG - b'sBIT' 41 4 (unknown)
2025-02-17 11:50:58,265 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 57 9
2025-02-17 11:50:58,266 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 78 673
2025-02-17 11:50:58,267 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-02-17 11:50:58,268 - PIL.PngImagePlugin - DEBUG - STREAM b'sBIT' 41 4
2025-02-17 11:50:58,268 - PIL.PngImagePlugin - DEBUG - b'sBIT' 41 4 (unknown)
2025-02-17 11:50:58,268 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 57 9
2025-02-17 11:50:58,268 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 78 922
2025-02-17 11:50:58,269 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-02-17 11:50:58,269 - PIL.PngImagePlugin - DEBUG - STREAM b'sBIT' 41 4
2025-02-17 11:50:58,270 - PIL.PngImagePlugin - DEBUG - b'sBIT' 41 4 (unknown)
2025-02-17 11:50:58,270 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 57 9
2025-02-17 11:50:58,270 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 78 568
2025-02-17 11:50:58,271 - PIL.PngImagePlugin - DEBUG - STREAM b'IHDR' 16 13
2025-02-17 11:50:58,271 - PIL.PngImagePlugin - DEBUG - STREAM b'sBIT' 41 4
2025-02-17 11:50:58,271 - PIL.PngImagePlugin - DEBUG - b'sBIT' 41 4 (unknown)
2025-02-17 11:50:58,271 - PIL.PngImagePlugin - DEBUG - STREAM b'pHYs' 57 9
2025-02-17 11:50:58,271 - PIL.PngImagePlugin - DEBUG - STREAM b'IDAT' 78 626
2025-02-17 11:50:58,297 - matplotlib.colorbar - DEBUG - locator: <matplotlib.ticker.AutoLocator object at 0x000001EDF08B8FD0>
2025-02-17 11:50:58,991 - asyncio - DEBUG - Using proactor: IocpProactor
2025-02-17 11:50:59,012 - asyncio - DEBUG - Using proactor: IocpProactor
